#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
grid.arrange(lollipop_plot_2001 + scale_y_continuous(limits = c(NA,0.2)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2004+ theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_2007 + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
# plot VTs and non-VTs separately
make_lollipop_plot_justOneVT(VT=TRUE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
make_lollipop_plot_justOneVT <- function(VT,data1, data2, data3, model1, model2, model3){
# Create data
if (VT==1){
lollipop_data_2001 <- data.frame(
x=1:length(which(mass_VT==1)),
model2001=model1[which(mass_VT==1)] / sum(model1),
data2001=as.numeric(data1[which(mass_VT==1)] / sum(data1))
)
lollipop_data_2004 <- data.frame(
x=1:length(which(mass_VT==1)),
model2004=model2[which(mass_VT==1)] / sum(model2),
data2004=as.numeric(data2[which(mass_VT==1)] / sum(data2))
)
lollipop_data_2007 <- data.frame(
x=1:length(which(mass_VT==1)),
model2007=model3[which(mass_VT==1)] / sum(model3),
data2007=as.numeric(data3[which(mass_VT==1)] / sum(data3))
)
}
else{
lollipop_data_2001 <- data.frame(
x=1:length(which(mass_VT==0)),
model2001=model1[which(mass_VT==0)] / sum(model1),
data2001=as.numeric(data1[which(mass_VT==0)] / sum(data1))
)
lollipop_data_2004 <- data.frame(
x=1:length(which(mass_VT==0)),
model2004=model2[which(mass_VT==0)] / sum(model2),
data2004=as.numeric(data2[which(mass_VT==0)] / sum(data2))
)
lollipop_data_2007 <- data.frame(
x=1:length(which(mass_VT==0)),
model2007=model3[which(mass_VT==0)] / sum(model3),
data2007=as.numeric(data3[which(mass_VT==0)] / sum(data3))
)
}
# Change baseline
lollipop_plot_2001 <- ggplot(lollipop_data_2001) +
geom_segment( aes(x=x, xend=x, y=model2001, yend=data2001), color="grey") +
geom_point( aes(x=x, y=model2001, color="Model non-VT"), size=3 ) +
geom_point( aes(x=x, y=data2001, color="Data non_VT"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2001") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
lollipop_plot_2004 <- ggplot(lollipop_data_2004) +
geom_segment( aes(x=x, xend=x, y=model2004, yend=data2004), color="grey") +
geom_point( aes(x=x, y=model2004, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data2004, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2004") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
lollipop_plot_2007 <- ggplot(lollipop_data_2007) +
geom_segment( aes(x=x, xend=x, y=model2007, yend=data2007), color="grey") +
geom_point( aes(x=x, y=model2007, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data2007, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Legend") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
grid.arrange(lollipop_plot_2001 + scale_y_continuous(limits = c(NA,0.15)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2004+ theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_2007 + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
# plot VTs and non-VTs separately
make_lollipop_plot_justOneVT(VT=TRUE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
make_lollipop_plot_justOneVT(VT=FALSE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
# plot VTs and non-VTs separately
make_lollipop_plot_justOneVT(VT=TRUE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
make_lollipop_plot_justOneVT <- function(VT,data1, data2, data3, model1, model2, model3){
# Create data
if (VT==1){
lollipop_data_2001 <- data.frame(
x=1:length(which(mass_VT==1)),
model2001=model1[which(mass_VT==1)] / sum(model1),
data2001=as.numeric(data1[which(mass_VT==1)] / sum(data1))
)
lollipop_data_2004 <- data.frame(
x=1:length(which(mass_VT==1)),
model2004=model2[which(mass_VT==1)] / sum(model2),
data2004=as.numeric(data2[which(mass_VT==1)] / sum(data2))
)
lollipop_data_2007 <- data.frame(
x=1:length(which(mass_VT==1)),
model2007=model3[which(mass_VT==1)] / sum(model3),
data2007=as.numeric(data3[which(mass_VT==1)] / sum(data3))
)
}
else{
lollipop_data_2001 <- data.frame(
x=1:length(which(mass_VT==0)),
model2001=model1[which(mass_VT==0)] / sum(model1),
data2001=as.numeric(data1[which(mass_VT==0)] / sum(data1))
)
lollipop_data_2004 <- data.frame(
x=1:length(which(mass_VT==0)),
model2004=model2[which(mass_VT==0)] / sum(model2),
data2004=as.numeric(data2[which(mass_VT==0)] / sum(data2))
)
lollipop_data_2007 <- data.frame(
x=1:length(which(mass_VT==0)),
model2007=model3[which(mass_VT==0)] / sum(model3),
data2007=as.numeric(data3[which(mass_VT==0)] / sum(data3))
)
}
# Change baseline
lollipop_plot_2001 <- ggplot(lollipop_data_2001) +
geom_segment( aes(x=x, xend=x, y=model2001, yend=data2001), color="grey") +
geom_point( aes(x=x, y=model2001, color="Model non-VT"), size=3 ) +
geom_point( aes(x=x, y=data2001, color="Data non_VT"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2001") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
lollipop_plot_2004 <- ggplot(lollipop_data_2004) +
geom_segment( aes(x=x, xend=x, y=model2004, yend=data2004), color="grey") +
geom_point( aes(x=x, y=model2004, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data2004, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2004") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
lollipop_plot_2007 <- ggplot(lollipop_data_2007) +
geom_segment( aes(x=x, xend=x, y=model2007, yend=data2007), color="grey") +
geom_point( aes(x=x, y=model2007, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data2007, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Legend") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
grid.arrange(lollipop_plot_2001 + scale_y_continuous(limits = c(NA,0.15)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2004 + scale_y_continuous(limits = c(NA,0.15)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_2007 + scale_y_continuous(limits = c(NA,0.15)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
# plot VTs and non-VTs separately
make_lollipop_plot_justOneVT(VT=TRUE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
make_lollipop_plot_justOneVT(VT=FALSE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
make_lollipop_plot_justOneVT <- function(VT,data1, data2, data3, model1, model2, model3){
# Create data
if (VT==1){
lollipop_data_2001 <- data.frame(
x=1:length(which(mass_VT==1)),
model2001=model1[which(mass_VT==1)] / sum(model1),
data2001=as.numeric(data1[which(mass_VT==1)] / sum(data1))
)
lollipop_data_2004 <- data.frame(
x=1:length(which(mass_VT==1)),
model2004=model2[which(mass_VT==1)] / sum(model2),
data2004=as.numeric(data2[which(mass_VT==1)] / sum(data2))
)
lollipop_data_2007 <- data.frame(
x=1:length(which(mass_VT==1)),
model2007=model3[which(mass_VT==1)] / sum(model3),
data2007=as.numeric(data3[which(mass_VT==1)] / sum(data3))
)
}
else{
lollipop_data_2001 <- data.frame(
x=1:length(which(mass_VT==0)),
model2001=model1[which(mass_VT==0)] / sum(model1),
data2001=as.numeric(data1[which(mass_VT==0)] / sum(data1))
)
lollipop_data_2004 <- data.frame(
x=1:length(which(mass_VT==0)),
model2004=model2[which(mass_VT==0)] / sum(model2),
data2004=as.numeric(data2[which(mass_VT==0)] / sum(data2))
)
lollipop_data_2007 <- data.frame(
x=1:length(which(mass_VT==0)),
model2007=model3[which(mass_VT==0)] / sum(model3),
data2007=as.numeric(data3[which(mass_VT==0)] / sum(data3))
)
}
# Change baseline
lollipop_plot_2001 <- ggplot(lollipop_data_2001) +
geom_segment( aes(x=x, xend=x, y=model2001, yend=data2001), color="grey") +
geom_point( aes(x=x, y=model2001, color="Model non-VT"), size=3 ) +
geom_point( aes(x=x, y=data2001, color="Data non_VT"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2001") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
lollipop_plot_2004 <- ggplot(lollipop_data_2004) +
geom_segment( aes(x=x, xend=x, y=model2004, yend=data2004), color="grey") +
geom_point( aes(x=x, y=model2004, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data2004, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2004") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
lollipop_plot_2007 <- ggplot(lollipop_data_2007) +
geom_segment( aes(x=x, xend=x, y=model2007, yend=data2007), color="grey") +
geom_point( aes(x=x, y=model2007, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data2007, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Legend") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_2001$model2001),max(lollipop_data_2001$data2001),max(lollipop_data_2004$model2004),max(lollipop_data_2004$data2004),max(lollipop_data_2007$model2007),max(lollipop_data_2007$data2007)))
grid.arrange(lollipop_plot_2001 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2004 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_2007 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
make_lollipop_plot_justOneVT(VT=FALSE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
# plot VTs and non-VTs separately
make_lollipop_plot_justOneVT(VT=TRUE,data1 = mass_cluster_freq_1, data2 = mass_cluster_freq_2, data3= mass_cluster_freq_3, model1 = x[,1,1], model2 = x[,1,37], model3 = x[,1,73])
library(ggplot2)
library(gridExtra)
lollipop_cluster_freqs <- function(data1, data2, data3, model1, model2, model3){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1 / sum(model1),
data_1=as.numeric(data1 / sum(data1))
)
lollipop_data_2 <- data.frame(
x=1:length(data2),
model_2=model2 / sum(model2),
data_2=as.numeric(data2 / sum(data2))
)
lollipop_data_3 <- data.frame(
x=1:length(data3),
model_3=model3 / sum(model3),
data_3=as.numeric(data3 / sum(data3))
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color="Model non-VT"), size=3 ) +
geom_point( aes(x=x, y=data_1, color="Data non_VT"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2001") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
lollipop_plot_2 <- ggplot(lollipop_data_2) +
geom_segment( aes(x=x, xend=x, y=model_2, yend=data_2), color="grey") +
geom_point( aes(x=x, y=model_2, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data_2, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2004") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
lollipop_plot_3 <- ggplot(lollipop_data_3) +
geom_segment( aes(x=x, xend=x, y=model_3, yend=data_3), color="grey") +
geom_point( aes(x=x, y=model_3, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data_3, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Legend") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_3 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
runif(1)
runif(1)
runif(100,min=0,max=1)
# example usage
# simulated data
d1 <- runif(100,min=0,max=1)
d2 <- runif(100,min=0,max=1)
d3 <- runif(100,min=0,max=1)
# simulated model values
m1 <- runif(100,min=0,max=1)
m2 <- runif(100,min=0,max=1)
m3 <- runif(100,min=0,max=1)
lollipop_cluster_freqs(d1,d2,d3,m1,m2,m3)
lollipop_cluster_freqs <- function(data1, data2, data3, model1, model2, model3){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1 / sum(model1),
data_1=as.numeric(data1 / sum(data1))
)
lollipop_data_2 <- data.frame(
x=1:length(data2),
model_2=model2 / sum(model2),
data_2=as.numeric(data2 / sum(data2))
)
lollipop_data_3 <- data.frame(
x=1:length(data3),
model_3=model3 / sum(model3),
data_3=as.numeric(data3 / sum(data3))
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color="Model non-VT"), size=3 ) +
geom_point( aes(x=x, y=data_1, color="Data non_VT"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2001") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
lollipop_plot_2 <- ggplot(lollipop_data_2) +
geom_segment( aes(x=x, xend=x, y=model_2, yend=data_2), color="grey") +
geom_point( aes(x=x, y=model_2, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data_2, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2004") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
lollipop_plot_3 <- ggplot(lollipop_data_3) +
geom_segment( aes(x=x, xend=x, y=model_3, yend=data_3), color="grey") +
geom_point( aes(x=x, y=model_3, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data_3, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Legend") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.17)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2 +  theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_3 + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
# example usage
# simulated data
d1 <- runif(100,min=0,max=1)
d2 <- runif(100,min=0,max=1)
d3 <- runif(100,min=0,max=1)
# simulated model values
m1 <- runif(100,min=0,max=1)
m2 <- runif(100,min=0,max=1)
m3 <- runif(100,min=0,max=1)
lollipop_cluster_freqs(d1,d2,d3,m1,m2,m3)
lollipop_cluster_freqs <- function(data1, data2, data3, model1, model2, model3){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1 / sum(model1),
data_1=as.numeric(data1 / sum(data1))
)
lollipop_data_2 <- data.frame(
x=1:length(data2),
model_2=model2 / sum(model2),
data_2=as.numeric(data2 / sum(data2))
)
lollipop_data_3 <- data.frame(
x=1:length(data3),
model_3=model3 / sum(model3),
data_3=as.numeric(data3 / sum(data3))
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color="Model non-VT"), size=3 ) +
geom_point( aes(x=x, y=data_1, color="Data non_VT"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2001") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
lollipop_plot_2 <- ggplot(lollipop_data_2) +
geom_segment( aes(x=x, xend=x, y=model_2, yend=data_2), color="grey") +
geom_point( aes(x=x, y=model_2, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data_2, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Group") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = "none") +
ggtitle("2004") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
lollipop_plot_3 <- ggplot(lollipop_data_3) +
geom_segment( aes(x=x, xend=x, y=model_3, yend=data_3), color="grey") +
geom_point( aes(x=x, y=model_3, color="Model"), size=3 ) +
geom_point( aes(x=x, y=data_3, color="Data"), size=3 ) +
scale_color_manual(values = c("#E69F00", "#56B4E9"),
guide  = guide_legend(),
name   = "Legend") +
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle("2007") +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1),max(lollipop_data_1$data_1),max(lollipop_data_2$model_2),max(lollipop_data_2$data_2),max(lollipop_data_3$model_3),max(lollipop_data_3$data_3)))
grid.arrange(lollipop_plot_1 + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()) ,lollipop_plot_2 +  theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), lollipop_plot_3 + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 3, nrow=1)
}
# example usage
# simulated data
d1 <- runif(100,min=0,max=1)
d2 <- runif(100,min=0,max=1)
d3 <- runif(100,min=0,max=1)
# simulated model values
m1 <- runif(100,min=0,max=1)
m2 <- runif(100,min=0,max=1)
m3 <- runif(100,min=0,max=1)
lollipop_cluster_freqs(d1,d2,d3,m1,m2,m3)
lollipop_cluster_freqs(d1,d2,d3,m1,m2,m3)
# example usage
# simulated data
d1 <- runif(10,min=0,max=1)
d2 <- runif(10,min=0,max=1)
d3 <- runif(10,min=0,max=1)
# simulated model values
m1 <- runif(10,min=0,max=1)
m2 <- runif(10,min=0,max=1)
m3 <- runif(10,min=0,max=1)
lollipop_cluster_freqs(d1,d2,d3,m1,m2,m3)

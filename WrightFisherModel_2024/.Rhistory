ll_obs <- dpois(x = obs, lambda = lambda, log = TRUE)
}
ll_obs
}
combined_compare <- function(state, observed, pars = NULL) {
result <- 0
#data_size <- sum(mass_cluster_freq_1)
#model_size = 15000
data_size <- sum(observed)
model_size = sum(state)
for (i in 1:length(observed)){
result <- result + ll_pois(observed[i], state[i]/model_size * data_size)
}
result
}
#ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = log(0.11313856), delta = ggC_delta_data2, m = log(0.01107152), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.14340557, vacc_time = 0)
WFmodel <- WF_model$new(pars = FindGenes_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],PP_mass_cluster_freq_2) + combined_compare(x[,1,73],PP_mass_cluster_freq_3)
simMeanggCPP2 <- rowMeans(WFmodel$run(36)[-1,])
#ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = log(0.11313856), delta = ggC_delta_data2, m = log(0.01107152), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.14340557, vacc_time = 0)
WFmodel <- WF_model$new(pars = FindGenes_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel$run(72)[-1,])
combined_compare(simMeanggCPP2,data1) + combined_compare(simMeanggCPP3,data2)
combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
combined_compare(x[,2,37],PP_mass_cluster_freq_2) + combined_compare(x[,2,73],PP_mass_cluster_freq_3)
combined_compare(x[,3,37],PP_mass_cluster_freq_2) + combined_compare(x[,3,73],PP_mass_cluster_freq_3)
combined_compare(x[,4,37],PP_mass_cluster_freq_2) + combined_compare(x[,4,73],PP_mass_cluster_freq_3)
combined_compare(x[,10,37],PP_mass_cluster_freq_2) + combined_compare(x[,10,73],PP_mass_cluster_freq_3)
x[,,37]
plot(PP_mass_cluster_freq_2)
points(simMeanggCPP2, col = "blue")
length(simMeanggCPP2)
length(PP_mass_cluster_freq_2)
points(x[,1,37], col = "red")
plot(PP_mass_cluster_freq_2, type = "l")
points(simMeanggCPP2, col = "blue")
plot(simMeanggCPP2, col = "blue")
plot(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), type = "l")
points(simMeanggCPP2/sum(simMeanggCPP2), col = "blue")
points(x[,1,37]/sum(x[,1,37]), col = "red")
points(x[,2,37]/sum(x[,2,37]), col = "red")
points(x[,3,37]/sum(x[,3,37]), col = "red")
points(x[,4,37]/sum(x[,4,37]), col = "red")
points(x[,5,37]/sum(x[,5,37]), col = "red")
points(x[,6,37]/sum(x[,6,37]), col = "red")
rainbow(1)
rainbow(2)
rainbow(12)
local_cols <- rainbow(12)
plot(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), type = "l")
points(simMeanggCPP2/sum(simMeanggCPP2), col = local_cols[1])
local_cols <- rainbow(12)
plot(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), type = "l")
points(simMeanggCPP2/sum(simMeanggCPP2), col = local_cols[1])
points(x[,1,37]/sum(x[,1,37]), col = local_cols[2])
points(x[,2,37]/sum(x[,2,37]), col = local_cols[3])
points(x[,3,37]/sum(x[,3,37]), col = local_cols[4])
points(x[,4,37]/sum(x[,4,37]), col = local_cols[5])
points(x[,5,37]/sum(x[,5,37]), col = local_cols[6])
points(x[,6,37]/sum(x[,6,37]), col = local_cols[7])
points(x[,7,37]/sum(x[,7,37]), col = local_cols[8])
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l")
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1])
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim(0,0.35))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,0.35))
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1])
points(x[,1,72]/sum(x[,1,73]), col = local_cols[2])
points(x[,2,72]/sum(x[,2,73]), col = local_cols[3])
points(x[,3,72]/sum(x[,3,73]), col = local_cols[4])
points(x[,4,72]/sum(x[,4,73]), col = local_cols[5])
points(x[,5,73]/sum(x[,5,73]), col = local_cols[6])
points(x[,6,73]/sum(x[,6,73]), col = local_cols[7])
points(x[,7,73]/sum(x[,7,73]), col = local_cols[8])
points(x[,8,73]/sum(x[,8,73]), col = local_cols[9])
points(x[,9,73]/sum(x[,9,73]), col = local_cols[10])
points(x[,10,73]/sum(x[,10,73]), col = local_cols[11])
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1], pch = 4)
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,0.35))
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1], pch = 4)
points(x[,1,72]/sum(x[,1,73]), col = local_cols[2])
points(x[,2,72]/sum(x[,2,73]), col = local_cols[3])
points(x[,3,72]/sum(x[,3,73]), col = local_cols[4])
points(x[,4,72]/sum(x[,4,73]), col = local_cols[5])
points(x[,5,73]/sum(x[,5,73]), col = local_cols[6])
points(x[,6,73]/sum(x[,6,73]), col = local_cols[7])
points(x[,7,73]/sum(x[,7,73]), col = local_cols[8])
points(x[,8,73]/sum(x[,8,73]), col = local_cols[9])
points(x[,9,73]/sum(x[,9,73]), col = local_cols[10])
points(x[,10,73]/sum(x[,10,73]), col = local_cols[11])
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,0.5))
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1], pch = 4)
points(x[,1,72]/sum(x[,1,73]), col = local_cols[2])
points(x[,2,72]/sum(x[,2,73]), col = local_cols[3])
points(x[,3,72]/sum(x[,3,73]), col = local_cols[4])
points(x[,4,72]/sum(x[,4,73]), col = local_cols[5])
points(x[,5,73]/sum(x[,5,73]), col = local_cols[6])
points(x[,6,73]/sum(x[,6,73]), col = local_cols[7])
points(x[,7,73]/sum(x[,7,73]), col = local_cols[8])
points(x[,8,73]/sum(x[,8,73]), col = local_cols[9])
points(x[,9,73]/sum(x[,9,73]), col = local_cols[10])
points(x[,10,73]/sum(x[,10,73]), col = local_cols[11])
simMeanggCPP3[4]
simMeanggCPP3[4]/sum(simMeanggCPP3)
max(x[4,,72])
max(x[4,,72])//sum(x[,1,73])
max(x[4,,72])/sum(x[,1,73])
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1], pch = 4)
points(x[,1,72]/sum(x[,1,73]), col = local_cols[2])
points(x[,2,72]/sum(x[,2,73]), col = local_cols[3])
points(x[,3,72]/sum(x[,3,73]), col = local_cols[4])
points(x[,4,72]/sum(x[,4,73]), col = local_cols[5])
points(x[,5,73]/sum(x[,5,73]), col = local_cols[6])
points(x[,6,73]/sum(x[,6,73]), col = local_cols[7])
points(x[,7,73]/sum(x[,7,73]), col = local_cols[8])
points(x[,8,73]/sum(x[,8,73]), col = local_cols[9])
points(x[,9,73]/sum(x[,9,73]), col = local_cols[10])
points(x[,10,73]/sum(x[,10,73]), col = local_cols[11])
x
simMeanggCPP3 <- rowMeans(WFmodel$run(73)[-1,])
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1], pch = 4)
points(x[,1,72]/sum(x[,1,73]), col = local_cols[2])
points(x[,2,72]/sum(x[,2,73]), col = local_cols[3])
points(x[,3,72]/sum(x[,3,73]), col = local_cols[4])
points(x[,4,72]/sum(x[,4,73]), col = local_cols[5])
points(x[,5,73]/sum(x[,5,73]), col = local_cols[6])
points(x[,6,73]/sum(x[,6,73]), col = local_cols[7])
points(x[,7,73]/sum(x[,7,73]), col = local_cols[8])
points(x[,8,73]/sum(x[,8,73]), col = local_cols[9])
points(x[,9,73]/sum(x[,9,73]), col = local_cols[10])
points(x[,10,73]/sum(x[,10,73]), col = local_cols[11])
combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
line(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1, col = "orange"))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
lines(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1, col = "orange"))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
lines(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1, col = local_cols[1]))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
lines(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), col = "orange"))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
lines(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), col = "orange")
points(simMeanggCPP3/sum(simMeanggCPP3), col = local_cols[1], pch = 4)
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "l", ylim=c(0,1))
lines(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), col = "orange")
lines(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), col = "red")
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "p", ylim=c(0,1))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "p", ylim=c(0,1))
points(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), col = "orange")
points(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), col = "red")
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "p", ylim=c(0,3))
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "p", ylim=c(0,0.3))
points(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), col = "orange")
points(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), col = "red")
PP_mass_clusters
unique(PopPUNK_clusters$Cluster)
data_points_df <- df(cbind(unique(PopPUNK_clusters$Cluster), PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3)))
data_points_df <- df(matrix(cbind(unique(PopPUNK_clusters$Cluster), PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))))
data_points_df <- data.frame(matrix(cbind(unique(PopPUNK_clusters$Cluster), PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))))
View(data_points_df)
data_points_df <- data.frame(matrix(cbind(unique(PopPUNK_clusters$Cluster), PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3)), ncol = 4))
barplot(data_points_df)
barplot(data_points_df, beside = TRUE)
barplot(data_points_df[,2:4], beside = TRUE)
test <- data_points_df[1:10, "X2"]
barplot(test)
data_points_df
barplot(data_points_df,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender"),
legend = rownames(VADeaths), beside = TRUE)
barplot(data_points_df[,2:4], beside = TRUE)
barplot(data_points_df[,2])
barplot(data_points_df[,2], beside = TRUE)
unique(PopPUNK_clusters$Cluster)
# create a dataset
specie <- rep(unique(PopPUNK_clusters$Cluster),3)
# create a dataset
cluster <- rep(unique(PopPUNK_clusters$Cluster),3)
time <- rep(c("1" , "2" , "3") , length(unique(PopPUNK_clusters$Cluster)))
rep(unique(PopPUNK_clusters$Cluster),3)
time <- (c(rep("1" , length(unique(PopPUNK_clusters$Cluster))),rep("2", length(unique(PopPUNK_clusters$Cluster)),rep("3", length(unique(PopPUNK_clusters$Cluster)) )
)
)
)
time <- c(rep("1" , length(unique(PopPUNK_clusters$Cluster))),rep("2", length(unique(PopPUNK_clusters$Cluster))),rep("3", length(unique(PopPUNK_clusters$Cluster))))
time
value <- c(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3)))
value <- c(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))
data_points_df <- data.frame(cluster,time,value)
# Grouped
ggplot(data_points_df, aes(fill=time, y=value, x=cluster)) +
geom_bar(position="dodge", stat="identity")
# Grouped
library(ggplot2)
ggplot(data_points_df, aes(fill=time, y=value, x=cluster)) +
geom_bar(position="dodge", stat="identity")
cluster_iter <- rep(1:length(unique(PopPUNK_clusters$Cluster)),3)
cluster_iter
time <- c(rep("1" , length(unique(PopPUNK_clusters$Cluster))),rep("2", length(unique(PopPUNK_clusters$Cluster))),rep("3", length(unique(PopPUNK_clusters$Cluster))))
value <- c(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))
data_points_df <- data.frame(cluster,cluster_iter,time,value)
ggplot(data_points_df, aes(fill=time, y=value, x=cluster_iter)) +
geom_bar(position="dodge", stat="identity")
PP_mass_cluster_freq_1
PP_mass_cluster_freq_2
PP_mass_cluster_freq_3
PP_mass_cluster_freq_3 + PP_mass_cluster_freq_2 + PP_mass_cluster_freq_1
sum(PP_mass_cluster_freq_3 + PP_mass_cluster_freq_2 + PP_mass_cluster_freq_1)
View(PopPUNK_clusters)
nrow(PopPUNK_clusters)
cluster
which((PP_mass_cluster_freq_3 + PP_mass_cluster_freq_2 + PP_mass_cluster_freq_1)!=0)
sort(cluster)
unique(PopPUNK_clusters$Cluster)
unique(PopPUNK_clusters$Cluster)[1]
#calculate the frequency of the gene clusters and year
PP_mass_cluster_freq_1 <- rep(0,no_PopPUNK_clusters)
PP_mass_cluster_freq_2 <- rep(0,no_PopPUNK_clusters)
PP_mass_cluster_freq_3 <- rep(0,no_PopPUNK_clusters)
for (i in 1:no_PopPUNK_clusters){
PP_mass_cluster_freq_1[i] <- length(which(PopPUNK_clusters[which(PopPUNK_clusters$Cluster==unique(PopPUNK_clusters$Cluster)[i]),]$"SeqYear"==2001))
PP_mass_cluster_freq_2[i] <- length(which(PopPUNK_clusters[which(PopPUNK_clusters$Cluster==unique(PopPUNK_clusters$Cluster)[i]),]$"SeqYear"==2004))
PP_mass_cluster_freq_3[i] <- length(which(PopPUNK_clusters[which(PopPUNK_clusters$Cluster==unique(PopPUNK_clusters$Cluster)[i]),]$"SeqYear"==2007))
}
PP_mass_cluster_freq_1
PP_mass_cluster_freq_3 + PP_mass_cluster_freq_2 + PP_mass_cluster_freq_1
saveRDS(PP_mass_cluster_freq_1, file = "PP_mass_cluster_freq_1.rds")
saveRDS(PP_mass_cluster_freq_2, file = "PP_mass_cluster_freq_2.rds")
saveRDS(PP_mass_cluster_freq_3, file = "PP_mass_cluster_freq_3.rds")
plot(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), type = "p", ylim=c(0,0.3))
points(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), col = "orange")
points(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), col = "red")
# create a dataset
cluster <- rep(unique(PopPUNK_clusters$Cluster),3)
cluster_iter <- rep(1:length(unique(PopPUNK_clusters$Cluster)),3)
time <- c(rep("1" , length(unique(PopPUNK_clusters$Cluster))),rep("2", length(unique(PopPUNK_clusters$Cluster))),rep("3", length(unique(PopPUNK_clusters$Cluster))))
value <- c(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2),PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))
data_points_df <- data.frame(cluster,cluster_iter,time,value)
# Grouped
library(ggplot2)
ggplot(data_points_df, aes(fill=time, y=value, x=cluster_iter)) +
geom_bar(position="dodge", stat="identity")
PP_mass_VT
sum(PP_mass_VT)
### create initial population that is based on the 2001 data set but not an exact sampling from it
# but a Poisson process
PP_expand_factor <- 15000 / sum(PP_mass_cluster_freq_1)
exp_noise <- 10
PP_model_start_pop <- (sapply((PP_mass_cluster_freq_1 + rexp(n = length(PP_mass_cluster_freq_1), rate = exp_noise)) * PP_expand_factor, rpois, n=1))
# visual check for the "sampling"
plot(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1))
points(PP_model_start_pop/sum(PP_model_start_pop), col = "red")
saveRDS(PP_model_start_pop, file = "PP_model_start_pop.rds")
#ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = log(0.11313856), delta = ggC_delta_data2, m = log(0.01107152), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.14340557, vacc_time = 0)
WFmodel <- WF_model$new(pars = FindGenes_ggCPP_params,
time = 1,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
WFmodel$run(37)
simMeanggCPP2 <- rowMeans(WFmodel$run(37)[-1,])
#ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = log(0.11313856), delta = ggC_delta_data2, m = log(0.01107152), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.14340557, vacc_time = 0)
WFmodel <- WF_model$new(pars = FindGenes_ggCPP_params,
time = 1,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
WFmodel$run(37)
#ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = log(0.11313856), delta = ggC_delta_data2, m = log(0.01107152), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.14340557, vacc_time = 0)
WFmodel <- WF_model$new(pars = FindGenes_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel$run(0)
WFmodel$run(1)
fitting_closure_max_binary <- function(all_other_params, data1, data2){
null_fit_dfoptim_fl <- function(fit_params){
rnd_vect_full <- fit_params
all_other_params$delta_bool = rnd_vect_full
WFmodel_ggCPP <- WF$new(pars = all_other_params,
time = 1,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
#n_particles <- 10L
#n_times <- 73
#x <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
#for (t in seq_len(n_times)) {
#  x[ , , t] <- WFmodel_ggCPP$run(t)
#}
#time <- x[1, 1, ]
#x <- x[-1, , ]
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#combined_compare(simMeanggCPP2,data1) + combined_compare(simMeanggCPP3,data2)
sim1 <- WFmodel_ggCPP$run(37)
sim2 <- WFmodel_ggCPP$run(73)
combined_compare(sim1,data1) + combined_compare(sim2,data2)
#- combined_compare(x[,1,37],data1) - combined_compare(x[,1,73],data2)
}
}
### Likelihood
ll_pois <- function(obs, model) {
exp_noise <- 1e6
if (is.na(obs)) {
# Creates vector of zeros in ll with same length, if no data
ll_obs <- numeric(length(model))
} else {
lambda <- model + rexp(n = length(model), rate = exp_noise)
ll_obs <- dpois(x = obs, lambda = lambda, log = TRUE)
}
ll_obs
}
combined_compare <- function(state, observed, pars = NULL) {
result <- 0
#data_size <- sum(mass_cluster_freq_1)
#model_size = 15000
data_size <- sum(observed)
model_size = sum(state)
for (i in 1:length(observed)){
result <- result + ll_pois(observed[i], state[i]/model_size * data_size)
}
result
}
#setwd("/nfs/research/jlees/leonie/WF_fitting_2024/run3")
### load model
WF <- odin.dust::odin_dust("NFDS_Model_FindGenes.R")
fitting_closure_max_binary <- function(all_other_params, data1, data2){
null_fit_dfoptim_fl <- function(fit_params){
rnd_vect_full <- fit_params
all_other_params$delta_bool = rnd_vect_full
WFmodel_ggCPP <- WF$new(pars = all_other_params,
time = 1,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
#n_particles <- 10L
#n_times <- 73
#x <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
#for (t in seq_len(n_times)) {
#  x[ , , t] <- WFmodel_ggCPP$run(t)
#}
#time <- x[1, 1, ]
#x <- x[-1, , ]
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#combined_compare(simMeanggCPP2,data1) + combined_compare(simMeanggCPP3,data2)
sim1 <- WFmodel_ggCPP$run(37)
sim2 <- WFmodel_ggCPP$run(73)
combined_compare(sim1,data1) + combined_compare(sim2,data2)
#- combined_compare(x[,1,37],data1) - combined_compare(x[,1,73],data2)
}
}
library(parallel)
#install.packages("doParallel",repos = "http://cran.us.r-project.org")
library(doParallel)
#install.packages("doSNOW",repos = "http://cran.us.r-project.org")
library(doSNOW)
#install.packages("GA",repos = "http://cran.us.r-project.org")
library(GA)
seq_clusters <- readRDS("PopPUNK_clusters.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "ggCPP_intermed_gene_presence_absence_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
mass_VT <- readRDS(file = "PP_mass_VT_mean.rds")
mass_VT <- readRDS(file = "PP_mass_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "4param_ggCaller_PopPUNK"
# process data with particle filter:
dt <- 1/36 # we assume that the generation time of Strep. pneumo is 1 month
peripost_mass_cluster_freq <- data.frame("year" = c(1, 2), rbind(mass_cluster_freq_2, mass_cluster_freq_3))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 0
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(model_start_pop), Pop_eq = as.double(model_start_pop), capacity = sum(model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = avg_cluster_freq, vaccTypes = mass_VT, v = 0.15977862, vacc_time = 0)
ga_fit_FindGenes_ggCPP_bin <- fitting_closure_max_binary(FindGenes_ggCPP_params, mass_cluster_freq_2, mass_cluster_freq_3)
gann <- ga(type = "binary", nBits = 1770, fitness = ga_fit_FindGenes_ggCPP_bin, lower = rep(0, 1770), upper = rep(1,1770),
elitism = 2, maxiter = 5, popSize = 10, run = 10, pcrossover = 0.8, pmutation = 0.1, crossover = gabin_spCrossover, mutation = gabin_raMutation, parallel = 48)
gann <- ga(type = "binary", nBits = 1770, fitness = ga_fit_FindGenes_ggCPP_bin, lower = rep(0, 1770), upper = rep(1,1770),
elitism = 2, maxiter = 5, popSize = 10, run = 10, pcrossover = 0.8, pmutation = 0.1, crossover = gabin_spCrossover, mutation = gabin_raMutation)
exp(-2.5)
exp(-2)
exp(-2.1045558)
exp(-2.6229395)
WF_model <- odin.dust::odin_dust("NFDS_Model.R")
seq_clusters <- readRDS("Navajo_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "Navajo_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "Navajo_model_start_pop.rds")
delta_ranking <- readRDS(file = "Navajo_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "Navajo_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "Navajo_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "Navajo_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "Navajo_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "Navajo_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "Navajo_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "Navajo_cluster_freqs_7.rds")
mass_cluster_freq_8 <- readRDS(file = "Navajo_cluster_freqs_8.rds")
mass_cluster_freq_9 <- readRDS(file = "Navajo_cluster_freqs_9.rds")
mass_cluster_freq_10 <- readRDS(file = "Navajo_cluster_freqs_10.rds")
mass_cluster_freq_11 <- readRDS(file = "Navajo_cluster_freqs_11.rds")
mass_cluster_freq_12 <- readRDS(file = "Navajo_cluster_freqs_12.rds")
mass_cluster_freq_13 <- readRDS(file = "Navajo_cluster_freqs_13.rds")
mass_cluster_freq_14 <- readRDS(file = "Navajo_cluster_freqs_14.rds")
mass_cluster_freq_15 <- readRDS(file = "Navajo_cluster_freqs_15.rds")
mass_VT <- readRDS(file = "Navajo_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "Navajo_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:14, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7, mass_cluster_freq_8, mass_cluster_freq_9,mass_cluster_freq_10, mass_cluster_freq_11, mass_cluster_freq_12, mass_cluster_freq_13,mass_cluster_freq_14,mass_cluster_freq_15))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 5
ggCPP_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double( model_start_pop), Pop_eq = as.double( model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = log(0.11313856), delta = ggC_delta_data2, m = log(0.01107152), migVec =  avg_cluster_freq, vaccTypes =  mass_VT, v = 0.14340557, vacc_time = 0)
ggCPP_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double( model_start_pop), Pop_eq = as.double( model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.1045558, prop_f = 0.2779808, sigma_w =0 , delta = delta_ranking, m = -2.6229395, migVec =  avg_cluster_freq, vaccTypes =  mass_VT, v = 0.2710917 , vacc_time = 0)
WFmodel <- WF_model$new(pars = FindGenes_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
delta_ranking
WFmodel <- WF_model$new(pars = ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WF_model <- odin.dust::odin_dust("NFDS_Model.R")
seq_clusters <- readRDS("Navajo_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "Navajo_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "Navajo_model_start_pop.rds")
delta_ranking <- readRDS(file = "Navajo_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "Navajo_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "Navajo_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "Navajo_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "Navajo_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "Navajo_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "Navajo_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "Navajo_cluster_freqs_7.rds")
mass_cluster_freq_8 <- readRDS(file = "Navajo_cluster_freqs_8.rds")
mass_cluster_freq_9 <- readRDS(file = "Navajo_cluster_freqs_9.rds")
mass_cluster_freq_10 <- readRDS(file = "Navajo_cluster_freqs_10.rds")
mass_cluster_freq_11 <- readRDS(file = "Navajo_cluster_freqs_11.rds")
mass_cluster_freq_12 <- readRDS(file = "Navajo_cluster_freqs_12.rds")
mass_cluster_freq_13 <- readRDS(file = "Navajo_cluster_freqs_13.rds")
mass_cluster_freq_14 <- readRDS(file = "Navajo_cluster_freqs_14.rds")
mass_cluster_freq_15 <- readRDS(file = "Navajo_cluster_freqs_15.rds")
mass_VT <- readRDS(file = "Navajo_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "Navajo_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:14, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7, mass_cluster_freq_8, mass_cluster_freq_9,mass_cluster_freq_10, mass_cluster_freq_11, mass_cluster_freq_12, mass_cluster_freq_13,mass_cluster_freq_14,mass_cluster_freq_15))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 5
ggCPP_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double( model_start_pop), Pop_eq = as.double( model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.1045558, prop_f = 0.2779808, sigma_w =0 , delta = delta_ranking, m = -2.6229395, migVec =  avg_cluster_freq, vaccTypes =  mass_VT, v = 0.2710917 , vacc_time = 0)
WFmodel <- WF_model$new(pars = ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
source("CreateLollipopPlot.R")
PP_serotype_comp
View(seq_clusters)
# compute serotype composition of PP clusters
Navajo_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
Navajo_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
Navajo_PP_serotype_comp
WFmodel$run(1)
WFmodel$run(2)
(12*14)-1
(12*14)+1
simMeanggCPP5_Navajo <- rowMeans(WFmodel$run(169)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2009", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_15/sum(mass_cluster_freq_15), model_name_1 ="Model", model1 = simMeanggCPP5_Navajo/sum(simMeanggCPP5_Navajo), SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2009", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_15/sum(mass_cluster_freq_15), model_name_1 ="Model", model1 = simMeanggCPP5_Navajo/sum(simMeanggCPP5_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
plot(mass_cluster_freq_15)
plot(mass_cluster_freq_14)
(12*13)+1
WFmodel <- WF_model$new(pars = ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP5_Navajo <- rowMeans(WFmodel$run(157)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2009", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="Model", model1 = simMeanggCPP5_Navajo/sum(simMeanggCPP5_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 14", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="Model", model1 = simMeanggCPP5_Navajo/sum(simMeanggCPP5_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)

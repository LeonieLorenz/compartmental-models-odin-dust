lambda <- -2 * (step_LL_null - log_LL_yshift)
pchisq(lambda, 5-2, lower.tail = FALSE)
lambda <- -2 * (log_LL_3param - log_LL_5param)
pchisq(lambda, 5-3, lower.tail = FALSE)
# significant!
# the 5-param model is significantly better than the 3-param model
lambda <- -2 * (log_LL_3param - log_LL_4param)
pchisq(lambda, 4-3, lower.tail = FALSE)
# significant!
# the 4-param model is significantly better than the 3-param model
lambda <- -2 * (log_LL_4param - log_LL_5param)
pchisq(lambda, 5-4, lower.tail = FALSE)
# yshift model:
lambda <- -2 * (log_LL_4param - log_LL_yshift)
pchisq(lambda, 5-4, lower.tail = FALSE)
# yshift model not significantly better than 4-param model
lambda <- -2 * (log_LL_3param - log_LL_yshift)
pchisq(lambda, 5-3, lower.tail = FALSE)
lambda <- -2 * (step_LL_3param - step_LL_5param)
pchisq(lambda, 5-3, lower.tail = FALSE)
# significant!
# the 5-param model is significantly better than the 3-param model
lambda <- -2 * (step_LL_3param - step_LL_4param)
pchisq(lambda, 4-3, lower.tail = FALSE)
# significant!
# the 4-param model is significantly better than the 3-param model
lambda <- -2 * (step_LL_4param - step_LL_5param)
pchisq(lambda, 5-4, lower.tail = FALSE)
# not significant: 5-parameter model not significantly better than 4-parameter model
lambda <- -2 * (step_LL_null - step_LL_3param)
pchisq(lambda, 3-2, lower.tail = FALSE)
# not significant: 3-parameter model not significantly better than 2-parameter model
lambda <- -2 * (step_LL_null - step_LL_4param)
pchisq(lambda, 4-2, lower.tail = FALSE)
# significant: 4-param model better than null model
lambda <- -2 * (step_LL_null - step_LL_5param)
pchisq(lambda, 5-2, lower.tail = FALSE)
View(Mass_Samples_accCodes)
which(Mass_Samples_accCodes$SequenceCluster==0)
Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==0)]
Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==0)])unique()
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==0)])
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
library(ggplot2)
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_to_manSeq_dict
PP_to_manSeq_dict[1]
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])])
word <- unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])])
word
source("CreateLollipopPlot.R")
# Creating a joint Lollipop plot for VTs and NVTs
lollipop_cluster_freqs_VTandNVT <- function(year = "year unknown", plot_title = "Generic Plot Title",data1, model_name_1 ="Model 1", model1, VT_vec){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1,
data_1=as.numeric(data1),
Vaccine_Types <- sapply(VT_vec, function(x) if(x==1){"VT"}else{"NVT"})
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color=model_name_1, shape = Vaccine_Types), size=3, stroke = 2) +
geom_point( aes(x=x, y=data_1, color="Data",shape = Vaccine_Types), size=3,  stroke = 2) +
#geom_point( aes(x=x, y=model_1, color=model_name_1), size=5, alpha = 0.7) +
#geom_point( aes(x=x, y=data_1, color="Data"), size=5, alpha = 0.7) +
#geom_point(aes(x=x, y=model_2, color=model_name_2), size=5, alpha = 0.7) +
scale_color_manual(values = c("#E69F00","#56B4E9","#CC79A7"),
guide  = guide_legend(),
name   = "Group") +
scale_shape_manual(values=c(19, 1))+
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle(year) +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.2)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank(),axis.text.x = element_blank()), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
# Creating a joint Lollipop plot for VTs and NVTs
lollipop_cluster_freqs_VTandNVT <- function(year = "year unknown", plot_title = "Generic Plot Title",data1, model_name_1 ="Model 1", model1, VT_vec){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1,
data_1=as.numeric(data1),
Vaccine_Types <- sapply(VT_vec, function(x) if(x==1){"VT"}else{"NVT"})
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color=model_name_1, shape = Vaccine_Types), size=3, stroke = 2) +
geom_point( aes(x=x, y=data_1, color="Data",shape = Vaccine_Types), size=3,  stroke = 2) +
#geom_point( aes(x=x, y=model_1, color=model_name_1), size=5, alpha = 0.7) +
#geom_point( aes(x=x, y=data_1, color="Data"), size=5, alpha = 0.7) +
#geom_point(aes(x=x, y=model_2, color=model_name_2), size=5, alpha = 0.7) +
scale_color_manual(values = c("#E69F00","#56B4E9","#CC79A7"),
guide  = guide_legend(),
name   = "Group") +
scale_shape_manual(values=c(19, 1))+
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle(year) +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.2)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm")), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
# Creating a joint Lollipop plot for VTs and NVTs
lollipop_cluster_freqs_VTandNVT <- function(year = "year unknown", plot_title = "Generic Plot Title",data1, model_name_1 ="Model 1", model1, VT_vec){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1,
data_1=as.numeric(data1),
Vaccine_Types <- sapply(VT_vec, function(x) if(x==1){"VT"}else{"NVT"})
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color=model_name_1, shape = Vaccine_Types), size=3, stroke = 2) +
geom_point( aes(x=x, y=data_1, color="Data",shape = Vaccine_Types), size=3,  stroke = 2) +
#geom_point( aes(x=x, y=model_1, color=model_name_1), size=5, alpha = 0.7) +
#geom_point( aes(x=x, y=data_1, color="Data"), size=5, alpha = 0.7) +
#geom_point(aes(x=x, y=model_2, color=model_name_2), size=5, alpha = 0.7) +
scale_color_manual(values = c("#E69F00","#56B4E9","#CC79A7"),
guide  = guide_legend(),
name   = "Group") +
scale_shape_manual(values=c(19, 1))+
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle(year) +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.2)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = 10:72), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
as.character(10:72)
# Creating a joint Lollipop plot for VTs and NVTs
lollipop_cluster_freqs_VTandNVT <- function(year = "year unknown", plot_title = "Generic Plot Title",data1, model_name_1 ="Model 1", model1, VT_vec){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1,
data_1=as.numeric(data1),
Vaccine_Types <- sapply(VT_vec, function(x) if(x==1){"VT"}else{"NVT"})
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color=model_name_1, shape = Vaccine_Types), size=3, stroke = 2) +
geom_point( aes(x=x, y=data_1, color="Data",shape = Vaccine_Types), size=3,  stroke = 2) +
#geom_point( aes(x=x, y=model_1, color=model_name_1), size=5, alpha = 0.7) +
#geom_point( aes(x=x, y=data_1, color="Data"), size=5, alpha = 0.7) +
#geom_point(aes(x=x, y=model_2, color=model_name_2), size=5, alpha = 0.7) +
scale_color_manual(values = c("#E69F00","#56B4E9","#CC79A7"),
guide  = guide_legend(),
name   = "Group") +
scale_shape_manual(values=c(19, 1))+
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle(year) +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 20), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.2)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = as.character(11:72)), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
as.character(2:63)
c("D0.5", "D1", "D2")
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_mass_cluster_freq_1
length(PP_mass_cluster_freq_1)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])])
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1:2])])
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[2])])
PP_mass_clusters <- length(unique(PopPUNK_clusters$Cluster))
PP_serotype_comp <- rep(0, PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp <- unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[i])])
}
PP_serotype_comp
PP_serotype_comp <- rep(0, PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[i])])
}
PP_serotype_comp
PP_serotype_comp <- list()
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[[i]] <- unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[i])])
}
PP_serotype_comp
# Creating a joint Lollipop plot for VTs and NVTs
lollipop_cluster_freqs_VTandNVT <- function(year = "year unknown", plot_title = "Generic Plot Title",data1, model_name_1 ="Model 1", model1, VT_vec){
lollipop_data_1 <- data.frame(
x=1:length(data1),
model_1=model1,
data_1=as.numeric(data1),
Vaccine_Types <- sapply(VT_vec, function(x) if(x==1){"VT"}else{"NVT"})
)
# Change baseline
lollipop_plot_1 <- ggplot(lollipop_data_1) +
geom_segment( aes(x=x, xend=x, y=model_1, yend=data_1), color="grey") +
geom_point( aes(x=x, y=model_1, color=model_name_1, shape = Vaccine_Types), size=3, stroke = 2) +
geom_point( aes(x=x, y=data_1, color="Data",shape = Vaccine_Types), size=3,  stroke = 2) +
#geom_point( aes(x=x, y=model_1, color=model_name_1), size=5, alpha = 0.7) +
#geom_point( aes(x=x, y=data_1, color="Data"), size=5, alpha = 0.7) +
#geom_point(aes(x=x, y=model_2, color=model_name_2), size=5, alpha = 0.7) +
scale_color_manual(values = c("#E69F00","#56B4E9","#CC79A7"),
guide  = guide_legend(),
name   = "Group") +
scale_shape_manual(values=c(19, 1))+
coord_flip()+
#theme_ipsum() +
theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggtitle(year) +
ylab("Frequency") +
xlab("Clusters") +
theme(axis.title  = element_text(size = 20), axis.text = element_text(size = 15), plot.title = element_text(size = 25,hjust = 0.5))  +
ylim(0, max(max(lollipop_data_1$model_1)))
grid.arrange(lollipop_plot_1 + scale_y_continuous(limits = c(NA,0.2)) + theme(plot.margin = unit(c(.5,0.5,1,0.5), "cm"),axis.text.y = element_blank()), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_serotype_comp
unlist(PP_serotype_comp)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])])
paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])]), collapse = "")
paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])]), collapse = ", ")
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])]), collapse = ", ")
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[i])]), collapse = ", ")
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_serotype_comp
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
View(PopPUNK_clusters)
PopPUNK_clusters <- read.csv("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/Data/refined_modelfitk3_clusters.csv")
no_PopPUNK_clusters <- length(unique(PopPUNK_clusters$Cluster)) # number of clusters in dataset
# Add Isolate Name to PopPUNK data frame
accNo_to_filename <- read.delim("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/Data/filereport_read_run_PRJEB2632_tsv.txt")
accNo_to_filename <- accNo_to_filename[,c(1,8)]
accNo_to_filename[,3] <- matrix(unlist(strsplit(accNo_to_filename[,2],"/")), ncol=6, byrow = TRUE)[,6]
accNo_to_filename[,3] <- matrix(unlist(strsplit(accNo_to_filename[,3],"[.]")), ncol=2, byrow = TRUE)[,1]
accNo_to_filename <- accNo_to_filename[,c(1,3)]
colnames(accNo_to_filename) <- c(colnames(accNo_to_filename)[1], "filenames")
filenameToAccNo_dict <- accNo_to_filename$run_accession
names(filenameToAccNo_dict) <- accNo_to_filename$filenames
AccNoToIsolate_dict <- Mass_Samples_accCodes$`Isolate Name`
names(AccNoToIsolate_dict) <- Mass_Samples_accCodes$`Accession Code`
PopPUNK_clusters$IsolateName <- AccNoToIsolate_dict[filenameToAccNo_dict[PopPUNK_clusters$Taxon]]
# Add VT information
VT_dict <- Mass_Samples_accCodes$`Vaccine Type`
names(VT_dict) <- Mass_Samples_accCodes$`Isolate Name`
PopPUNK_clusters$VT <- VT_dict[PopPUNK_clusters$IsolateName]
# Add sequencing year information
SeqYear_dict <- Mass_Samples_accCodes$`Year of Isolation`
names(SeqYear_dict) <- Mass_Samples_accCodes$`Isolate Name`
PopPUNK_clusters$SeqYear <- SeqYear_dict[PopPUNK_clusters$IsolateName]
# Add Serotype Information
Serotype_dict <- Mass_Samples_accCodes$Serotype
names(Serotype_dict) <- Mass_Samples_accCodes$`Isolate Name`
PopPUNK_clusters$Serotype <- Serotype_dict[PopPUNK_clusters$IsolateName]
View(PopPUNK_clusters)
#save model start population
saveRDS(PopPUNK_clusters, file = "PopPUNK_clusters.rds")
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
View(PopPUNK_clusters)
### not necessary anymore, I added the Serotype information to the PopPUNK data frame
unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==1)])
# use this instead:
#unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==1)])
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==i)]), collapse = ", ")
}
PP_serotype_comp
View(Mass_Samples_accCodes)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
length(data1)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
# real ggCPP fit (step function model)
### ggCaller PopPUNK
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1133391187, sigma_w = 0.0003826182, prop_f = 0.3803189582, delta = ggC_delta_ranking, m = 0.0108386117, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1441624728, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
# real ggCPP fit (step function model)
### ggCaller PopPUNK
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1133391187, sigma_w = 0.0003826182, prop_f = 0.3803189582, delta = ggC_delta_ranking, m = 0.0108386117, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1441624728, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# Example
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
# ggCPP fit (logistic function model)
WF_log <- odin.dust::odin_dust("NFDS_Model_logistic.R")
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)

time
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#ggCPP_trajectory <- WFmodel_ggCPP$run(72)
n_particles <- 1L
n_times <- 144
ggCPP_trajectory <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in 0:(n_times)) {
ggCPP_trajectory[ , , t] <- WFmodel_ggCPP$run(t)
}
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#ggCPP_trajectory <- WFmodel_ggCPP$run(72)
n_particles <- 1L
n_times <- 144
ggCPP_trajectory <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in 0:(n_times)) {
ggCPP_trajectory[ , , t] <- WFmodel_ggCPP$run(t)
}
time <- ggCPP_trajectory[1, 1, ]
ggCPP_trajectory <- ggCPP_trajectory[-1, , ]
time
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
WFmodel_ggCPP$run(0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#ggCPP_trajectory <- WFmodel_ggCPP$run(72)
n_particles <- 1L
n_times <- 144
ggCPP_trajectory <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in 0:(n_times)) {
ggCPP_trajectory[ , , t+1] <- WFmodel_ggCPP$run(t)
}
time <- ggCPP_trajectory[1, 1, ]
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#ggCPP_trajectory <- WFmodel_ggCPP$run(72)
n_particles <- 1L
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
#simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
#simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
#ggCPP_trajectory <- WFmodel_ggCPP$run(72)
n_particles <- 1L
n_times <- 144
ggCPP_trajectory <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times+1))
for (t in 0:(n_times)) {
ggCPP_trajectory[ , , t+1] <- WFmodel_ggCPP$run(t)
}
time <- ggCPP_trajectory[1, 1, ]
ggCPP_trajectory <- ggCPP_trajectory[-1, , ]
time
ggCPP_trajectory <- ggCPP_trajectory[-1, , ]
time <- ggCPP_trajectory[1, 1, ]
ggCPP_trajectory <- ggCPP_trajectory[-1, , ]
all_colors = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
rnd_colors <- sample(all_colors,nrow(ggCPP_trajectory))
plot(time, ggCPP_trajectory[1,]/colSums(ggCPP_trajectory), ylim = c(0,0.3), type = "l", col = rnd_colors[1])
points(0,PP_mass_cluster_freq_1[1]/sum(PP_mass_cluster_freq_1), pch = 19, col = rnd_colors[1])
points(1,PP_mass_cluster_freq_2[1]/sum(PP_mass_cluster_freq_2), pch = 19, col = rnd_colors[1])
points(2,PP_mass_cluster_freq_3[1]/sum(PP_mass_cluster_freq_3), pch = 19, col = rnd_colors[1])
for (i in 2:nrow(ggCPP_trajectory)) {
lines(time,ggCPP_trajectory[i,]/colSums(ggCPP_trajectory), col = rnd_colors[i])
points(0,PP_mass_cluster_freq_1[i]/sum(PP_mass_cluster_freq_1), pch = 19, col = rnd_colors[i])
points(1,PP_mass_cluster_freq_2[i]/sum(PP_mass_cluster_freq_2), pch = 19, col = rnd_colors[i])
points(2,PP_mass_cluster_freq_3[i]/sum(PP_mass_cluster_freq_3), pch = 19, col = rnd_colors[i])
}
# do the same for all clusters that occur at least three times in the dataset (across all time points)
first_plot_point <- which((PP_mass_cluster_freq_1 + PP_mass_cluster_freq_2 + PP_mass_cluster_freq_3)>=3)[1]
plot(time, ggCPP_trajectory[first_plot_point,]/colSums(ggCPP_trajectory), ylim = c(0,0.3), type = "l", col = rnd_colors[first_plot_point])
points(0,PP_mass_cluster_freq_1[first_plot_point]/sum(PP_mass_cluster_freq_1), pch = 19, col = rnd_colors[first_plot_point])
points(1,PP_mass_cluster_freq_2[first_plot_point]/sum(PP_mass_cluster_freq_2), pch = 19, col = rnd_colors[first_plot_point])
points(2,PP_mass_cluster_freq_3[first_plot_point]/sum(PP_mass_cluster_freq_3), pch = 19, col = rnd_colors[first_plot_point])
for (i in which((PP_mass_cluster_freq_1 + PP_mass_cluster_freq_2 + PP_mass_cluster_freq_3)>=3)[-1]) {
lines(time,ggCPP_trajectory[i,]/colSums(ggCPP_trajectory), col = rnd_colors[i])
points(0,PP_mass_cluster_freq_1[i]/sum(PP_mass_cluster_freq_1), pch = 19, col = rnd_colors[i])
points(1,PP_mass_cluster_freq_2[i]/sum(PP_mass_cluster_freq_2), pch = 19, col = rnd_colors[i])
points(2,PP_mass_cluster_freq_3[i]/sum(PP_mass_cluster_freq_3), pch = 19, col = rnd_colors[i])
}
# do this for all cluster that occur with at least 2.5% frequency in at least one time point (is what Corander et al. did)
frequent_clusters <- unique(c(which(PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1) >= 0.025),which(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2) >= 0.025),which(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3) >= 0.025)))
first_plot_point <- frequent_clusters[1]
plot(time, ggCPP_trajectory[first_plot_point,]/colSums(ggCPP_trajectory), ylim = c(0,0.2), type = "l", col = rnd_colors[first_plot_point])
points(0,PP_mass_cluster_freq_1[first_plot_point]/sum(PP_mass_cluster_freq_1), pch = 19, col = rnd_colors[first_plot_point])
points(1,PP_mass_cluster_freq_2[first_plot_point]/sum(PP_mass_cluster_freq_2), pch = 19, col = rnd_colors[first_plot_point])
points(2,PP_mass_cluster_freq_3[first_plot_point]/sum(PP_mass_cluster_freq_3), pch = 19, col = rnd_colors[first_plot_point])
for (i in frequent_clusters[-1]) {
lines(time,ggCPP_trajectory[i,]/colSums(ggCPP_trajectory), col = rnd_colors[i])
points(0,PP_mass_cluster_freq_1[i]/sum(PP_mass_cluster_freq_1), pch = 19, col = rnd_colors[i])
points(1,PP_mass_cluster_freq_2[i]/sum(PP_mass_cluster_freq_2), pch = 19, col = rnd_colors[i])
points(2,PP_mass_cluster_freq_3[i]/sum(PP_mass_cluster_freq_3), pch = 19, col = rnd_colors[i])
}
# make bar plots instead
barplot(ggCPP_trajectory[first_plot_point,1]/colSums(ggCPP_trajectory))
# make bar plots instead
barplot(ggCPP_trajectory[first_plot_point,1]/colSums(ggCPP_trajectory[,1]))
# make bar plots instead
barplot(ggCPP_trajectory[first_plot_point,1]/sum(ggCPP_trajectory[,1]))
# make bar plots instead
barplot(ggCPP_trajectory[first_plot_point,c(1,2,3)]/sum(ggCPP_trajectory[,c(1,2,3)]))
# make bar plots instead
ggCPP1 <- ggCPP_trajectory[,1]
# make bar plots instead
ggCPP1 <- ggCPP_trajectory[,1]
ggCPP2 <- ggCPP_trajectory[,37]
ggCPP2 <- ggCPP_trajectory[,73]
ggCPP2 <- ggCPP_trajectory[,37]
ggCPP3 <- ggCPP_trajectory[,73]
barplot(ggCPP1/sum(ggCPP1))
length(frequent_clusters)
frequent_clusters
sort(frequent_clusters)
frequent_clusters <- sort(frequent_clusters)
sort(rep(1:frequent_clusters),3)
sort(rep(1:frequent_clusters,3))
sort(rep((1:frequent_clusters),3))
rep((1:frequent_clusters),3)
sort(rep(1:length(frequent_clusters)),3)
sort(rep(1:length(frequent_clusters),3))
frequent_clusters
length(ggCPP1)
barplot_df <- data.frame(time = sort(rep(c(1,2,3),length(frequent_clusters))), cluster = rep(1:length(frequent_clusters),3), model = c((ggCPP1/sum(ggCPP1))[frequent_clusters], (ggCPP2/sum(ggCPP2))[frequent_clusters], (ggCPP3/sum(ggCPP3))[frequent_clusters]), data = c((PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1)[frequent_clusters],(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2)[frequent_clusters],(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3)[frequent_clusters] )))
barplot_df <- data.frame(time = sort(rep(c(1,2,3),length(frequent_clusters))), cluster = rep(1:length(frequent_clusters),3), model = c((ggCPP1/sum(ggCPP1))[frequent_clusters], (ggCPP2/sum(ggCPP2))[frequent_clusters], (ggCPP3/sum(ggCPP3))[frequent_clusters]), data = c((PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1))[frequent_clusters],(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2))[frequent_clusters],(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))[frequent_clusters]))
ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge())
library(ggplot2)
ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge())
View(barplot_df)
barplot_df <- data.frame(time = sort(rep(c("2001","2004","2007"),length(frequent_clusters))), cluster = rep(1:length(frequent_clusters),3), model = c((ggCPP1/sum(ggCPP1))[frequent_clusters], (ggCPP2/sum(ggCPP2))[frequent_clusters], (ggCPP3/sum(ggCPP3))[frequent_clusters]), data = c((PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1))[frequent_clusters],(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2))[frequent_clusters],(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))[frequent_clusters]))
ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
p1 <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
p2 <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
grid.arrange(p1,p2, ncol=1)
library(gridExtra)
grid.arrange(p1,p2, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
library(gridExtra)
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_discrete(frequent_clusters)
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
library(gridExtra)
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_discrete("Strains", breaks = 1:length(frequent_clusters),labels = frequent_clusters )
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
library(gridExtra)
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_discrete("Strains", breaks = 1:length(frequent_clusters),labels = as.character(frequent_clusters))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
grid.arrange(p_data,p_model, ncol=1)
as.character(frequent_clusters)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_discrete("Strains", breaks = as.character(1:length(frequent_clusters)),labels = as.character(frequent_clusters))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
grid.arrange(p_data,p_model, ncol=1)
barplot_df <- data.frame(time = sort(rep(c("2001","2004","2007"),length(frequent_clusters))), cluster = as.character(rep(1:length(frequent_clusters),3)), model = c((ggCPP1/sum(ggCPP1))[frequent_clusters], (ggCPP2/sum(ggCPP2))[frequent_clusters], (ggCPP3/sum(ggCPP3))[frequent_clusters]), data = c((PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1))[frequent_clusters],(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2))[frequent_clusters],(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))[frequent_clusters]))
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_discrete("Strains", breaks = as.character(1:length(frequent_clusters)),labels = as.character(frequent_clusters))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=as.integer(cluster), y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_discrete("Strains", breaks = as.character(1:length(frequent_clusters)),labels = as.character(frequent_clusters))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7"))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = as.character(1:length(frequent_clusters)),labels = as.character(frequent_clusters))
grid.arrange(p_data,p_model, ncol=1)
as.character(1:length(frequent_clusters))
barplot_df <- data.frame(time = sort(rep(c("2001","2004","2007"),length(frequent_clusters))), cluster = (rep(1:length(frequent_clusters),3)), model = c((ggCPP1/sum(ggCPP1))[frequent_clusters], (ggCPP2/sum(ggCPP2))[frequent_clusters], (ggCPP3/sum(ggCPP3))[frequent_clusters]), data = c((PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1))[frequent_clusters],(PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2))[frequent_clusters],(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))[frequent_clusters]))
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))
grid.arrange(p_data,p_model, ncol=1)
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.2))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.2))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
theme(panel.grid.minor.x = element_line(color = 2,
size = 0.25,
linetype = 1))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
theme(panel.grid.minor.x = linewidth(color = 2,
size = 0.25,
linetype = 1))
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = as.character(1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175))
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
geom_vline(xintercept = 1.5)
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
geom_vline(xintercept = 1.5, col = "red")
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
grid.arrange(p_data,p_model, ncol=1)
seq(from=.5, to=length(frequent_clusters)+.5, by = 1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
geom_vline(xintercept = seq(from=.5, to=length(frequent_clusters)+.5, by = 1), col = "red")
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
geom_vline(xintercept = seq(from=.5, to=length(frequent_clusters)+.5, by = 1), col = "grey")
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175))
library(gridExtra)
grid.arrange(p_data,p_model, ncol=1)
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175)) +
geom_vline(xintercept = seq(from=.5, to=length(frequent_clusters)+.5, by = 1), col = "grey")
grid.arrange(p_data,p_model, ncol=1)
p_model <- ggplot(data=barplot_df, aes(x=cluster, y=model, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters)) +
scale_y_continuous(name="Frequency in model", limits=c(0, 0.175)) +
geom_vline(xintercept = seq(from=.5, to=length(frequent_clusters)+.5, by = 1), col = "grey") +
theme(text = element_text(size = 20))
grid.arrange(p_data,p_model, ncol=1)
p_data <- ggplot(data=barplot_df, aes(x=cluster, y=data, fill=time)) +
geom_bar(stat="identity", position=position_dodge()) + scale_fill_manual(values=c("#E69F00","#D55E00", "#CC79A7")) +
scale_x_continuous("Strains", breaks = (1:length(frequent_clusters)),labels = as.character(frequent_clusters))  +
scale_y_continuous(name="Frequency in data", limits=c(0, 0.175)) +
geom_vline(xintercept = seq(from=.5, to=length(frequent_clusters)+.5, by = 1), col = "grey") +
theme(text = element_text(size = 20))
grid.arrange(p_data,p_model, ncol=1)
mmseq_results_MassNavajo <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/mmseq_results_MassNavajo.m8", header=FALSE)
gene_presence_absence <- read.csv("~/Documents/PhD_Project/Data/Massachusetts_ggcaller/run_withFuncAnn/ggCaller_output/gene_presence_absence.csv")
View(gene_presence_absence)
### try mapping annotation instead
mass_gene_presence_absence <- read.csv("~/Documents/PhD_Project/Data/Massachusetts_ggcaller/run_withFuncAnn/ggCaller_output/gene_presence_absence.csv")
gene_presence_absence <- read.csv("~/Documents/PhD_Project/Data/StrepPneumo_NavajoNew/ggCaller_output/gene_presence_absence.csv")
View(gene_presence_absence)
navajo_gene_presence_absence <- read.csv("~/Documents/PhD_Project/Data/StrepPneumo_NavajoNew/ggCaller_output/gene_presence_absence.csv")
head(mass_gene_presence_absence[,1])
head(names(mass_gene_presence_absence))
head(mass_gene_presence_absence[,3])
head(navajo_gene_presence_absence[,3])
mass_gene_anno_dict <- mass_gene_presence_absence$Gene
names(mass_gene_anno_dict) <- mass_gene_presence_absence$Annotation
navajo_anno_gene_dict <- navajo_gene_presence_absence$Annotation
names(navajo_anno_gene_dict) <- navajo_gene_presence_absence$Gene
navajo_anno_gene_dict[1]
mass_gene_anno_dict[navajo_anno_gene_dict[1]]
mass_gene_anno_dict[navajo_anno_gene_dict[2]]
mass_gene_anno_dict[navajo_anno_gene_dict[3]]
mass_gene_anno_dict[navajo_anno_gene_dict[4]]
mass_gene_anno_dict[navajo_anno_gene_dict[4]]
mass_gene_anno_dict[navajo_anno_gene_dict[4]]
navajo_gene_anno_dict[mass_anno_gene_dict[4]]
navajo_anno_gene_dict[mass_gene_anno_dict[4]]
navajo_anno_gene_dict[mass_gene_anno_dict[4]]
navajo_anno_gene_dict[mass_gene_anno_dict[2]]
View(mass_gene_presence_absence)
mass_gene_presence_absence[1,3]
mass_gene_presence_absence[2,3]
strsplit(mass_gene_presence_absence[2,3],"SPARC")
strsplit(mass_gene_presence_absence[2,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[2,3],"SPARC")[[1]])]
strsplit(mass_gene_presence_absence[2,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[2,3],"SPARC")[[1]])]
strsplit(mass_gene_presence_absence[3,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[2,3],"SPARC")[[1]])]
strsplit(mass_gene_presence_absence[3,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[3,3],"SPARC")[[1]])]
strsplit(mass_gene_presence_absence[14,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[14,3],"SPARC")[[1]])]
test <- "NA"
if(test){
print("hello")
}
if(! is.na(test)){
print("hello")
}
test <- NA
if(! is.na(test)){
print("hello")
}
mass_gene_anno_dict <- c()
strsplit(mass_gene_presence_absence[1,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[1,3],"SPARC1\_")[[1]])]
strsplit(mass_gene_presence_absence[1,3],"SPARC")[[1]][length(strsplit(mass_gene_presence_absence[1,3],"SPARC1\\_")[[1]])]
strsplit(mass_gene_presence_absence[1,3],"SPARC\\_")[[1]][length(strsplit(mass_gene_presence_absence[1,3],"SPARC1\\_")[[1]])]
strsplit(mass_gene_presence_absence[1,3],"SPARC1\\_")[[1]][length(strsplit(mass_gene_presence_absence[1,3],"SPARC1\\_")[[1]])]
mass_gene_anno_dict <- c()
for (i in 1:nrow(mass_gene_presence_absence)) {
anno <- strsplit(mass_gene_presence_absence[i,3],"SPARC1\\_")[[1]][length(strsplit(mass_gene_presence_absence[i,3],"SPARC1\\_")[[1]])]
if(! is.na(anno)){
mass_gene_anno_dict[anno] <- mass_gene_presence_absence[i,1]
}
}
head(mass_gene_anno_dict)
length(mass_gene_anno_dict)
nrow(mass_gene_presence_absence)
navajo_anno_gene_dict <- c()
navajo_anno_gene_dict <- c()
for(i in 1:nrow(navajo_gene_presence_absence)){
anno <- strsplit(navajo_anno_gene_dict[i,3],"SPARC1\\_")[[1]][length(strsplit(navajo_anno_gene_dict[i,3],"SPARC1\\_")[[1]])]
if(! is.na(anno)){
mass_gene_anno_dict[mass_gene_presence_absence[i,1]] <- anno
}
}
View(navajo_gene_presence_absence)
navajo_anno_gene_dict <- c()
for(i in 1:nrow(navajo_gene_presence_absence)){
anno <- strsplit(navajo_gene_presence_absence[i,3],"SPARC1\\_")[[1]][length(strsplit(navajo_gene_presence_absence[i,3],"SPARC1\\_")[[1]])]
if(! is.na(anno)){
mass_gene_anno_dict[mass_gene_presence_absence[i,1]] <- anno
}
}
nrow(navajo_gene_presence_absence)
length(mass_gene_anno_dict)
mass_gene_anno_dict <- c()
for (i in 1:nrow(mass_gene_presence_absence)) {
anno <- strsplit(mass_gene_presence_absence[i,3],"SPARC1\\_")[[1]][length(strsplit(mass_gene_presence_absence[i,3],"SPARC1\\_")[[1]])]
if(! is.na(anno)){
mass_gene_anno_dict[anno] <- mass_gene_presence_absence[i,1]
}
}
navajo_anno_gene_dict <- c()
for(i in 1:nrow(navajo_gene_presence_absence)){
anno <- strsplit(navajo_gene_presence_absence[i,3],"SPARC1\\_")[[1]][length(strsplit(navajo_gene_presence_absence[i,3],"SPARC1\\_")[[1]])]
if(! is.na(anno)){
navajo_anno_gene_dict[mass_gene_presence_absence[i,1]] <- anno
}
}
nrow(mass_gene_presence_absence)
length(mass_gene_anno_dict)
nrow(navajo_gene_presence_absence)
length(navajo_anno_gene_dict)
navajo_anno_gene_dict[1]
mass_gene_anno_dict[navajo_anno_gene_dict[1]]
Navajo_matching_Mass <- data.frame(NA)
Navajo_matching_Mass$Navajo <- navajo_anno_gene_dict
Navajo_matching_Mass <- data.frame(NA, nrow = length(navajo_anno_gene_dict))
Navajo_matching_Mass$Navajo <- navajo_anno_gene_dict
unname(navajo_anno_gene_dict)
Navajo_matching_Mass$Navajo <- unname(navajo_anno_gene_dict)
Navajo_matching_Mass <- data.frame(NA, nrow = length(navajo_anno_gene_dict), ncol = 2)
Navajo_matching_Mass <- data.frame(NA, nrow = length(navajo_anno_gene_dict), ncol = 2)
colnames(Navajo_matching_Mass) <- c("Navajo", "Matching Mass")
Navajo_matching_Mass$Navajo <- unname(navajo_anno_gene_dict)
Navajo_matching_Mass <- data.frame(NA, nrow = length(navajo_anno_gene_dict), ncol = 2)
colnames(Navajo_matching_Mass) <- c("Navajo", "MatchingMass")
View(Navajo_matching_Mass)
Navajo_matching_Mass <- data.frame(NA, nrow = length(navajo_anno_gene_dict), ncol = 2)
colnames(Navajo_matching_Mass) <- c("Navajo", "MatchingMass")
head(Navajo_matching_Mass)
Navajo_matching_Mass <- data.frame(NA, nrow = length(navajo_anno_gene_dict), ncol = 2)
head(Navajo_matching_Mass)
Navajo_matching_Mass <- data.frame(data = NA, nrow = length(navajo_anno_gene_dict), ncol = 2)
head(Navajo_matching_Mass)
Navajo_matching_Mass <- data.frame(matrix(NA, nrow = length(navajo_anno_gene_dict), ncol = 2))
head(Navajo_matching_Mass)
colnames(Navajo_matching_Mass) <- c("Navajo", "MatchingMass")
Navajo_matching_Mass$  <- unname(navajo_anno_gene_dict)
Navajo_matching_Mass$Navajo <- unname(navajo_anno_gene_dict)
for (i in 1:nrow(Navajo_matching_Mass)) {
Navajo_matching_Mass$MatchingMass[i] <- mass_gene_anno_dict[navajo_anno_gene_dict[i]]
}
missing_match_count <- 0
Navajo_matching_Mass <- data.frame(matrix(NA, nrow = length(navajo_anno_gene_dict), ncol = 2))
colnames(Navajo_matching_Mass) <- c("Navajo", "MatchingMass")
Navajo_matching_Mass$Navajo <- unname(navajo_anno_gene_dict)
missing_match_count <- 0
for (i in 1:nrow(Navajo_matching_Mass)) {
matching_mass <- mass_gene_anno_dict[navajo_anno_gene_dict[i]]
Navajo_matching_Mass$MatchingMass[i] <- matching_mass
if(is.na(matching_mass)){
missing_match_count <- missing_match_count +1
}
}
missing_match_count
unique(unname(navajo_anno_gene_dict))
length(unique(unname(navajo_anno_gene_dict)))
length((unname(navajo_anno_gene_dict)))
unique(mass_gene_presence_absence[,1])
length(unique(mass_gene_presence_absence[,1]))
length(unique(mass_gene_presence_absence[,3]))
length(unique(navajo_gene_presence_absence[,1]))
length(unique(navajo_gene_presence_absence[,3]))
mass_anno_gene_dict <- c()
for (i in 1:nrow(mass_gene_presence_absence)) {
anno <- strsplit(mass_gene_presence_absence[i,3],"SPARC1\\_")[[1]][length(strsplit(mass_gene_presence_absence[i,3],"SPARC1\\_")[[1]])]
if(! is.na(anno)){
mass_anno_gene_dict[mass_gene_presence_absence[i,1]] <- anno
}
}
length(mass_anno_gene_dict)
4938/5256
5024/5712
5024 -222
4802/5712
head(mass_gene_anno_dict)
mass_gene_anno_dict["CL11"]
length(unname(navajo_anno_gene_dict))
head(unname(navajo_anno_gene_dict))
length(unname(mass_anno_gene_dict))
length(unique(unname(mass_anno_gene_dict)))
length(unique(unname(navajo_anno_gene_dict)))
3511/5712
587/(587+1167)

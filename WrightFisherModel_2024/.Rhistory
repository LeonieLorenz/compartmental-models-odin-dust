best_70_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.7)
# -310.0685
# -312.7839
# -336.6817
# -360.9399
best_60_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.6)
# -313.4829
# -304.5797
# -329.0323
# -357.7246
best_50_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.5)
# -320.779
# -303.6713
# -322.5524
# -347.8738
best_40_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.4)
# -327.5759
# -303.1324
# -313.384
# -331.0309
best_35_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.35)
# -327.4471
# -307.2633
# -308.0027
# -324.1988
best_30_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.3)
# run ggCaller PopPUNK 3-param model multiple times for the different delta_bool vectors
FindNFDSgenes <- function(repeats = 100, frac = 0.1){
best_vec <- rep(0, nrow(ggCPP_intermed_gene_presence_absence_consensus)-1)
best_like <- -100000
for (i in 1:repeats) {
# create vector of length 1174 - 520 with randomly distributed 0s and 1s
rnd_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1,frac)
# genes that are not part of any gene group (except gene group leaders)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- rnd_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
### ggCaller PopPUNK 3-param
delta_bool <- rnd_vect_full
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.01931485, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0386297, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0772594, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1545188, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.6180752, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
WFmodel_ggCPP <- WF$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# ggC PopPUNK
local_like <- combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
if(local_like > best_like){
best_like <- local_like
best_vec <- rnd_vect_full
}
#print(local_like)
}
print(best_like)
best_vec
}
# first values with fitted parameters from 3-param model
# second values from same parameter set but sigma_f twice as large (0.0386297)
# third: doubled sigma_f again (0.07725940)
# fourth: doubled sigma_f again (0.1545188)
# fifth: doubled sigma_f again (0.3090376)
# sixth: doubled sigma_f again (0.6180752)
best_100_perc_vect <- FindNFDSgenes(repeats = 100, frac = 1)
# -316.8468
# -336.6054
# -377.6104
# -485.8535
# -1177.413
best_90_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.9)
# -309.0821
# -325.0176
# -355.2654
# -382.8643
best_80_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.8)
# -311.1709
# -318.3955
# -343.2562
# -366.5913
# -1180.972
best_70_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.7)
# -310.0685
# -312.7839
# -336.6817
# -360.9399
# -985.3221
best_60_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.6)
# -313.4829
# -304.5797
# -329.0323
# -357.7246
# -486.8475
best_50_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.5)
# -320.779
# -303.6713
# -322.5524
# -347.8738
# -400.3433
best_40_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.4)
# -327.5759
# -303.1324
# -313.384
# -331.0309
# -359.3175
best_35_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.35)
# -327.4471
# -307.2633
# -308.0027
# -324.1988
# -338.6673
best_30_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.3)
#  -339.4924
# -308.8178
# -306.5803
# -319.527
# -343.9595
best_25_perc_vect <- FindNFDSgenes(repeats = 100, frac = 0.25)
View(NFDSgenes_df)
NFDSgenes_df[-1,2] <- c(-316.8468, -336.6054, -377.6104, -485.8535, -1633.545, NA, NA)
NFDSgenes_df[-1,3] <- c(-309.0821, -325.0176, -355.2654, -382.8643, -1177.413, NA, NA)
NFDSgenes_df[-1,4] <- c(-311.1709, -318.3955, -343.2562, -366.5913, -1180.972, NA, NA)
NFDSgenes_df[-1,5] <- c(-310.0685, -312.7839, -336.6817, -360.9399, -985.3221, NA, NA)
NFDSgenes_df[-1,6] <- c(-313.4829, -304.5797, -329.0323, -357.7246, -486.8475, NA, NA)
NFDSgenes_df[-1,7] <- c(-320.779, -303.6713, -322.5524, -347.8738, -400.3433, NA, NA)
NFDSgenes_df[-1,8] <- c(-327.5759, -303.1324, -313.384, -331.0309, -359.3175, NA, NA)
NFDSgenes_df[-1,9] <- c(-339.4924, -308.8178, -306.5803, -319.527, -343.9595, NA, NA)
NFDSgenes_df[-1,10] <- c(-343.4345, -313.2131, -304.1711, -307.3205, 338.3931, NA, NA)
NFDSgenes_df[-1,11] <- c(-348.0353, -327.1084, -308.3151, -312.0316, 323.8821, 344.4585, NA)
NFDSgenes_df[-1,12] <- c(-358.3352, -337.041, -304.6377, -303.4799, 299.9564, 323.5808, NA)
NFDSgenes_df[-1,13] <- c(-354.3937, -349.9868, -329.6862, -306.7359, 288.273, 304.1316, NA)
NFDSgenes_df[-1,14] <- c(-376.391, -371.9671, -349.9106, -319.9057, 312.8814, 306.8226, NA)
View(NFDSgenes_df)
NFDSgenes_df <- data.frame(matrix(0, nrow = 8,ncol = 15))
colnames(NFDSgenes_df)[1] <- "sigma_f"
NFDSgenes_df[2:7,1] <- c(0.01931485, 0.0386297, 0.07725940, 0.1545188, 0.3090376, 0.6180752)
NFDSgenes_df[1,-1] <- c(1,0.9,0.8,0.7,0.6,0.5,0.4,0.35,0.3,0.25,0.2,0.15,0.1,0.05)
rownames(NFDSgenes_df)[1] <- "frac"
NFDSgenes_df[-1,2] <- c(-316.8468, -336.6054, -377.6104, -485.8535, -1633.545, -1710.235, NA)
NFDSgenes_df[-1,3] <- c(-309.0821, -325.0176, -355.2654, -382.8643, -1177.413, -1247.047, NA)
NFDSgenes_df[-1,4] <- c(-311.1709, -318.3955, -343.2562, -366.5913, -1180.972, -1114.129, NA)
NFDSgenes_df[-1,5] <- c(-310.0685, -312.7839, -336.6817, -360.9399, -985.3221, -1084.834, NA)
NFDSgenes_df[-1,6] <- c(-313.4829, -304.5797, -329.0323, -357.7246, -486.8475, -1053.929, NA)
NFDSgenes_df[-1,7] <- c(-320.779, -303.6713, -322.5524, -347.8738, -400.3433, -724.7756, NA)
NFDSgenes_df[-1,8] <- c(-327.5759, -303.1324, -313.384, -331.0309, -359.3175, -602.6219, NA)
NFDSgenes_df[-1,8] <- c(-327.4471, -307.2633, -308.0027, -324.1988, -338.6673, -477.3307, NA)
NFDSgenes_df[-1,10] <- c(-339.4924, -308.8178, -306.5803, -319.527, -343.9595, -407.3833, NA)
NFDSgenes_df[-1,11] <- c(-343.4345, -313.2131, -304.1711, -307.3205, 338.3931, -371.6217, NA)
NFDSgenes_df[-1,12] <- c(-348.0353, -327.1084, -308.3151, -312.0316, 323.8821, 344.4585, NA)
NFDSgenes_df[-1,13] <- c(-358.3352, -337.041, -304.6377, -303.4799, 299.9564, 323.5808, NA)
NFDSgenes_df[-1,14] <- c(-354.3937, -349.9868, -329.6862, -306.7359, 288.273, 304.1316, NA)
NFDSgenes_df[-1,15] <- c(-376.391, -371.9671, -349.9106, -319.9057, 312.8814, 306.8226, NA)
View(NFDSgenes_df)
matplot(NFDSgenes_df$sigma_f[-1], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
length(NFDSgenes_df$sigma_f[-1])
dim(NFDSgenes_df[2:7,-1])
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
NFDSgenes_df[-1,10] <- c(-339.4924, -308.8178, -306.5803, -319.527, -343.9595, -407.3833, NA)
NFDSgenes_df[-1,11] <- c(-343.4345, -313.2131, -304.1711, -307.3205, -338.3931, -371.6217, NA)
NFDSgenes_df[-1,12] <- c(-348.0353, -327.1084, -308.3151, -312.0316, -323.8821, -344.4585, NA)
NFDSgenes_df[-1,13] <- c(-358.3352, -337.041, -304.6377, -303.4799, -299.9564, -323.5808, NA)
NFDSgenes_df[-1,14] <- c(-354.3937, -349.9868, -329.6862, -306.7359, -288.273, -304.1316, NA)
NFDSgenes_df[-1,15] <- c(-376.391, -371.9671, -349.9106, -319.9057, -312.8814, -306.8226, NA)
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
legend("topright", legend = NFDSgenes_df[1,-1],
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
lty = 1)
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
legend("bottomleft", legend = NFDSgenes_df[1,-1],
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
lty = 1)
NFDSgenes_df[-1,8] <- c(-327.5759, -303.1324, -313.384, -331.0309, -359.3175, -602.6219, NA)
NFDSgenes_df[-1,9] <- c(-327.4471, -307.2633, -308.0027, -324.1988, -338.6673, -477.3307, NA)
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot")
legend("bottomleft", legend = NFDSgenes_df[1,-1],
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
lty = 1)
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot",
ylim = c(-600,-250))
seq(NFDSgenes_df$sigma_f[2:7])
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot",
ylim = c(-600,-250), log="x")
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"), xlab = "X",
ylab = "Y", main = "Multiple Lines Plot",
ylim = c(-600,-250), log="x", xlab = "sigma_f values",xaxt='n')
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
ylab = "Y", main = "Multiple Lines Plot",
ylim = c(-600,-250), log="x", xlab = "sigma_f values",xaxt='n')
axis(side = 1, at = 1:23, labels = NFDSgenes_df$sigma_f[2:7])
axis(side = 1, at = 1:6, labels = NFDSgenes_df$sigma_f[2:7])
legend("bottomleft", legend = NFDSgenes_df[1,-1],
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
lty = 1)
axis(side = 1, labels = NFDSgenes_df$sigma_f[2:7])
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
ylab = "Y", main = "Multiple Lines Plot",
ylim = c(-600,-250), log="x", xlab = "sigma_f values",xaxt='n')
axis(side = 1, at = NFDSgenes_df$sigma_f[2:7], labels = NFDSgenes_df$sigma_f[2:7])
legend("bottomleft", legend = NFDSgenes_df[1,-1],
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
lty = 1)
matplot(NFDSgenes_df$sigma_f[2:7], NFDSgenes_df[2:7,-1], type = "l", lty = 1,
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
ylab = "Likelihood", main = "Likelihood for different fractions of genes under NFDS and various sigma_f values",
ylim = c(-600,-250), log="x", xlab = "sigma_f values",xaxt='n')
axis(side = 1, at = NFDSgenes_df$sigma_f[2:7], labels = NFDSgenes_df$sigma_f[2:7])
legend("bottomleft", legend = NFDSgenes_df[1,-1],
col = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#b15928", "#6a3d9a", "#cab2d6", "#fdbf6f", "#fb9a99", "#e31a1c"),
lty = 1)
0.6180752 * 2
# run ggCaller PopPUNK 3-param model multiple times for the different delta_bool vectors
FindNFDSgenes <- function(repeats = 100, frac = 0.1){
best_vec <- rep(0, nrow(ggCPP_intermed_gene_presence_absence_consensus)-1)
best_like <- -100000
for (i in 1:repeats) {
# create vector of length 1174 - 520 with randomly distributed 0s and 1s
rnd_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1,frac)
# genes that are not part of any gene group (except gene group leaders)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- rnd_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
### ggCaller PopPUNK 3-param
delta_bool <- rnd_vect_full
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.01931485, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0386297, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0772594, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1545188, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.6180752, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 1.23615, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
WFmodel_ggCPP <- WF$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# ggC PopPUNK
local_like <- combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
if(local_like > best_like){
best_like <- local_like
best_vec <- rnd_vect_full
}
#print(local_like)
}
print(best_like)
best_vec
}
# -358.3352
# -337.041
# -304.6377
# -303.4799
# -299.9564
# -323.5808
best_10_perc_vec <- FindNFDSgenes(repeats = 100, frac = 0.10)
# -354.3937
# -349.9868
# -329.6862
# -306.7359
# -288.273
# -304.1316
best_5_perc_vec <- FindNFDSgenes(repeats = 100, frac = 0.05)
0.6180752 * 1.5
# run ggCaller PopPUNK 3-param model multiple times for the different delta_bool vectors
FindNFDSgenes <- function(repeats = 100, frac = 0.1){
best_vec <- rep(0, nrow(ggCPP_intermed_gene_presence_absence_consensus)-1)
best_like <- -100000
for (i in 1:repeats) {
# create vector of length 1174 - 520 with randomly distributed 0s and 1s
rnd_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1,frac)
# genes that are not part of any gene group (except gene group leaders)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- rnd_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
### ggCaller PopPUNK 3-param
delta_bool <- rnd_vect_full
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.01931485, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0386297, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0772594, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1545188, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.6180752, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.9271128, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
WFmodel_ggCPP <- WF$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# ggC PopPUNK
local_like <- combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
if(local_like > best_like){
best_like <- local_like
best_vec <- rnd_vect_full
}
#print(local_like)
}
print(best_like)
best_vec
}
# -358.3352
# -337.041
# -304.6377
# -303.4799
# -299.9564
# -323.5808
best_10_perc_vec <- FindNFDSgenes(repeats = 100, frac = 0.10)
# -354.3937
# -349.9868
# -329.6862
# -306.7359
# -288.273
# -304.1316
best_5_perc_vec <- FindNFDSgenes(repeats = 100, frac = 0.05)
0.6180752 * 1.25
# run ggCaller PopPUNK 3-param model multiple times for the different delta_bool vectors
FindNFDSgenes <- function(repeats = 100, frac = 0.1){
best_vec <- rep(0, nrow(ggCPP_intermed_gene_presence_absence_consensus)-1)
best_like <- -100000
for (i in 1:repeats) {
# create vector of length 1174 - 520 with randomly distributed 0s and 1s
rnd_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1,frac)
# genes that are not part of any gene group (except gene group leaders)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- rnd_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
### ggCaller PopPUNK 3-param
delta_bool <- rnd_vect_full
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.01931485, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0386297, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0772594, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1545188, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.6180752, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.772594, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
WFmodel_ggCPP <- WF$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# ggC PopPUNK
local_like <- combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
if(local_like > best_like){
best_like <- local_like
best_vec <- rnd_vect_full
}
#print(local_like)
}
print(best_like)
best_vec
}
# -354.3937
# -349.9868
# -329.6862
# -306.7359
# -288.273
# -304.1316
best_5_perc_vec <- FindNFDSgenes(repeats = 100, frac = 0.05)
0.6180752 * 1.75
# run ggCaller PopPUNK 3-param model multiple times for the different delta_bool vectors
FindNFDSgenes <- function(repeats = 100, frac = 0.1){
best_vec <- rep(0, nrow(ggCPP_intermed_gene_presence_absence_consensus)-1)
best_like <- -100000
for (i in 1:repeats) {
# create vector of length 1174 - 520 with randomly distributed 0s and 1s
rnd_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1,frac)
# genes that are not part of any gene group (except gene group leaders)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- rnd_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
### ggCaller PopPUNK 3-param
delta_bool <- rnd_vect_full
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.01931485, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0386297, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.0772594, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
#params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1545188, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.6180752, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 1.081632, sigma_w = 0, prop_f = 1, delta_bool = delta_bool, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
WFmodel_ggCPP <- WF$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# ggC PopPUNK
local_like <- combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
if(local_like > best_like){
best_like <- local_like
best_vec <- rnd_vect_full
}
#print(local_like)
}
print(best_like)
best_vec
}
# -354.3937
# -349.9868
# -329.6862
# -306.7359
# -288.273
# -304.1316
best_5_perc_vec <- FindNFDSgenes(repeats = 100, frac = 0.05)
0.6180752 * 1.75
# read in gene presence absence matrix
gene_presence_absence <- readRDS(file = "gene_presence_absence.rds")
# create time-point specific gene presence absence matrices
Mass_year_dict <- c(rep(2001,length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`)),
rep(2004,length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`)),
rep(2007,length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)))
names(Mass_year_dict) <- c(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`, Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`, Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)
# empty gene presence absence matrix
gene_presence_absence_2001 <- data.frame(matrix(0, nrow = length(cls_files)+1, ncol = length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`)+1))
gene_presence_absence_2001[1,-1] <- (Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`)
gene_presence_absence_2001[-1,1] <- gene_presence_absence[-1,1]
gene_presence_absence_2001[-1,-1] <- gene_presence_absence[-1,c(FALSE,Mass_year_dict[unlist(gene_presence_absence[1,-1])]==2001)]
gene_presence_absence_2004 <- data.frame(matrix(0, nrow = length(cls_files)+1, ncol = length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`)+1))
gene_presence_absence_2004[1,-1] <- (Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`)
gene_presence_absence_2004[-1,1] <- gene_presence_absence[-1,1]
gene_presence_absence_2004[-1,-1] <- gene_presence_absence[-1,c(FALSE,Mass_year_dict[unlist(gene_presence_absence[1,-1])]==2004)]
gene_presence_absence_2007 <- data.frame(matrix(0, nrow = length(cls_files)+1, ncol = length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)+1))
gene_presence_absence_2007[1,-1] <- (Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)
gene_presence_absence_2007[-1,1] <- gene_presence_absence[-1,1]
gene_presence_absence_2007[-1,-1] <- gene_presence_absence[-1,c(FALSE,Mass_year_dict[unlist(gene_presence_absence[1,-1])]==2007)]
# calculate cluster freqs per time point
gene_cluster_freqs_1 <- rep(0, length(cls_files))
for(i in 1:length(cls_files)){
gene_cluster_freqs_1[i] <- sum(as.numeric(gene_presence_absence_2001[i+1,-1]==1))/length(gene_presence_absence_2001[1,-1])
}
#gene_cluster_freqs_1 <- rep(0, length(cls_files))
#calculate_rowSum <- function(data_row){
#print(sum(as.numeric(data_row==1)))
#  sum(as.numeric(data_row==1))
#}
#gene_cluster_freqs_1 <- apply(gene_presence_absence_2001[-1,-1],1,calculate_rowSum)
gene_cluster_freqs_2 <- rep(0, length(cls_files))
for(i in 1:length(cls_files)){
gene_cluster_freqs_2[i] <- sum(as.numeric(gene_presence_absence_2004[i+1,-1]==1))/length(gene_presence_absence_2004[1,-1])
}
gene_cluster_freqs_3 <- rep(0, length(cls_files))
for(i in 1:length(cls_files)){
gene_cluster_freqs_3[i] <- sum(as.numeric(gene_presence_absence_2007[i+1,-1]==1))/length(gene_presence_absence_2007[1,-1])
}
plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(1:1500, gene_cluster_freqs_2[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#E69F00",type = "b")
lines(1:1500, gene_cluster_freqs_3[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#56B4E9", type = "b")
legend(1, 1, legend=c("2001", "2004", "2007"),col=c("black", "#E69F00","#56B4E9"), lty=1, cex=1)
#plot(1:length(gene_cluster_freqs_1), gene_cluster_freqs_3[sort.list(gene_cluster_freqs_1)])
# Plotting the changes in gene cluster frequencies between the 1st time point and the 2nd and 3rd, respectively, including a rolling mean
# I thought maybe there would be a correlation between the gene frequency and it variability. Well, there isn't.
library(zoo)
plot(1:1500, (gene_cluster_freqs_1-gene_cluster_freqs_2)[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(rollmean((gene_cluster_freqs_1-gene_cluster_freqs_2), 50), col = "#E69F00", lwd = 5)
legend(1, 0.15, legend=c("2001 minus 2004", "Rollmean"),col=c("black", "#E69F00"), lty=1, cex=1)
plot(1:1500, (gene_cluster_freqs_1-gene_cluster_freqs_3)[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(rollmean((gene_cluster_freqs_1-gene_cluster_freqs_3), 50), col = "#56B4E9", lwd = 5)
legend(1, 0.15, legend=c("2001 minus 2007", "Rollmean"),col=c("black", "#56B4E9"), lty=1, cex=1)
delta_ranking <- readRDS(file = "delta_ranking.rds")
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
intermed_gene_presence_absence_2001 <- readRDS(file = "intermed_gene_presence_absence_2001.rds")
intermed_gene_presence_absence_2004 <- readRDS(file = "intermed_gene_presence_absence_2004.rds")
intermed_gene_presence_absence_2007 <- readRDS(file = "intermed_gene_presence_absence_2007.rds")
# calculate gene frequencies first, separate for three time points
mass_gene_freq_1 <- apply(intermed_gene_presence_absence_2001[-1,-1], 1, sum_as_int)
mass_gene_freq_2 <- apply(intermed_gene_presence_absence_2004[-1,-1], 1, sum_as_int)
mass_gene_freq_3 <- apply(intermed_gene_presence_absence_2007[-1,-1], 1, sum_as_int)
# first, calculate pre/peri and post vacc frequencies of genes:
pre_peri_vacc_gene_freq <- (mass_gene_freq_1 + mass_gene_freq_2) / (sum(mass_cluster_freq_1) + sum(mass_cluster_freq_2))
pre_vacc_gene_freq <- (mass_gene_freq_1) / sum(mass_cluster_freq_1)
post_vacc_gene_freq <- mass_gene_freq_3 / sum(mass_cluster_freq_3)
peri_post <- (mass_gene_freq_2 + mass_gene_freq_3) / (sum(mass_cluster_freq_2) + sum(mass_cluster_freq_3))
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
delta_data
delta_ranking <- rank(delta_data)
delta_ranking
plot(delta_data)
sort(delta_data)
plot(sort(delta_data))
plot(sort(delta_data, decreasing = TRUE))

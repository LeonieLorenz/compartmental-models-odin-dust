filter_cluster_rep_file(UK_gene_cluster_rep_str, UK_ggC_intermed_gene_names, UK_filtered_reps)
library(stringr)
filter_cluster_rep_file(UK_gene_cluster_rep_str, UK_ggC_intermed_gene_names, UK_filtered_reps)
Navajo_ggCaller_intermed_consensus <- readRDS("Navajo_ggCaller_intermed_consensus.rds")
head(Navajo_ggCaller_intermed_consensus[,1])
# intermed gene name list for mapping ggCaller
Navajo_ggC_intermed_gene_names <- Navajo_ggCaller_intermed_consensus[-1,1]
saveRDS(Navajo_ggC_intermed_gene_names, file = "Navajo_ggC_intermed_gene_names.rds")
### Navajo
Navajo_gene_cluster_rep_str <- paste(readLines("~/Documents/PhD_Project/Data/Mapping_ggCaller/Navajo/pangenome_reference.fa"), collapse="\n")
Navajo_filtered_reps <- file("~/Documents/PhD_Project/Data/Mapping_ggCaller/Navajo/pangenome_reference_filtered.fa"
)
filter_cluster_rep_file(Navajo_gene_cluster_rep_str, Navajo_ggC_intermed_gene_names, Navajo_filtered_reps)
# 11.12.2024
mmseq_results_FindUKInMass <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindIntermedUKinMass/bestUKinMass.m8", header=FALSE)
# 11.12.2024
mmseq_results_FindUKInMass <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindIntermedUKinIntermedMass/bestUKinMass.m8", header=FALSE)
# 11.12.2024
mmseq_results_FindUKInMass <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindIntermedUKinIntermedMass/bestResultUKinMass.m8", header=FALSE)
mmseq_results_FindMassInUK <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/run3_FindIntermedMassInIntermedUK/bestResultMassInUK.m8", header=FALSE)
mmseq_results_FindMassInUK <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindIntermedMassInIntermedUK/bestResultMassInUK.m8", header=FALSE)
UKInMass_dict <- mmseq_results_FindUKInMass$V2
names(UKInMass_dict) <- mmseq_results_FindUKInMass$V1
MassInUK_dict <- mmseq_results_FindMassInUK$V2
names(MassInUK_dict) <- mmseq_results_FindMassInUK$V1
head(MassInUK_dict)
match_count <- 0
no_match_count <- 0
match_count <- 0
no_match_count <- 0
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- UKInMass_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0){
match_count <- match_count + 1
}
}
}
UKInMass_dict <- mmseq_results_FindUKInMass$V2
names(UKInMass_dict) <- mmseq_results_FindUKInMass$V1
match_count <- 0
no_match_count <- 0
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- UKInMass_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0){
match_count <- match_count + 1
}
}
}
UKInMass_dict
names(UKInMass_dict)[1]
match_count <- 0
no_match_count <- 0
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0){
match_count <- match_count + 1
}
}
}
match_count
no_match_count
match_count <- 0
no_match_count <- 0
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0.95){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0.95){
match_count <- match_count + 1
}
}
}
match_count
no_match_count
length(names(UKInMass_dict)
)
length(mmseq_results_FindUKInMass$V2)
length(unique(mmseq_results_FindUKInMass$V2))
length(unique(mmseq_results_FindUKInMass$V1))
# Null model
Navajo_2param_mcmc2 <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_12_05/ModelComparison_Navajo/Navajo_PPxSero2vacc_ggCaller_PopPUNK_Null_det_pmcmc_run2.rds")
# Null model
Navajo_2param_mcmc2 <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_12_05/ModelComparison_Navajo/Navajo_PPxSero2vacc_ggCaller_PopPUNK_Null_det_pmcmc_run2.rds")
rm(Navajo_PPxSero2vacc)
# Null model
Navajo_2param_mcmc2 <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_12_05/ModelComparison_Navajo/Navajo_PPxSero2vacc_ggCaller_PopPUNK_Null_det_pmcmc_run2.rds")
Navajo_2param_mcmc2_probs <- coda::as.mcmc(cbind(Navajo_2param_mcmc2$probabilities, Navajo_2param_mcmc2$pars))
#mean(Navajo_2param_mcmc2_probs[,"log_likelihood"])
param_median <- apply(Navajo_2param_mcmc2_probs, 2, median)
percentile95_low <- apply(Navajo_2param_mcmc2_probs,2,quantile,.025)
param_median
percentile95_low
percentile95_up
Navajo_likelihood_2param
Navajo_2param_mcmc2_probs[,2]
tail(Navajo_2param_mcmc2_probs[,2])
max(Navajo_2param_mcmc2_probs[,2])
percentile95_up <- apply(Navajo_2param_mcmc2_probs,2,quantile,.975)
percentile95_up
#     log_prior log_likelihood  log_posterior              m              v
#     0.0000000   -878.0629747   -878.0629747     -3.6893245      0.1181851
#    0.00000000  -881.36090195  -881.36090195    -3.99475933     0.06562337
#     0.0000000   -877.3314368   -877.3314368     -3.2919001      0.2179553
rm(Navajo_2param_mcmc2)
# 3-parameter model
Navajo_3param_mcmc2 <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_12_05/ModelComparison_Navajo/Navajo_PPxSero2vacc_ggCaller_PopPUNK_3param_det_pmcmc_run2.rds")
Navajo_3param_mcmc2_probs <- coda::as.mcmc(cbind(Navajo_3param_mcmc2$probabilities, Navajo_3param_mcmc2$pars))
#mean(Navajo_3param_mcmc2_probs[,"log_likelihood"])
param_median <- apply(Navajo_3param_mcmc2_probs, 2, median)
param_median
percentile95_low <- apply(Navajo_3param_mcmc2_probs,2,quantile,.025)
percentile95_up <- apply(Navajo_3param_mcmc2_probs,2,quantile,.975)
percentile95_low
percentile95_up
#     log_prior log_likelihood  log_posterior        sigma_f              m              v
#     0.0000000   -775.3308326   -775.3308326     -4.5142096     -2.8810714      0.2341128
#     0.0000000   -779.0923917   -779.0923917     -5.0989938     -3.3458219      0.1111547
#     0.0000000   -774.0645465   -774.0645465     -3.8534879     -2.2976970      0.5704883
rm(Navajo_3param_mcmc2)
# 4-parameter model
Navajo_4param_mcmc2 <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_12_05/ModelComparison_Navajo/Navajo_PPxSero2vacc_ggCaller_PopPUNK_4param_det_pmcmc_run2.rds")
# 4-parameter model
Navajo_4param_mcmc2 <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_12_05/ModelComparison_Navajo/Navajo_PPxSero2vacc_ggCaller_PopPUNK_4param_det_pmcmc_run2.rds")
Navajo_4param_mcmc2_probs <- coda::as.mcmc(cbind(Navajo_4param_mcmc2$probabilities, Navajo_4param_mcmc2$pars))
#mean(Navajo_4param_mcmc2_probs[,"log_likelihood"])
param_median <- apply(Navajo_4param_mcmc2_probs, 2, median)
percentile95_up <- apply(Navajo_4param_mcmc2_probs,2,quantile,.975)
rm(Navajo_4param_mcmc2)
param_median
percentile95_low <- apply(Navajo_4param_mcmc2_probs,2,quantile,.025)
percentile95_up <- apply(Navajo_4param_mcmc2_probs,2,quantile,.975)
percentile95_low
percentile95_up
length(UKInMass_dict)
length(MassInUK_dict)
match_count <- 0
no_match_count <- 0
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0.95){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0.95){
match_count <- match_count + 1
}
}
}
match_count
no_match_count
match_count <- 0
no_match_count <- 0
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0){
match_count <- match_count + 1
}
}
}
match_count
no_match_count
which(mmseq_results_FindUKInMass$V3 >=0.95)
length(which(mmseq_results_FindUKInMass$V3 >=0.95))
length(which(mmseq_results_FindUKInMass$V3 >=0.9))
484/1418
970/1418
head(ggC_gene_freq_2001)
head(ggC_gene_freq_2001[which(ggC_filter==1)])
saveRDS(ggC_intermed_gene_freqs, file = "Mass_ggC_intermed_gene_freqs.rds")
ggC_intermed_gene_freqs <- ggC_gene_freq_2001[which(ggC_filter==1)]
saveRDS(ggC_intermed_gene_freqs, file = "Mass_ggC_intermed_gene_freqs.rds")
head(ggC_intermed_gene_freqs)
Mass_ggC_intermed_gene_freqs <- readRDS("Mass_ggC_intermed_gene_freqs.rds")
head(Mass_ggC_intermed_gene_freqs)
names(Mass_ggC_intermed_gene_freqs) <- Mass_ggC_intermed_gene_names
head(Mass_ggC_intermed_gene_freqs)
UK_ggC_intermed_gene_freqs <- UK_gene_freq_preVac[which(UK_gene_filter==1)]
UK_ggCallerPP_bool <- readRDS("UK_ggCaller_bool.rds")
UK_ggCaller_byYear <- vector(mode = "list", length = length(UK_time_points))
UK_time_points <- sort(unique(UK_SeqYear_dict))
### Reading in the Accession Codes, Population and the Sequence Clusters
UK_metadata <- read.csv("~/Documents/PhD_Project/Data/StrepPneumo_UK/metadata.csv")
UK_ids <- UK_metadata$id
UK_ids_dict <- 1:length(UK_ids)
names(UK_ids_dict) <- UK_ids
UK_id_acc_dict <- UK_ids
names(UK_id_acc_dict) <- UK_metadata$Accession
split_winter <- function(winter){
strsplit(winter,"\\/")[[1]][1]
}
UK_SeqYear_dict <- sapply(UK_metadata$Winter, split_winter)
#names(UK_SeqYear_dict) <- UK_ids
names(UK_SeqYear_dict) <- UK_metadata$Accession
UK_meta_IDtoInd <- 1:nrow(UK_metadata)
names(UK_meta_IDtoInd) <- UK_metadata$Accession
UK_time_points <- sort(unique(UK_SeqYear_dict))
UK_winters <- sort(unique(UK_metadata$Winter))
UK_ggCaller_byYear <- vector(mode = "list", length = length(UK_time_points))
for (i in 1:length(UK_time_points)) {
UK_ggCaller_year <- data.frame(matrix(0, nrow = nrow(UK_ggCallerPP_bool), ncol = length(which(UK_metadata$Winter==UK_winters[i]))+1)) # initialize data frame
UK_ggCaller_year[1,-1] <- UK_ggCallerPP_bool[1,c(FALSE,UK_SeqYear_dict[unlist(UK_ggCallerPP_bool[1,-1])]==UK_time_points[i])] # fill in first row (seq names)
UK_ggCaller_year[-1,1] <- UK_ggCallerPP_bool[-1,1] # fill in first column (gene cluster names)
UK_ggCaller_year[-1,-1] <- UK_ggCallerPP_bool[-1,c(FALSE,UK_SeqYear_dict[unlist(UK_ggCallerPP_bool[1,-1])]==UK_time_points[i])] # fill in presence absence information
#print(i)
UK_ggCaller_byYear[[i]] <- UK_ggCaller_year
}
sum_as_int <- function(x){
sum(as.integer(x))
}
UK_time_points_preVac <- 1
UK_gene_freq_preVac <- rep(0, nrow(UK_ggCaller_byYear[[1]])-1)
preVac_datapoints <- 0
for (i in 1:length(UK_time_points_preVac)) {
UK_gene_freq_preVac <- UK_gene_freq_preVac + apply(UK_ggCaller_byYear[[i]][-1,-1],1, sum_as_int)
preVac_datapoints <- preVac_datapoints + length(UK_ggCaller_byYear[[i]][1,-1])
}
UK_gene_freq_preVac <- UK_gene_freq_preVac / preVac_datapoints
UK_gene_filter <- as.integer(UK_gene_freq_preVac<=0.95 & UK_gene_freq_preVac>=0.05)
sum(UK_gene_filter)
UK_ggC_intermed_gene_freqs <- UK_gene_freq_preVac[which(UK_gene_filter==1)]
saveRDS(UK_ggC_intermed_gene_freqs, file = "UK_ggC_intermed_gene_freqs.rds")
head(UK_ggC_intermed_gene_freqs)
names(UK_ggC_intermed_gene_freqs) <- UK_ggC_intermed_gene_names
head(UK_ggC_intermed_gene_freqs)
match_dict <- c()
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0.95){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0.95){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
head(match_dict)
plot(UK_ggC_intermed_gene_freqs[names(match_dict)], Mass_ggC_intermed_gene_freqs[match_dict[names(match_dict)]]
)
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0.9){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0.9){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
plot(UK_ggC_intermed_gene_freqs[names(match_dict)], Mass_ggC_intermed_gene_freqs[match_dict[names(match_dict)]])
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>0.99){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>0.99){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
plot(UK_ggC_intermed_gene_freqs[names(match_dict)], Mass_ggC_intermed_gene_freqs[match_dict[names(match_dict)]])
recip_matching <- function(seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
match_dict
}
match_UKMass_95 <- recip_matching(0.95)
match_UKMass_95
recip_matching <- function(seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(UKInMass_dict))){
name <- names(UKInMass_dict)[i]
val <- UKInMass_dict[name]
return_val <- MassInUK_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_UKMass_95 <- recip_matching(0.95)
match_UKMass_90 <- recip_matching(0.90)
match_UKMass_99 <- recip_matching(0.99)
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_90)], Mass_ggC_intermed_gene_freqs[match_UKMass_90[names(match_UKMass_90)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_95)], Mass_ggC_intermed_gene_freqs[match_UKMass_95[names(match_UKMass_95)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_99)], Mass_ggC_intermed_gene_freqs[match_UKMass_99[names(match_UKMass_99)]])
match_UKMass_95 <- recip_matching(UKInMass_dict, MassInUK_dict, 0.95)
recip_matching <- function(AinB_dict, BinA_dict, seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(AinB_dict))){
name <- names(AinB_dict)[i]
val <- AinB_dict[name]
return_val <- BinA_dict[val]
if(name != return_val){
if(mmseq_results_FindUKInMass$V3[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(mmseq_results_FindUKInMass$V3[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_UKMass_95 <- recip_matching(UKInMass_dict, MassInUK_dict, 0.95)
UKMass_seq_id_vec <- mmseq_results_FindUKInMass$V3
recip_matching <- function(AinB_dict, BinA_dict, seq_id_vec, seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(AinB_dict))){
name <- names(AinB_dict)[i]
val <- AinB_dict[name]
return_val <- BinA_dict[val]
if(name != return_val){
if(seq_id_vec[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(seq_id_vec[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_UKMass_95 <- recip_matching(UKInMass_dict, MassInUK_dict, UKMass_seq_id_vec, 0.95)
match_UKMass_90 <- recip_matching(UKInMass_dict, MassInUK_dict, UKMass_seq_id_vec, 0.90)
match_UKMass_99 <- recip_matching(UKInMass_dict, MassInUK_dict, UKMass_seq_id_vec, 0.99)
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_90)], Mass_ggC_intermed_gene_freqs[match_UKMass_90[names(match_UKMass_90)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_95)], Mass_ggC_intermed_gene_freqs[match_UKMass_95[names(match_UKMass_95)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_99)], Mass_ggC_intermed_gene_freqs[match_UKMass_99[names(match_UKMass_99)]])
# same with unfiltered matches
mmseq_results_FindUKInMass_unfiltered <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindAllUKinAllMass/bestResultUKinMass.m8", header=FALSE)
mmseq_results_FindMassInUK_unfiltered <- read.delim("~/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindAllMassInAllUK/bestResultMassInUK.m8", header=FALSE)
UKInMassUnfiltered_dict <- mmseq_results_FindUKInMass_unfiltered$V2
names(UKInMassUnfiltered_dict) <- mmseq_results_FindUKInMass_unfiltered$V1
MassInUKUnfiltered_dict <- mmseq_results_FindMassInUK_unfiltered$V2
names(MassInUKUnfiltered_dict) <- mmseq_results_FindMassInUK_unfiltered$V1
UKMassUnfiltered_seq_id_vec <- mmseq_results_FindUKInMass_unfiltered$V3
ggC_intermed_gene_freqs <- ggC_gene_freq_2001
saveRDS(ggC_all_gene_freqs, file = "Mass_ggC_all_gene_freqs.rds")
head(ggC_intermed_gene_freqs)
ggC_intermed_gene_freqs <- ggC_gene_freq_2001
saveRDS(ggC_all_gene_freqs, file = "Mass_ggC_all_gene_freqs.rds")
ggC_all_gene_freqs <- ggC_gene_freq_2001
saveRDS(ggC_all_gene_freqs, file = "Mass_ggC_all_gene_freqs.rds")
ggC_intermed_gene_freqs <- ggC_gene_freq_2001[which(ggC_filter==1)]
saveRDS(ggC_intermed_gene_freqs, file = "Mass_ggC_intermed_gene_freqs.rds")
ggC_all_gene_names <- ggCaller_gene_presence_absence_2001[,1]
saveRDS(ggC_all_gene_names, file = "Mass_ggC_all_gene_names.rds")
head(UK_ggCaller_byYear[[1]][-1,1])
head(UK_ggCaller_byYear[[1]][1,1])
head(UK_ggCaller_byYear[[1]][,1])
View(UK_ggCaller_byYear[[1]])
UK_ggC_all_gene_freqs <- UK_gene_freq_preVac
saveRDS(UK_ggC_all_gene_freqs, file = "UK_ggC_all_gene_freqs.rds")
UK_ggC_all_gene_names <- UK_ggCaller_byYear[[1]][-1,1]
UK_ggC_all_gene_names <- UK_ggCaller_byYear[[1]][-1,1]
saveRDS(UK_ggC_all_gene_names, file = "UK_ggC_all_gene_names.rds")
Mass_ggC_all_gene_freqs_dict <- readRDS("Mass_ggC_all_gene_freqs.rds")
names(Mass_ggC_all_gene_freqs_dict) <- readRDS("Mass_ggC_all_gene_names.rds")
UK_ggC_all_gene_freqs_dict <- readRDS("UK_ggC_all_gene_freqs.rds")
names(UK_ggC_all_gene_freqs_dict) <- readRDS("UK_ggC_all_gene_freqs.rds")
ggC_all_gene_names <- ggCaller_gene_presence_absence_2001[-1,1]
saveRDS(ggC_all_gene_names, file = "Mass_ggC_all_gene_names.rds")
Mass_ggC_all_gene_freqs_dict <- readRDS("Mass_ggC_all_gene_freqs.rds")
names(Mass_ggC_all_gene_freqs_dict) <- readRDS("Mass_ggC_all_gene_names.rds")
match_UKMassUnfiltered_95 <- recip_matching(UKInMassUnfiltered_dict, MassInUKUnfiltered_dict, UKMassUnfiltered_seq_id_vec, 0.95)
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]])
head(match_UKMassUnfiltered_95)
head(Mass_ggC_all_gene_freqs_dict)
head(UK_ggC_all_gene_freqs_dict)
head(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)])
UKMassUnfiltered_seq_id_vec <- mmseq_results_FindUKInMass_unfiltered$V3
match_UKMassUnfiltered_95 <- recip_matching(UKInMassUnfiltered_dict, MassInUKUnfiltered_dict, UKMassUnfiltered_seq_id_vec, 0.95)
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]])
head(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)])
UK_ggC_all_gene_freqs_dict <- readRDS("UK_ggC_all_gene_freqs.rds")
names(UK_ggC_all_gene_freqs_dict) <- readRDS("UK_ggC_all_gene_freqs.rds")
head(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)])
head(UK_ggC_all_gene_freqs_dict)
UK_ggC_all_gene_freqs_dict <- readRDS("UK_ggC_all_gene_freqs.rds")
names(UK_ggC_all_gene_freqs_dict) <- readRDS("UK_ggC_all_gene_names.rds")
match_UKMassUnfiltered_95 <- recip_matching(UKInMassUnfiltered_dict, MassInUKUnfiltered_dict, UKMassUnfiltered_seq_id_vec, 0.95)
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]])
match_UKMassUnfiltered_90 <- recip_matching(UKInMassUnfiltered_dict, MassInUKUnfiltered_dict, UKMassUnfiltered_seq_id_vec, 0.90)
match_UKMassUnfiltered_95 <- recip_matching(UKInMassUnfiltered_dict, MassInUKUnfiltered_dict, UKMassUnfiltered_seq_id_vec, 0.95)
match_UKMassUnfiltered_99 <- recip_matching(UKInMassUnfiltered_dict, MassInUKUnfiltered_dict, UKMassUnfiltered_seq_id_vec, 0.99)
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_90)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_90[names(match_UKMassUnfiltered_90)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_99)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_99[names(match_UKMassUnfiltered_99)]])
length(mmseq_results_FindUKInMass_unfiltered)
length(mmseq_results_FindUKInMass_unfiltered$V2)
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_90)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_90[names(match_UKMassUnfiltered_90)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_99)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_99[names(match_UKMassUnfiltered_99)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_90)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_90[names(match_UKMassUnfiltered_90)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_99)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_99[names(match_UKMassUnfiltered_99)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_99)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_99[names(match_UKMassUnfiltered_99)]])
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_90)], Mass_ggC_intermed_gene_freqs[match_UKMass_90[names(match_UKMass_90)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_95)], Mass_ggC_intermed_gene_freqs[match_UKMass_95[names(match_UKMass_95)]])
plot(UK_ggC_intermed_gene_freqs[names(match_UKMass_99)], Mass_ggC_intermed_gene_freqs[match_UKMass_99[names(match_UKMass_99)]])

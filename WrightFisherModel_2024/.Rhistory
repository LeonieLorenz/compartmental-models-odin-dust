plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(1:1500, gene_cluster_freqs_2[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#E69F00",type = "b")
lines(1:1500, gene_cluster_freqs_3[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#56B4E9", type = "b")
legend(1, 1, legend=c("2001", "2004", "2007"),col=c("black", "#E69F00","#56B4E9"), lty=1, cex=1)
#plot(1:length(gene_cluster_freqs_1), gene_cluster_freqs_3[sort.list(gene_cluster_freqs_1)])
# Plotting the changes in gene cluster frequencies between the 1st time point and the 2nd and 3rd, respectively, including a rolling mean
# I thought maybe there would be a correlation between the gene frequency and it variability. Well, there isn't.
library(zoo)
plot(1:1500, (gene_cluster_freqs_1-gene_cluster_freqs_2)[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(rollmean((gene_cluster_freqs_1-gene_cluster_freqs_2), 50), col = "#E69F00", lwd = 5)
legend(1, 0.15, legend=c("2001 minus 2004", "Rollmean"),col=c("black", "#E69F00"), lty=1, cex=1)
plot(1:1500, (gene_cluster_freqs_1-gene_cluster_freqs_3)[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(rollmean((gene_cluster_freqs_1-gene_cluster_freqs_3), 50), col = "#56B4E9", lwd = 5)
legend(1, 0.15, legend=c("2001 minus 2007", "Rollmean"),col=c("black", "#56B4E9"), lty=1, cex=1)
delta_ranking <- readRDS(file = "delta_ranking.rds")
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
intermed_gene_presence_absence_2001 <- readRDS(file = "intermed_gene_presence_absence_2001.rds")
intermed_gene_presence_absence_2004 <- readRDS(file = "intermed_gene_presence_absence_2004.rds")
intermed_gene_presence_absence_2007 <- readRDS(file = "intermed_gene_presence_absence_2007.rds")
# calculate gene frequencies first, separate for three time points
mass_gene_freq_1 <- apply(intermed_gene_presence_absence_2001[-1,-1], 1, sum_as_int)
mass_gene_freq_2 <- apply(intermed_gene_presence_absence_2004[-1,-1], 1, sum_as_int)
mass_gene_freq_3 <- apply(intermed_gene_presence_absence_2007[-1,-1], 1, sum_as_int)
# first, calculate pre/peri and post vacc frequencies of genes:
pre_peri_vacc_gene_freq <- (mass_gene_freq_1 + mass_gene_freq_2) / (sum(mass_cluster_freq_1) + sum(mass_cluster_freq_2))
pre_vacc_gene_freq <- (mass_gene_freq_1) / sum(mass_cluster_freq_1)
post_vacc_gene_freq <- mass_gene_freq_3 / sum(mass_cluster_freq_3)
peri_post <- (mass_gene_freq_2 + mass_gene_freq_3) / (sum(mass_cluster_freq_2) + sum(mass_cluster_freq_3))
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
delta_data
delta_ranking <- rank(delta_data)
delta_ranking
plot(delta_data)
sort(delta_data)
plot(sort(delta_data))
plot(sort(delta_data, decreasing = TRUE))
### find genes that always occur together
which(ggCPP_intermed_gene_presence_absence_consensus[2,]==1)
ggCPP_intermed_gene_presence_absence_consensus[-1,-1] <-  sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.integer)
grouped_genes_df <- data.frame(matrix(0,nrow = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1,ncol = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
for (i in 1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-3)){
#local_rowSum <- apply(abs(sapply(data.frame(matrix(rep(ggCPP_intermed_gene_presence_absence_consensus[(i+1),-1],nrow(ggCPP_intermed_gene_presence_absence_consensus)-i),nrow = nrow(ggCPP_intermed_gene_presence_absence_consensus)-i, byrow = TRUE)), as.integer) - sapply(ggCPP_intermed_gene_presence_absence_consensus[(i+2):(nrow(ggCPP_intermed_gene_presence_absence_consensus)),-1], as.integer)), MARGIN = 1, max)
local_vec <- as.integer(ggCPP_intermed_gene_presence_absence_consensus[(i+1),-1])
local_diff <- t(apply(sapply(ggCPP_intermed_gene_presence_absence_consensus[(i+2):(nrow(ggCPP_intermed_gene_presence_absence_consensus)),-1], as.integer), 1, function(x) x - local_vec))
local_rowSum <- apply(abs(local_diff), MARGIN = 1, max)
grouped_genes_df[i,(i+1):(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1)] <- 1 - local_rowSum
}
local_vec <- as.integer(ggCPP_intermed_gene_presence_absence_consensus[nrow(ggCPP_intermed_gene_presence_absence_consensus)-1,-1])
local_diff <- as.integer(ggCPP_intermed_gene_presence_absence_consensus[(nrow(ggCPP_intermed_gene_presence_absence_consensus)),-1]) - local_vec
local_rowSum <- max(abs(local_diff))
grouped_genes_df[nrow(ggCPP_intermed_gene_presence_absence_consensus)-1,nrow(ggCPP_intermed_gene_presence_absence_consensus)-1] <- 1 - local_rowSum
diag(grouped_genes_df) <- 0
sum(grouped_genes_df)
grouped_ind <- which(matrix(grepl("1", unlist(grouped_genes_df)), dim(grouped_genes_df)), arr.ind = TRUE)
group_gene_cl <- rep(0,length(unique(grouped_ind[,2])))
names_group_gene_cl <- rep(0,length(unique(grouped_ind[,2])))
j <- 0
for (i in 1:nrow(grouped_ind)){
if(!(grouped_ind[i,2] %in% names_group_gene_cl)){
j <- j + 1
group_gene_cl[j] <- grouped_ind[i,1]
names_group_gene_cl[j] <- grouped_ind[i,2]
}
}
names(group_gene_cl) <- names_group_gene_cl
length((group_gene_cl))
# 520 genes that are in a cluster with some other gene(s)
length(unique(group_gene_cl))
# create vector of length 1174 - 520 with randomly distributed 0s and 1s
rnd_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1,0.1)
# genes that are not part of any gene group (except gene group leaders)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- rnd_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
### Likelihood
ll_pois <- function(obs, model) {
exp_noise <- 1e6
if (is.na(obs)) {
# Creates vector of zeros in ll with same length, if no data
ll_obs <- numeric(length(model))
} else {
lambda <- model + rexp(n = length(model), rate = exp_noise)
ll_obs <- dpois(x = obs, lambda = lambda, log = TRUE)
}
ll_obs
}
combined_compare <- function(state, observed, pars = NULL) {
result <- 0
#data_size <- sum(mass_cluster_freq_1)
#model_size = 15000
data_size <- sum(observed)
model_size = sum(state)
for (i in 1:length(observed)){
result <- result + ll_pois(observed[i], state[i]/model_size * data_size)
}
result
}
### load model
WF <- odin.dust::odin_dust("NFDS_Model_FindGenes.R")
### Try finding optimal gene set using simulated annealing
library(optimization)
start_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1, 0.1)
fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- fit_params
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
params <- c(all_other_params, delta_bool = rnd_vect_full)
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_ggCPP$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
fit_FindGenes_ggCPP <- fitting_closure(FindGenes_ggCPP_params, PP_mass_cluster_freq_2, PP_mass_cluster_freq_3)
FindGenes_sa <- optim_sa(fun = fit_FindGenes_ggCPP, start = start_vect, maximization = TRUE, trace = TRUE,lower=rep(0,length(start_vect)), upper=rep(1,length(start_vect)))
start_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1, 0.1)
fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
print(fit_params)
rnd_vect_full[unique_genes] <- fit_params
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
params <- c(all_other_params, delta_bool = rnd_vect_full)
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_ggCPP$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
fit_FindGenes_ggCPP <- fitting_closure(FindGenes_ggCPP_params, PP_mass_cluster_freq_2, PP_mass_cluster_freq_3)
FindGenes_sa <- optim_sa(fun = fit_FindGenes_ggCPP, start = start_vect, maximization = TRUE, trace = TRUE,lower=rep(0,length(start_vect)), upper=rep(1,length(start_vect)))
start_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1, 0.1)
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- start_vect
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
rnd_vect_full
params <- c(all_other_params, delta_bool = rnd_vect_full)
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
params <- c(FindGenes_ggCPP_params, delta_bool = rnd_vect_full)
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
params
rnd_vect_full
params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 1.081632, sigma_w = 0, prop_f = 1, delta_bool = rnd_vect_full, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 1.081632, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0, delta_bool = rnd_vect_full)
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
list[1,2,3]
list(1,2,3)
list(list(1,2,3),4)
list(unlist(1,2,3),4)
list(unlist(list(1,2,3)),4)
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
FindGenes_ggCPP_params$delta_bool = rnd_vect_full
FindGenes_ggCPP_params
start_vect <- rbinom(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1 -length((group_gene_cl)) ,1, 0.1)
fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
print(fit_params)
rnd_vect_full[unique_genes] <- fit_params
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
params$delta_bool = rnd_vect_full
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_ggCPP$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
fit_FindGenes_ggCPP <- fitting_closure(FindGenes_ggCPP_params, PP_mass_cluster_freq_2, PP_mass_cluster_freq_3)
FindGenes_sa <- optim_sa(fun = fit_FindGenes_ggCPP, start = start_vect, maximization = TRUE, trace = TRUE,lower=rep(0,length(start_vect)), upper=rep(1,length(start_vect)))
fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
unique_genes <- setdiff(1:(nrow(ggCPP_intermed_gene_presence_absence_consensus)-1), names(group_gene_cl))
rnd_vect_full <- rep(0, (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1))
rnd_vect_full[unique_genes] <- fit_params
rnd_vect_full[as.integer(names(group_gene_cl))] <- rnd_vect_full[unname(group_gene_cl)]
params$delta_bool = rnd_vect_full
WFmodel_ggCPP <- WF$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel_ggCPP$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_ggCPP$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
FindGenes_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.3090376, sigma_w = 0, prop_f = 1, m = 0.03104461, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.15977862, vacc_time = 0)
fit_FindGenes_ggCPP <- fitting_closure(FindGenes_ggCPP_params, PP_mass_cluster_freq_2, PP_mass_cluster_freq_3)
FindGenes_sa <- optim_sa(fun = fit_FindGenes_ggCPP, start = start_vect, maximization = TRUE, trace = TRUE,lower=rep(0,length(start_vect)), upper=rep(1,length(start_vect)))
FindGenes_sa
FindGenes_sa$control$rf
tail(FindGenes_sa$control$rf)
FindGenes_sa$par
plot(FindGenes_sa$par)
length(FindGenes_sa$par>0.6)
length(FindGenes_sa$par<0.6)
length(which(FindGenes_sa$par>0.6))
length(which(FindGenes_sa$par<0.6))
length(which(FindGenes_sa$par>0.6))/length(find_genes_df$par)
length(find_genes_df$par)
length(which(FindGenes_sa$par>0.6))/length(FindGenes_sa$par)
FindGenes_sa$function_value
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
plot(sort(delta_data, decreasing = TRUE))
plot(sort(delta_data, decreasing = TRUE), yscale = log)
plot(sort(delta_data, decreasing = TRUE), log = y)
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE), log = y)
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE), log = "y")
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
delta_data <- abs(post_vacc_gene_freq - pre_peri_vacc_gene_freq) / (1 - pre_peri_vacc_gene_freq)
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
delta_data <- abs(post_vacc_gene_freq - pre_peri_vacc_gene_freq) / (pre_peri_vacc_gene_freq)
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
delta_data <- abs(post_vacc_gene_freq - pre_peri_vacc_gene_freq)
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
lines(1:length(delta_data),-exp(1:length(delta_data)))
plot(1:length(delta_data),sort(delta_data, decreasing = TRUE))
lines(-exp(1:length(delta_data)))
line(-exp(1:length(delta_data)))
-exp(1:length(delta_data))
line(log(1:length(delta_data)))
lines(log(1:length(delta_data)))
lines(log(1:length(delta_data) * 100))
plot(1:length(delta_data),-exp(1:length(delta_data)))
plot(1:length(delta_data),0.5^(1:length(delta_data)))
plot(1:length(delta_data),0.15^(1:length(delta_data)))
plot(sort(delta_data, decreasing = TRUE))
lines(0.15^(1:length(delta_data)))
lines(0.5^(1:length(delta_data)))
lines(1/(1 - 2^(1:length(delta_data))))
lines(1/(1 - 2^-(1:length(delta_data))))
plot(sort(delta_data, decreasing = TRUE))
lines(1/(1 - 2^-(1:length(delta_data))))
plot(1:length(delta_data),1/(1 - 2^-(1:length(delta_data))))
plot(1:length(delta_data),1/(1 - 0.15^-(1:length(delta_data))))
plot(1:length(delta_data),1/(1 + 0.15^-(1:length(delta_data))))
plot(sort(delta_data, decreasing = TRUE))
lines(1/(1 + 0.15^-(1:length(delta_data))))
lines(1/(1 + 3 * 0.15^-(1:length(delta_data))))
lines(1/(1 + 100 * 0.15^-(1:length(delta_data))))
lines(10/(1 + 0.15^-(1:length(delta_data))))
lines(100(1 + 0.15^-(1:length(delta_data))))
lines(100/(1 + 0.15^-(1:length(delta_data))))
lines(100/(1 + 1.15^-(1:length(delta_data))))
lines(100/(1 + 10^-(1:length(delta_data))))
lines(1/(1 + 10^-(1:length(delta_data))))
plot(1:length(delta_data),1/(1 + 10^-(1:length(delta_data))))
plot(1:length(delta_data),1/(1 + 0.9^-(1:length(delta_data))))
plot(1:length(delta_data),1/(1 + 0.5^-(1:length(delta_data))))
plot(sort(delta_data, decreasing = TRUE))
lines(1/(1 + 0.5^-(1:length(delta_data))))
lines(1/(1 + 0.7^-(1:length(delta_data))))
lines(1/(1 + 0.9^-(1:length(delta_data))))
lines(1/(1 + 5* 0.9^-(1:length(delta_data))))
lines(1/(1 + 10* 0.9^-(1:length(delta_data))))
lines(100/(1 + 10* 0.9^-(1:length(delta_data))))
lines(100/(1 + 20* 0.9^-(1:length(delta_data))))
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
ggCPP_intermed_gene_presence_absence_consensus <- readRDS(file = "ggCPP_intermed_gene_presence_absence_consensus.rds")
ggCPP_intermed_gene_presence_absence_consensus_matrix <- sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
ggC_delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
PP_mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
PP_mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
PP_mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
pca_results <- prcomp(ggCPP_intermed_gene_presence_absence_consensus[-1,-1], scale = TRUE)
pca_results <- prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = TRUE)
pca_results
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
#create scree plot
library(ggplot2)
qplot(c(1:4), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
var_explained
qplot(c(1:4), var_explained[1:4]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
qplot(c(1:10), var_explained[1:10]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
length(var_explained)
ggplot(c(1:10), var_explained[1:10]) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
var_explained
ggplot(data = data.frame( comp = c(1:10), explained_var = var_explained[1:10])) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
ggplot(data = data.frame( comp = c(1:10), explained_var = var_explained[1:10]), aes(y=explained_var, x=comp)) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
ggplot(data = data.frame( comp = c(1:10), explained_var = var_explained[1:10]), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
ggplot(data = data.frame( comp = length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
pca_results <- prcomp(t(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)), scale = TRUE)
pca_results <- prcomp(t(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)), scale = FALSE)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
pca_results <- prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = FALSE)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
pca_results <- prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = TRUE)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
View(ggCPP_intermed_gene_presence_absence_consensus)
ggplot2::autoplot(pca_results, data=sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), colour="X1", frame=TRUE, frame.type="t")
ggplot(pca_results,aes(PC1, PC2))+
geom_point()
pca_results
ggplot(data.frame(pca_results),aes(PC1, PC2))+
geom_point()
prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = TRUE).pca
prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = TRUE)
ggplot(data.frame(pca_results$rotation),aes(PC1, PC2))+
geom_point()
pca_results <- prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = TRUE)
summary(pca_results)
pca_results$x
summary(pca_results)
pca_results <- prcomp(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double), scale = TRUE, center = TRUE)
summary(pca_results)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
load(ggplot2)
library(ggplot2)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
pca_results <- prcomp(t(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)), scale = TRUE, center = TRUE)
pca_results <- prcomp(t(sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)))
summary(pca_results)
var_explained = pca_results$sdev^2 / sum(pca_results$sdev^2)
#library(ggplot2)
ggplot(data = data.frame( comp = 1:length(var_explained), explained_var = var_explained), aes(y=explained_var, x=comp)) +
geom_line() +
geom_point() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Elbow Plot") +
ylim(0, 1)
summary(pca_results)
ggplot(data.frame(pca_results$rotation),aes(PC1, PC2))+
geom_point()
pca_results$sdev
fviz_eig(pca_results, addlabels = TRUE)
library('corrr')
install.packages("corrr")
library('corrr')
fviz_eig(pca_results, addlabels = TRUE)
summary(pca_results)
plot(cumsum(pca_results$sdev^2 / sum(pca_results$sdev^2)))
lines(1/length(pca_results$sdev))
lines(1/length(pca_results$sdev)*1:length(pca_results$sdev))
1/length(pca_results$sdev)*1:length(pca_results$sdev)
plot(cumsum(pca_results$sdev^2 / sum(pca_results$sdev^2)), ylim = c(0,1))
lines(1/length(pca_results$sdev)*1:length(pca_results$sdev))
cumsum(pca_results$sdev^2 / sum(pca_results$sdev^2))
optim
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
plot(sort(delta_data, decreasing = TRUE))
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2
plot(sort(delta_data, decreasing = TRUE))
delta_data <- abs(post_vacc_gene_freq - pre_peri_vacc_gene_freq)
plot(sort(delta_data, decreasing = TRUE))
# calculate delta statistic (refer to Corander et al. for more info)
delta_data <- (post_vacc_gene_freq - pre_peri_vacc_gene_freq) ^ 2 / (1 - pre_peri_vacc_gene_freq * (1 - pre_peri_vacc_gene_freq))
delta_ranking <- rank(delta_data)
rank(-delta_data)
delta_ranking
rank(1:10)
rank(10:1)

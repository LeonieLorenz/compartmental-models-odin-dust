WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[-1,1][1:mass_clusters]
sim_results_Mass[,i] <- simMeanggCPP3_Mass_1
}
sim_results_Mass[1,]
# create empty array for storing all of the simulation results
empty_vec <- rep(0,mass_clusters)
sim_results_Mass <- array(c(empty_vec, 20), dim = c(mass_clusters, 20))
for (i in 1:20) {
PPxSero_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = Mass_PPxSero_mcmc[sampled_param_id[i],4], prop_f = Mass_PPxSero_mcmc[sampled_param_id[i],5], sigma_w =-1000 , delta = delta_ranking, m = Mass_PPxSero_mcmc[sampled_param_id[i],6], migVec =  as.matrix(avg_cluster_freq), v = Mass_PPxSero_mcmc[sampled_param_id[i],7] , vaccTypes = mass_VT, vacc_time = 0, sero_no = sero_no)
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[-1,1][1:mass_clusters]
sim_results_Mass[,i] <- simMeanggCPP3_Mass_1
}
sim_results_Mass
t.test(sim_results_Mass[1,])
colSums(sim_results_Mass)
divide_by_sum <- function(x){
x <- x / sum(x)
x
}
sim_results_Mass_rel <- apply(sim_results_Mass, 2, divide_by_sum)
sim_results_Mass_rel[1,]
sim_results_Mass[1,]/15603
sim_results_Mass_rel[,1]
sim_results_Mass[,1]/15603
t.test(sim_results_Mass_rel[1,])
ttest_1 <- t.test(sim_results_Mass_rel[1,])
ttest_1$conf.int
ttest_1$conf.int[1]
ttest_1$conf.int[2]
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
conf_intervals_Mass
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,], conf.level = 0.5)
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,], conf.level = 0.25)
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
conf_intervals_Mass
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,], conf.level = 0.99)
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
PPxSero_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = Mass_PPxSero_mcmc[sampled_param_id[i],4], prop_f = Mass_PPxSero_mcmc[sampled_param_id[i],5], sigma_w =-1000 , delta = delta_ranking, m = Mass_PPxSero_mcmc[sampled_param_id[i],6], migVec =  as.matrix(avg_cluster_freq), v = Mass_PPxSero_mcmc[sampled_param_id[i],7] , vaccTypes = mass_VT, vacc_time = 0, sero_no = sero_no)
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[-1,1][1:mass_clusters]
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[-1,1][1:mass_clusters]
WF_PPxSero_model$run(72)
# create empty array for storing all of the simulation results
empty_vec <- rep(0,mass_clusters)
sim_results_Mass <- array(c(empty_vec, 100), dim = c(mass_clusters, 100))
for (i in 1:100) {
PPxSero_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = Mass_PPxSero_mcmc[sampled_param_id[i],4], prop_f = Mass_PPxSero_mcmc[sampled_param_id[i],5], sigma_w =-1000 , delta = delta_ranking, m = Mass_PPxSero_mcmc[sampled_param_id[i],6], migVec =  as.matrix(avg_cluster_freq), v = Mass_PPxSero_mcmc[sampled_param_id[i],7] , vaccTypes = mass_VT, vacc_time = 0, sero_no = sero_no)
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[-1,1][1:mass_clusters]
sim_results_Mass[,i] <- simMeanggCPP3_Mass_1
}
divide_by_sum <- function(x){
x <- x / sum(x)
x
}
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
head(conf_intervals_Mass)
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
colSums(conf_intervals_Mass)
head(sim_results_Mass_rel)
sim_results_Mass_rel <- apply(sim_results_Mass, 2, divide_by_sum)
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
PPxSero_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = Mass_PPxSero_mcmc[sampled_param_id[i],4], prop_f = Mass_PPxSero_mcmc[sampled_param_id[i],5], sigma_w =-1000 , delta = delta_ranking, m = Mass_PPxSero_mcmc[sampled_param_id[i],6], migVec =  as.matrix(avg_cluster_freq), v = Mass_PPxSero_mcmc[sampled_param_id[i],7] , vaccTypes = mass_VT, vacc_time = 0, sero_no = sero_no)
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 1L,
n_threads = 4L,
seed = 1L)
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 100L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[-1,1][1:mass_clusters]
simMeanggCPP3_Mass_1
PPxSero_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = Mass_PPxSero_mcmc[sampled_param_id[i],4], prop_f = Mass_PPxSero_mcmc[sampled_param_id[i],5], sigma_w =-1000 , delta = delta_ranking, m = Mass_PPxSero_mcmc[sampled_param_id[i],6], migVec =  as.matrix(avg_cluster_freq), v = Mass_PPxSero_mcmc[sampled_param_id[i],7] , vaccTypes = mass_VT, vacc_time = 0, sero_no = sero_no)
WF_PPxSero_model <- WF_PPxSero$new(pars = PPxSero_params,
time = 0,
n_particles = 100L,
n_threads = 8L,
seed = 1L)
simMeanggCPP3_Mass_1 <- WF_PPxSero_model$run(72)[(2:(mass_clusters+1)),]
head(simMeanggCPP3_Mass_1)
sim_results_Mass_rel <- apply(simMeanggCPP3_Mass_1, 2, divide_by_sum)
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(sim_results_Mass_rel[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = conf_intervals_Mass[,1], model_name_2 ="upper_bound", model2 = conf_intervals_Mass[,2], VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
head(sim_results_Mass_rel)
# collect confidence intervals for all clusters
conf_intervals_Mass <- array(c(empty_vec,empty_vec),dim = c(mass_clusters, 2))
for (i in 1:mass_clusters) {
ttest <- t.test(simMeanggCPP3_Mass_1[i,])
conf_intervals_Mass[i,] <- c(ttest$conf.int[1], ttest$conf.int[2])
}
conf_intervals_Mass
colSums(conf_intervals_Mass)
colSums(simMeanggCPP3_Mass_1)
mean(colSums(simMeanggCPP3_Mass_1))
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_3/sum(mass_cluster_freq_3), model_name_1 ="lower_bound", model1 = (conf_intervals_Mass[,1])/mean(colSums(simMeanggCPP3_Mass_1)), model_name_2 ="upper_bound", model2 = (conf_intervals_Mass[,2])/mean(colSums(simMeanggCPP3_Mass_1)), VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
sim_results_Mass_rel[1,]
plot(sim_results_Mass_rel[1,])
t.test(sim_results_Mass_rel[1,])
t.test(sim_results_Mass_rel[2,])
head(sim_results_Mass_rel)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p")
points(sim_results_Mass_rel[1,], col = "red")
points(sim_results_Mass_rel[2,], col = "red")
sim_results_Mass_rel <- apply(sim_results_Mass, 2, divide_by_sum)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p")
points(sim_results_Mass_rel[1,], col = "red")
points(sim_results_Mass_rel[2,], col = "red")
colSums(sim_results_Mass_rel)
sum(sim_results_Mass_rel[1,])
sum(sim_results_Mass_rel[2,])
length(colSums(sim_results_Mass_rel))
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p")
points(sim_results_Mass_rel[,1], col = "red")
points(sim_results_Mass_rel[,2], col = "red")
points(sim_results_Mass_rel[,3], col = "red")
points(sim_results_Mass_rel[,4], col = "red")
points(sim_results_Mass_rel[,5], col = "red")
points(sim_results_Mass_rel[,6], col = "red")
points(sim_results_Mass_rel[,7], col = "red")
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(sim_results_Mass_rel[,1], col = "red")
points(sim_results_Mass_rel[,2], col = "red")
points(sim_results_Mass_rel[,3], col = "red")
points(sim_results_Mass_rel[,4], col = "red")
points(sim_results_Mass_rel[,5], col = "red")
points(sim_results_Mass_rel[,6], col = "red")
points(sim_results_Mass_rel[,7], col = "red")
points(sim_results_Mass_rel[,8], col = "red")
points(sim_results_Mass_rel[,9], col = "red")
points(sim_results_Mass_rel[,10], col = "red")
rowMax <- function(x){
max(x)
}
sim_res_rowMax <- apply(sim_results_Mass_rel,1,rowMax)
length(sim_res_rowMax)
rowMin <- function(x){
min(x)
}
rowMin <- function(x){
min(x)
}
sim_res_rowMin <- apply(sim_results_Mass_rel,1,rowMin)
sim_res_rowMin
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(sim_res_rowMax, col = "red")
points(sim_res_rowMin, col = "red")
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19, ylim = c(0,0.2))
points(sim_res_rowMax, col = "red")
points(sim_res_rowMin, col = "red")
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
ggCPP_intermed_gene_presence_absence_consensus <- readRDS(file = "ggCPP_intermed_gene_presence_absence_consensus.rds")
ggCPP_intermed_gene_presence_absence_consensus_matrix <- sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
ggC_delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
PP_mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
PP_mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
PP_mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
PP_mass_clusters <- length(unique(PopPUNK_clusters$Cluster))
PP_avg_cluster_freq <- rep(1/PP_mass_clusters, PP_mass_clusters)
# repeat this for standard model
#corrected
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.0958228, sigma_w = -1000, prop_f = 0.3107495, delta = ggC_delta_ranking, m = -4.1434129, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1366157, vacc_time = 0)
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
sim_ggCPP3 <- (WFmodel_ggCPP$run(72)[-1,])
head(sim_ggCPP3)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(sim_ggCPP3[,1], col = "red")
points(sim_ggCPP3[,2], col = "red")
points(sim_ggCPP3[,1]/sum(sim_ggCPP3[,1]), col = "red")
points(sim_ggCPP3[,2]/sum(sim_ggCPP3[,2]), col = "red")
points(sim_ggCPP3[,3]/sum(sim_ggCPP3[,2]), col = "red")
points(sim_ggCPP3[,4]/sum(sim_ggCPP3[,2]), col = "red")
points(sim_ggCPP3[,5]/sum(sim_ggCPP3[,2]), col = "red")
points(sim_ggCPP3[,6]/sum(sim_ggCPP3[,2]), col = "red")
points(sim_ggCPP3[,7]/sum(sim_ggCPP3[,2]), col = "red")
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 100L,
n_threads = 4L,
seed = 1L)
sim_ggCPP3 <- (WFmodel_ggCPP$run(72)[-1,])
sim_res_rowMax <- apply(sim_ggCPP3,1,rowMax)
sim_res_rowMin <- apply(sim_ggCPP3,1,rowMin)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(sim_res_rowMax, col = "red")
points(sim_res_rowMin, col = "red")
sim_ggCPP3_rel <- apply(sim_ggCPP3_rel,2,divide_by_sum)
sim_ggCPP3_rel <- apply(sim_ggCPP3,2,divide_by_sum)
sim_res_rowMax <- apply(sim_ggCPP3_rel,1,rowMax)
sim_res_rowMin <- apply(sim_ggCPP3_rel,1,rowMin)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(sim_res_rowMax, col = "red")
points(sim_res_rowMin, col = "red")
# params from fit ggCPP 2024_03_08
# 0.008118758 0.031313422
null_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters, Pop_ini = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, vacc_time = 0, m = 0.008118758, v = 0.031313422)
# params from fit ggCPP 2024_03_08
# 0.008118758 0.031313422
null_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters, Pop_ini = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, vacc_time = 0, m = 0.008118758, v = 0.031313422)
WFmodelnull_ggCPP <- WF_null$new(pars = null_ggCPP_params,
time = 0,
n_particles = 100L,
n_threads = 4L,
seed = 1L)
# this for null model
WF_null <- odin.dust::odin_dust("null_NFDS_Model.R")
# params from fit ggCPP 2024_03_08
# 0.008118758 0.031313422
null_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters, Pop_ini = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, vacc_time = 0, m = 0.008118758, v = 0.031313422)
WFmodelnull_ggCPP <- WF_null$new(pars = null_ggCPP_params,
time = 0,
n_particles = 100L,
n_threads = 4L,
seed = 1L)
simMeanggCPP3 <- rowMeans(WFmodelnull_ggCPP$run(72)[-1,])
sim_ggCPP3 <- (WFmodel_ggCPP$run(72)[-1,])
sim_ggCPP3_rel <- apply(sim_ggCPP3,2,divide_by_sum)
sim_res_rowMax <- apply(sim_ggCPP3_rel,1,rowMax)
sim_res_rowMin <- apply(sim_ggCPP3_rel,1,rowMin)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(sim_res_rowMax, col = "red")
points(sim_res_rowMin, col = "red")
# check for within-cluster overdispersion for Mass
plot(1:mass_clusters, mass_cluster_freq_1/sum(mass_cluster_freq_1), pch = 19)
# check for within-cluster overdispersion for Mass
plot(1:mass_clusters, mass_cluster_freq_1/sum(mass_cluster_freq_1), pch = 21)
points(mass_cluster_freq_2/sum(mass_cluster_freq_2), col = "red")
points(mass_cluster_freq_3/sum(mass_cluster_freq_3), col = "blue")
dpois(1,mass_cluster_freq_1[1])
mass_cluster_freq_1[1]
dpois(10,mass_cluster_freq_1[1])
dpois(10,mass_cluster_freq_1[2])
dpois(1,mass_cluster_freq_1[2])
mass_cluster_freq_1[2]
dpois(sum(mass_cluster_freq_1),mass_cluster_freq_1[2])
plot(dpois(sum(mass_cluster_freq_1),mass_cluster_freq_1[2]))
plot(dpois(1:sum(mass_cluster_freq_1),mass_cluster_freq_1[2]))
plot(dpois(1:sum(mass_cluster_freq_1),mass_cluster_freq_1[2]))
points(mass_cluster_freq_1[2])
points(mass_cluster_freq_1[2],col = "blue")
abline(mass_cluster_freq_1[2],col = "blue")
abline(v = mass_cluster_freq_1[2],col = "blue")
abline(v = mass_cluster_freq_2[2],col = "red")
abline(v = mass_cluster_freq_3[2],col = "orange")
plot(dpois(1:sum(mass_cluster_freq_1),mass_cluster_freq_1[2]), col = "blue")
abline(v = mass_cluster_freq_1[2],col = "blue")
abline(v = mass_cluster_freq_2[2],col = "red")
abline(v = mass_cluster_freq_3[2],col = "orange")
points(dpois(1:sum(mass_cluster_freq_2),mass_cluster_freq_2[2]), col = "blue")
plot(dpois(1:sum(mass_cluster_freq_1),mass_cluster_freq_1[2]), col = "blue")
abline(v = mass_cluster_freq_1[2],col = "blue")
abline(v = mass_cluster_freq_2[2],col = "red")
points(dpois(1:sum(mass_cluster_freq_2),mass_cluster_freq_2[2]), col = "red")
abline(v = mass_cluster_freq_3[2],col = "orange")
plot(dpois(1:sum(mass_cluster_freq_1),mass_cluster_freq_1[1]), col = "blue")
abline(v = mass_cluster_freq_1[1],col = "blue")
abline(v = mass_cluster_freq_2[1],col = "red")
points(dpois(1:sum(mass_cluster_freq_2),mass_cluster_freq_2[1]), col = "red")
abline(v = mass_cluster_freq_3[1],col = "orange")
# check for within-cluster overdispersion for Mass
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
plot(1:mass_clusters, PP_model_start_pop/sum(PP_model_start_pop), pch = 21)
points(mass_cluster_freq_2/sum(mass_cluster_freq_2), col = "red")
points(mass_cluster_freq_3/sum(mass_cluster_freq_3), col = "blue")
plot(dpois(1:sum(PP_model_start_pop),PP_model_start_pop[1]), col = "blue")
abline(v = PP_model_start_pop[1],col = "blue")
abline(v = mass_cluster_freq_2[1],col = "red")
points(dpois(1:sum(mass_cluster_freq_2),mass_cluster_freq_2[1]), col = "red")
PP_model_start_pop_scaled <- PP_model_start_pop/sum(PP_model_start_pop) * sum(mass_cluster_freq_1)
plot(1:mass_clusters, PP_model_start_pop_scaled/sum(PP_model_start_pop_scaled), pch = 21)
points(mass_cluster_freq_2/sum(mass_cluster_freq_2), col = "red")
points(mass_cluster_freq_3/sum(mass_cluster_freq_3), col = "blue")
plot(dpois(1:sum(PP_model_start_pop_scaled),PP_model_start_pop_scaled[1]), col = "blue")
abline(v = PP_model_start_pop_scaled[1],col = "blue")
abline(v = mass_cluster_freq_2[1],col = "red")
combined_compare(mass_cluster_freq_3, mass_cluster_freq_3)
dpois(mass_cluster_freq_3[1],mass_cluster_freq_3[1])
combined_compare(mass_cluster_freq_3, mass_cluster_freq_3*2)
combined_compare(mass_cluster_freq_3, mass_cluster_freq_3*2)
combined_compare(mass_cluster_freq_3*2, mass_cluster_freq_3)
combined_compare(mass_cluster_freq_3 + rep(1, mass_clusters), mass_cluster_freq_3)
combined_compare(mass_cluster_freq_3 + rep(2, mass_clusters), mass_cluster_freq_3)
combined_compare(mass_cluster_freq_3 + rep(3, mass_clusters), mass_cluster_freq_3)
rpois(1,mass_cluster_freq_3)
rpois(mass_clusters,mass_cluster_freq_3)
mass_cluster_freq_3
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(rpois(mass_clusters,mass_cluster_freq_3), mass_cluster_freq_3)
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(mass_cluster_freq_3,rpois(mass_clusters,mass_cluster_freq_3))
simMeanggCPP3
combined_compare(simMeanggCPP3,rpois(mass_clusters,mass_cluster_freq_3))
combined_compare(simMeanggCPP3,mass_cluster_freq_3)
# 4 param fit
Mass_4param_fit <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_07_26/Mass_correctedLikelihood/4param_ggCaller_PopPUNK_det_pmcmc_run2.rds")
Mass_4param_fit_mcmc <- coda::as.mcmc(cbind(Mass_4param_fit$probabilities, Mass_4param_fit$pars))
Mass_4param_fit$state
Mass_4param_fit$state[,80000]
Mass_4param_fit$state[,79999]
dim(Mass_4param_fit$state)
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(Mass_4param_fit$state[,80000], col = "red")
points(Mass_4param_fit$state[,80000]/sum(Mass_4param_fit$state[,80000]), col = "red")
points(Mass_4param_fit$state[,79999]/sum(Mass_4param_fit$state[,79999]), col = "red")
points(Mass_4param_fit$state[,79999]/sum(Mass_4param_fit$state[,79999]), col = "red")
points(Mass_4param_fit$state[,1000]/sum(Mass_4param_fit$state[,1000]), col = "red")
points(Mass_4param_fit$state[,10000]/sum(Mass_4param_fit$state[,10000]), col = "red")
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(Mass_4param_fit$state[,10000]/sum(Mass_4param_fit$state[,10000]), col = "red")
points(Mass_4param_fit$state[,20000]/sum(Mass_4param_fit$state[,20000]), col = "red")
points(Mass_4param_fit$state[,30000]/sum(Mass_4param_fit$state[,30000]), col = "red")
points(Mass_4param_fit$state[,40000]/sum(Mass_4param_fit$state[,40000]), col = "red")
points(Mass_4param_fit$state[,50000]/sum(Mass_4param_fit$state[,50000]), col = "red")
points(Mass_4param_fit$state[,60000]/sum(Mass_4param_fit$state[,60000]), col = "red")
points(Mass_4param_fit$state[,70000]/sum(Mass_4param_fit$state[,70000]), col = "red")
points(Mass_4param_fit$state[,80000]/sum(Mass_4param_fit$state[,80000]), col = "red")
head(mass_cluster_freq_3/sum(mass_cluster_freq_3))
head(Mass_4param_fit$state[,10000]/sum(Mass_4param_fit$state[,10000]))
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(Mass_4param_fit$state[-1,10000]/sum(Mass_4param_fit$state[-1,10000]), col = "red")
points(Mass_4param_fit$state[-1,20000]/sum(Mass_4param_fit$state[-1,20000]), col = "red")
points(Mass_4param_fit$state[-1,30000]/sum(Mass_4param_fit$state[-1,30000]), col = "red")
points(Mass_4param_fit$state[-1,40000]/sum(Mass_4param_fit$state[-1,40000]), col = "red")
points(Mass_4param_fit$state[-1,50000]/sum(Mass_4param_fit$state[-1,50000]), col = "red")
points(Mass_4param_fit$state[-1,60000]/sum(Mass_4param_fit$state[-1,60000]), col = "red")
points(Mass_4param_fit$state[-1,70000]/sum(Mass_4param_fit$state[-1,70000]), col = "red")
points(Mass_4param_fit$state[-1,80000]/sum(Mass_4param_fit$state[-1,80000]), col = "red")
plot(1:mass_clusters, mass_cluster_freq_3/sum(mass_cluster_freq_3), type = "p", pch = 19)
points(Mass_4param_fit$state[-1,10000]/sum(Mass_4param_fit$state[-1,10000]), col = "red")
points(Mass_4param_fit$state[-1,20000]/sum(Mass_4param_fit$state[-1,20000]), col = "red")
points(Mass_4param_fit$state[-1,30000]/sum(Mass_4param_fit$state[-1,30000]), col = "red")
points(Mass_4param_fit$state[-1,40000]/sum(Mass_4param_fit$state[-1,40000]), col = "red")
points(Mass_4param_fit$state[-1,50000]/sum(Mass_4param_fit$state[-1,50000]), col = "red")
points(Mass_4param_fit$state[-1,60000]/sum(Mass_4param_fit$state[-1,60000]), col = "red")
points(Mass_4param_fit$state[-1,70000]/sum(Mass_4param_fit$state[-1,70000]), col = "red")
points(Mass_4param_fit$state[-1,80000]/sum(Mass_4param_fit$state[-1,80000]), col = "red")
ll_pois(mass_cluster_freq_3/sum(mass_cluster_freq_3)[1],Mass_4param_fit$state[-1,10000]/sum(Mass_4param_fit$state[-1,10000])[1])
ll_pois(mass_cluster_freq_3[1]/sum(mass_cluster_freq_3),Mass_4param_fit$state[2,10000]/sum(Mass_4param_fit$state[-1,10000]))
ll_pois(mass_cluster_freq_3[1],Mass_4param_fit$state[2,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
ll_pois(mass_cluster_freq_3[2],Mass_4param_fit$state[3,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
ll_pois(mass_cluster_freq_3[55],Mass_4param_fit$state[56,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
# how much does each of them contribute to the likelihood?
combined_likelihood <- apply(mass_cluster_freq_3, 1, ll_pois, Mass_4param_fit$state[-1,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
# how much does each of them contribute to the likelihood?
combined_likelihood <- apply(mass_cluster_freq_3, ll_pois, Mass_4param_fit$state[-1,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
# how much does each of them contribute to the likelihood?
combined_likelihood <- lapply(mass_cluster_freq_3, ll_pois, Mass_4param_fit$state[-1,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
combined_likelihood
# how much does each of them contribute to the likelihood?
combined_likelihood <- rep(0, mass_clusters)
# how much does each of them contribute to the likelihood?
combined_likelihood <- rep(0, mass_clusters)
for (i in 1:mass_clusters) {
combined_likelihood[i] <- ll_pois(mass_cluster_freq_3[i],Mass_4param_fit$state[i+1,10000]/sum(Mass_4param_fit$state[-1,10000])*sum(mass_cluster_freq_3))
}
combined_likelihood
plot(combined_likelihood)
VT_vec
mass_VT
length(mass_VT)
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
length(PP_mass_VT)
plot(combined_likelihood * PP_mass_VT)
points(combined_likelihood * (1-PP_mass_VT), col="red")
plot(combined_likelihood * PP_mass_VT, pch = 19)
points(combined_likelihood * (1-PP_mass_VT), pch = 21)
plot(combined_likelihood * PP_mass_VT, pch = 21)
points(combined_likelihood * (1-PP_mass_VT), pch = 19)
which(PP_mass_VT)
which(PP_mass_VT==1)
plot(combined_likelihood[which(PP_mass_VT==1)], pch = 21)
points(combined_likelihoodwhich(PP_mass_VT==0), pch = 19)
points(combined_likelihood[which(PP_mass_VT==0)], pch = 19)
plot(combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0))
points(combined_likelihood[which(PP_mass_VT==0)], pch = 19)
legend(12,4, legend = c("VT","NVT"), pch = c(21,19))
legend(12,-4, legend = c("VT","NVT"), pch = c(21,19))
legend(14,-4, legend = c("VT","NVT"), pch = c(21,19))
plot(combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0))
points(combined_likelihood[which(PP_mass_VT==0)], pch = 19)
legend(14,-4, legend = c("VT","NVT"), pch = c(21,19))
mean(combined_likelihood[which(PP_mass_VT==1)])
mean(combined_likelihood[which(PP_mass_VT==0)])
length(combined_likelihood)
combined_likelihood[which(PP_mass_VT==1)]
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0))
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
legend(14,-4, legend = c("VT","NVT"), pch = c(21,19))
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0), xlab = c(0,55))
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0), xlab = c(0,56))
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0), xlab = c(0,60))
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0), xlim = c(0,60))
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
legend(14,-4, legend = c("VT","NVT"), pch = c(21,19))
legend(40,-4, legend = c("VT","NVT"), pch = c(21,19))
legend(0,0, legend = c("VT","NVT"), pch = c(21,19))
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0), xlim = c(0,56))
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
legend(0,0, legend = c("VT","NVT"), pch = c(21,19))
plot(which(PP_mass_VT==1),combined_likelihood[which(PP_mass_VT==1)], pch = 21, ylim = c(-5,0), xlim = c(0,56), xlab = "Massachusetts Clusters", ylab = "likelihood")
points(which(PP_mass_VT==0),combined_likelihood[which(PP_mass_VT==0)], pch = 19)
legend(0,0, legend = c("VT","NVT"), pch = c(21,19))

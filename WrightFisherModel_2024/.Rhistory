unlist(PP_serotype_comp)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])])
paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])]), collapse = "")
paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])]), collapse = ", ")
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[1])]), collapse = ", ")
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(Mass_Samples_accCodes$Serotype[which(Mass_Samples_accCodes$SequenceCluster==PP_to_manSeq_dict[i])]), collapse = ", ")
}
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
PP_serotype_comp
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
View(PopPUNK_clusters)
PopPUNK_clusters <- read.csv("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/Data/refined_modelfitk3_clusters.csv")
no_PopPUNK_clusters <- length(unique(PopPUNK_clusters$Cluster)) # number of clusters in dataset
# Add Isolate Name to PopPUNK data frame
accNo_to_filename <- read.delim("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/Data/filereport_read_run_PRJEB2632_tsv.txt")
accNo_to_filename <- accNo_to_filename[,c(1,8)]
accNo_to_filename[,3] <- matrix(unlist(strsplit(accNo_to_filename[,2],"/")), ncol=6, byrow = TRUE)[,6]
accNo_to_filename[,3] <- matrix(unlist(strsplit(accNo_to_filename[,3],"[.]")), ncol=2, byrow = TRUE)[,1]
accNo_to_filename <- accNo_to_filename[,c(1,3)]
colnames(accNo_to_filename) <- c(colnames(accNo_to_filename)[1], "filenames")
filenameToAccNo_dict <- accNo_to_filename$run_accession
names(filenameToAccNo_dict) <- accNo_to_filename$filenames
AccNoToIsolate_dict <- Mass_Samples_accCodes$`Isolate Name`
names(AccNoToIsolate_dict) <- Mass_Samples_accCodes$`Accession Code`
PopPUNK_clusters$IsolateName <- AccNoToIsolate_dict[filenameToAccNo_dict[PopPUNK_clusters$Taxon]]
# Add VT information
VT_dict <- Mass_Samples_accCodes$`Vaccine Type`
names(VT_dict) <- Mass_Samples_accCodes$`Isolate Name`
PopPUNK_clusters$VT <- VT_dict[PopPUNK_clusters$IsolateName]
# Add sequencing year information
SeqYear_dict <- Mass_Samples_accCodes$`Year of Isolation`
names(SeqYear_dict) <- Mass_Samples_accCodes$`Isolate Name`
PopPUNK_clusters$SeqYear <- SeqYear_dict[PopPUNK_clusters$IsolateName]
# Add Serotype Information
Serotype_dict <- Mass_Samples_accCodes$Serotype
names(Serotype_dict) <- Mass_Samples_accCodes$`Isolate Name`
PopPUNK_clusters$Serotype <- Serotype_dict[PopPUNK_clusters$IsolateName]
View(PopPUNK_clusters)
#save model start population
saveRDS(PopPUNK_clusters, file = "PopPUNK_clusters.rds")
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
View(PopPUNK_clusters)
### not necessary anymore, I added the Serotype information to the PopPUNK data frame
unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==1)])
# use this instead:
#unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==1)])
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==i)]), collapse = ", ")
}
PP_serotype_comp
View(Mass_Samples_accCodes)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
length(data1)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
#ggCPP_model_val1
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
# real ggCPP fit (step function model)
### ggCaller PopPUNK
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1133391187, sigma_w = 0.0003826182, prop_f = 0.3803189582, delta = ggC_delta_ranking, m = 0.0108386117, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1441624728, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
# real ggCPP fit (step function model)
### ggCaller PopPUNK
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1133391187, sigma_w = 0.0003826182, prop_f = 0.3803189582, delta = ggC_delta_ranking, m = 0.0108386117, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1441624728, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
# Example
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
# ggCPP fit (logistic function model)
WF_log <- odin.dust::odin_dust("NFDS_Model_logistic.R")
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
# install.packages("drat") # -- if you don't have drat installed
# drat:::add("ncov-ic")
# install.packages("odin.dust")
library(odin.dust)
#install.packages("mcstate")
library(mcstate)
# Package for derivative-free fitting in R:
library(dfoptim)
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
# copy of WrightFisherModel/WrightFisher_newData_nGenotypes_haploid_PopsizeVariablePois.R
# use this instead:
#unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==1)])
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==i)]), collapse = ", ")
}
# use this instead:
#unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==1)])
PP_serotype_comp <- rep(0,PP_mass_clusters)
for (i in 1:PP_mass_clusters) {
PP_serotype_comp[i] <- paste(unique(PopPUNK_clusters$Serotype[which(PopPUNK_clusters$Cluster==i)]), collapse = ", ")
}
```{r}
source("CreateLollipopPlot.R")
# ggCPP fit (step function model)
### ggCaller PopPUNK
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.1133391187, sigma_w = 0.0003826182, prop_f = 0.3803189582, delta = ggC_delta_ranking, m = 0.0108386117, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1441624728, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
# ggCPP fit (logistic function model)
WF_log <- odin.dust::odin_dust("NFDS_Model_logistic.R")
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_2x2_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_model_start_pop/sum(PP_model_start_pop), model_name_2 ="Logistic Function", model2 = model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_model_start_pop/sum(PP_model_start_pop), model_name_2 ="Logistic Function", model2 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Step Function", model1 = simMeanggCPP2/sum(simMeanggCPP2), model_name_2 ="Logistic Function", model2 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (1-0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
combined_compare(simMeanggCPP2_log,mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,mass_cluster_freq_3)
dim(simMeanggCPP2_log)
simMeanggCPP2_log
x[,1,37]
combined_compare(simMeanggCPP2_log,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,PP_mass_cluster_freq_3)
length(simMeanggCPP2_log)
length(PP_mass_cluster_freq_2)
# try using dfoptim with likelihood
ll_pois <- function(obs, model) {
exp_noise <- 1e6
if (is.na(obs)) {
# Creates vector of zeros in ll with same length, if no data
ll_obs <- numeric(length(model))
} else {
lambda <- model + rexp(n = length(model), rate = exp_noise)
ll_obs <- dpois(x = obs, lambda = lambda, log = TRUE)
}
ll_obs
}
combined_compare <- function(state, observed, pars = NULL) {
result <- 0
#data_size <- sum(mass_cluster_freq_1)
#model_size = 15000
data_size <- sum(observed)
model_size = sum(state)
for (i in 1:length(observed)){
result <- result + ll_pois(observed[i], state[i]/model_size * data_size)
}
result
}
combined_compare(simMeanggCPP2_log,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,PP_mass_cluster_freq_3)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (1-0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
combined_compare(simMeanggCPP2_log,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,PP_mass_cluster_freq_3)
combined_compare(simMeanggCPP2,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3,PP_mass_cluster_freq_3)
ggC_inv_delta_ranking <- readRDS(file = "ggC_inv_delta_ranking.rds")
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (1-0.62342733), delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
combined_compare(simMeanggCPP2_log,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,PP_mass_cluster_freq_3)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
logWFmodel_ggCPP$run(36)
logWFmodel_ggCPP$run(72)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.3735531590, K = 0.2, x0 = (nrow(ggCPP_intermed_gene_presence_absence_consensus)-1) * (1-0.3669067334), delta = ggC_inv_delta_ranking, m = 0.0078524723, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.1103623064, vacc_time = 0)
WFmodel_log <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(WFmodel_log$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(WFmodel_log$run(72)[-1,])
combined_compare(simMeanggCPP2_log,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,PP_mass_cluster_freq_3)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = 0.62342733, delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
combined_compare(simMeanggCPP2_log,PP_mass_cluster_freq_2) + combined_compare(simMeanggCPP3_log,PP_mass_cluster_freq_3)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
log_ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, L = 0.11292912, K = 4.95113406
, x0 = 0.62342733, delta = ggC_inv_delta_ranking, m = 0.01107836, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v =0.14464825, vacc_time = 0)
logWFmodel_ggCPP <- WF_log$new(pars = log_ggCPP_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2_log <- rowMeans(logWFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3_log <- rowMeans(logWFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_model_start_pop/sum(PP_model_start_pop), model_name_2 ="Logistic Function", model2 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Step Function", model1 = simMeanggCPP2/sum(simMeanggCPP2), model_name_2 ="Logistic Function", model2 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Step Function", model1 = simMeanggCPP2/sum(simMeanggCPP2), model_name_2 ="Logistic Function", model2 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Step Function", model1 = simMeanggCPP3/sum(simMeanggCPP3), model_name_2 ="Logistic Function", model2 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Step Function", model1 = simMeanggCPP3/sum(simMeanggCPP3), model_name_2 ="Logistic Function", model2 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2001", plot_title = "Data only", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_2 ="Logistic Function", model2 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "all time points", plot_title = "Data only", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="2004", model1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_2 ="2007", model2 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), PP_mass_VT)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "all time points", plot_title = "Data only", data_name = "2001" data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="2004", model1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_2 ="2007", model2 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "all time points", plot_title = "Data only", data_name = "2001", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="2004", model1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_2 ="2007", model2 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_model_start_pop/sum(PP_model_start_pop), model_name_2 ="Logistic Function", model2 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Step Function", model1 = simMeanggCPP2/sum(simMeanggCPP2), model_name_2 ="Logistic Function", model2 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Step Function", model1 = simMeanggCPP3/sum(simMeanggCPP3), model_name_2 ="Logistic Function", model2 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT)
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_model_start_pop/sum(PP_model_start_pop), model_name_2 ="Logistic Function", model2 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data_name = "Data", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Step Function", model1 = PP_model_start_pop/sum(PP_model_start_pop), model_name_2 ="Logistic Function", model2 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data_name = "Data", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Step Function", model1 = simMeanggCPP2/sum(simMeanggCPP2), model_name_2 ="Logistic Function", model2 = simMeanggCPP2_log/sum(simMeanggCPP2_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_2x2_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data_name = "Data", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Step Function", model1 = simMeanggCPP3/sum(simMeanggCPP3), model_name_2 ="Logistic Function", model2 = simMeanggCPP3_log/sum(simMeanggCPP3_log), PP_mass_VT, SeroLabel = PP_serotype_comp)
col_clb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
plot(0.21696863/(1+exp(5.03946007 *(1774*(0.57776473)-(1:1774)))), main = "Logistic vs Step Function Model Fit with COG and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.22), cex = 1)
points(0.21712951/(1+exp((1774*(0.57739554)-(1:1774)))), col = col_clb[2], cex = 1)
points(0.004120443/(1+exp(1 *(1774*(0)-(1:1774)))), col = col_clb[3], cex = 1)
points(0.111690097/(1+exp((1774*(0.624229293)-(1:1774)))) + 0.003764143, col = col_clb[4], cex = 1)
col_clb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
plot(0.21696863/(1+exp(5.03946007 *(1774*(0.57776473)-(1:1774)))), main = "Logistic vs Step Function Model Fit with COG and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.22), cex = 1)
points(0.21712951/(1+exp((1774*(0.57739554)-(1:1774)))), col = col_clb[2], cex = 1)
points(0.004120443/(1+exp(1 *(1774*(0)-(1:1774)))), col = col_clb[3], cex = 1)
points(c(rep(0.0006359267 , 1774 * (1-0.4202932608)), rep(0.2169393333, 1774 * 0.4202932608)), col = col_clb[4], cex = 1)
points(c(rep(0 , 1774 * (1-0.4207139)), rep(0.2170153, 1774 * 0.4207139)), col = col_clb[5], cex = 1)
points(rep(0.004034883, 1774 * (1)), col = col_clb[6], cex = 1)
legend(0, 0.12, legend=c("Logistic, 5 params", "Logistic, 4 params", "Logistic, 3 params", "step function, 5 params", "step function, 4 params", "step function, 3 params"),
col=col_clb, lty=1, cex=0.8)
col_clb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
plot(0.11292912/(1+exp(4.95113406 *(1774*(0.62342733)-(1:1774)))), main = "Logistic vs Step Function Model Fit with ggCaller and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.12), cex = 1)
points(0.1144311/(1+exp((1774*(0.6243419)-(1:1774)))), col = col_clb[2], cex = 1)
points(0.03503935/(1+exp(1 *(1774*(0)-(1:1774)))), col = col_clb[3], cex = 1)
points(0.111690097/(1+exp((1774*(0.624229293)-(1:1774)))) + 0.003764143, col = col_clb[4], cex = 1)
points(c(rep(0.0004164005 , 1774 * (1-0.3803173188)), rep(0.1180783495, 1774 * 0.3803173188)), col = col_clb[5], cex = 1)
points(c(rep(0 , 1774 * (1-0.37657870)), rep(0.11313856, 1774 * 0.37657870)), col = col_clb[6], cex = 1)
points(rep(0.01931485 , 1774 * (1)), col = col_clb[7], cex = 1)
legend(0, 0.12, legend=c("Logistic, 5 params", "Logistic, 4 params", "Logistic, 3 params", "Logistic, Y shift","step function, 5 params", "step function, 4 params", "step function, 3 params"),
col=col_clb, lty=1, cex=0.8)
legend(0, 0.12, legend=c("Logistic, 5 params", "Logistic, 4 params", "Logistic, 3 params", "Logistic, Y shift","step function, 5 params", "step function, 4 params", "step function, 3 params"),col=col_clb, lty=1, cex=1)
plot(0.11292912/(1+exp(4.95113406 *(1774*(0.62342733)-(1:1774)))), main = "Logistic vs Step Function Model Fit with ggCaller and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.12), cex = 1)
points(0.1144311/(1+exp((1774*(0.6243419)-(1:1774)))), col = col_clb[2], cex = 1)
points(0.03503935/(1+exp(1 *(1774*(0)-(1:1774)))), col = col_clb[3], cex = 1)
points(0.111690097/(1+exp((1774*(0.624229293)-(1:1774)))) + 0.003764143, col = col_clb[4], cex = 1)
points(c(rep(0.0004164005 , 1774 * (1-0.3803173188)), rep(0.1180783495, 1774 * 0.3803173188)), col = col_clb[5], cex = 1)
points(c(rep(0 , 1774 * (1-0.37657870)), rep(0.11313856, 1774 * 0.37657870)), col = col_clb[6], cex = 1)
points(rep(0.01931485 , 1774 * (1)), col = col_clb[7], cex = 1)
legend(0, 0.12, legend=c("Logistic, 5 params", "Logistic, 4 params", "Logistic, 3 params", "Logistic, Y shift","step function, 5 params", "step function, 4 params", "step function, 3 params"),col=col_clb, lty=1, cex=1.2)
col_clb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
plot(0.11292912/(1+exp(4.95113406 *(1774*(0.62342733)-(1:1774)))), main = "Logistic vs Step Function Model Fit with ggCaller and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.12), cex = 1)
points(c(rep(0.0004164005 , 1774 * (1-0.3803173188)), rep(0.1180783495, 1774 * 0.3803173188)), col = col_clb[5], cex = 1)
legend(0, 0.12, legend=c("Logistic, 5 params", "step function, 5 params"),col=col_clb, lty=1, cex=1.2)
ggCPP_det_mcmc2 <- readRDS(paste(results_path_15, "ggCaller_PopPUNK_det_mcmc2.rds",sep=""))
plot(ggCPP_det_mcmc2)
plot(ggCPP_det_mcmc2[5001:20000,])
dim(ggCPP_det_mcmc2)
plot(coda::as.mcmc(ggCPP_det_mcmc2[1001:20000,]))
lines(coda::as.mcmc(ggCPP_det_mcmc2[21001:40000,]))
autocorr.plot(ggCPP_det_mcmc2)
coda::autocorr.plot(ggCPP_det_mcmc2)
xyplot(myModel.coda)
coda::xyplot(myModel.coda)
require(tigerstats)
install.packages("tigerstats")
library(tigerstats)
xyplot(myModel.coda)
xyplot(ggCPP_det_mcmc2)
xyplot(c(ggCPP_det_mcmc2[1001:20000,], ggCPP_det_mcmc2[21001:40000,]))
combinedchains = mcmc.list(coda::as.mcmc(ggCPP_det_mcmc2[5001:20000,-(1:3)]), coda::as.mcmc(ggCPP_det_mcmc2[25001:40000,-(1:3)]),coda::as.mcmc(ggCPP_det_mcmc2[45001:60000,-(1:3)]),coda::as.mcmc(ggCPP_det_mcmc2[65001:80000,-(1:3)]))
combinedchains = coda::mcmc.list(coda::as.mcmc(ggCPP_det_mcmc2[5001:20000,-(1:3)]), coda::as.mcmc(ggCPP_det_mcmc2[25001:40000,-(1:3)]),coda::as.mcmc(ggCPP_det_mcmc2[45001:60000,-(1:3)]),coda::as.mcmc(ggCPP_det_mcmc2[65001:80000,-(1:3)]))
xyplot(combinedchains)
combinedchains2 = coda::mcmc.list(coda::as.mcmc(ggCPP_det_mcmc2[1001:20000,]), coda::as.mcmc(ggCPP_det_mcmc2[21001:40000,]),coda::as.mcmc(ggCPP_det_mcmc2[41001:60000,]),coda::as.mcmc(ggCPP_det_mcmc2[61001:80000,]))
xyplot(combinedchains2)
combinedchains2 = coda::mcmc.list(coda::as.mcmc(ggCPP_det_mcmc2[1001:20000,-c(1,3)]), coda::as.mcmc(ggCPP_det_mcmc2[21001:40000,-c(1,3)]),coda::as.mcmc(ggCPP_det_mcmc2[41001:60000,-c(1,3)]),coda::as.mcmc(ggCPP_det_mcmc2[61001:80000,-c(1,3)]))
xyplot(combinedchains2)
# 5 params
results_path <- "/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_04_16/"
log_ggCPP_pmcmc2 <- readRDS(paste(results_path, "ggCaller_PopPUNK_log_det_pmcmc_run2.rds",sep=""))
log_ggCPP_det_mcmc2 <- coda::as.mcmc(cbind(log_ggCPP_pmcmc2$probabilities, log_ggCPP_pmcmc2$pars))
log_combinedchains2 = coda::mcmc.list(coda::as.mcmc(log_ggCPP_det_mcmc2[1001:20000,-c(1,3)]), coda::as.mcmc(log_ggCPP_det_mcmc2[21001:40000,-c(1,3)]),coda::as.mcmc(log_ggCPP_det_mcmc2[41001:60000,-c(1,3)]),coda::as.mcmc(log_ggCPP_det_mcmc2[61001:80000,-c(1,3)]))
xyplot(log_combinedchains2)
plot(0.21696863/(1+exp(5.03946007 *(1774*(0.57776473)-(1:1774)))), main = "Logistic vs Step Function Model Fit with COG and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.22), cex = 1)
points(0.21712951/(1+exp(100 *(1774*(0.57739554)-(1:1774)))), col = col_clb[2], cex = 1)
points(0.21712951/(1+exp(0.001 *(1774*(0.57739554)-(1:1774)))), col = col_clb[2], cex = 1)
par(mfrow=c(1,1))
plot(0.21696863/(1+exp(5.03946007 *(1774*(0.57776473)-(1:1774)))), main = "Logistic vs Step Function Model Fit with COG and PopPUNK", xlab = "Genes", ylab = "Selection Strength", col = col_clb[1], ylim = c(0, 0.22), cex = 1)
points(0.21712951/(1+exp(0.001 *(1774*(0.57739554)-(1:1774)))), col = col_clb[2], cex = 1)
points(0.21712951/(1+exp(0.000001 *(1774*(0.57739554)-(1:1774)))), col = col_clb[2], cex = 1)
ggC_mass_gene_freq_3
plot(ggC_delta_data3)
ggC_delta_ranking
plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(1:1500, gene_cluster_freqs_2[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#E69F00",type = "b")
plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(1:1500, gene_cluster_freqs_2[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#E69F00",type = "b")
plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
lines(1:1500, gene_cluster_freqs_2[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#E69F00",type = "b")
lines(1:1500, gene_cluster_freqs_3[sort.list(gene_cluster_freqs_1)[1:1500]], col = "#56B4E9", type = "b")
plot(1:1500, gene_cluster_freqs_1[sort.list(gene_cluster_freqs_1)[1:1500]] - gene_cluster_freqs_3[sort.list(gene_cluster_freqs_1)[1:1500]],type = "b", lty = 1)
plot(1:1500, gene_cluster_freqs_1[sort.list(delta)[1:1500]] - gene_cluster_freqs_3[sort.list(delta)[1:1500]],type = "b", lty = 1)
plot(1:1500, gene_cluster_freqs_1[sort.list(delta)[1:1500]],type = "b", lty = 1)
lines(1:1500, gene_cluster_freqs_3[sort.list(delta)[1:1500]],type = "b", lty = 1)
delta
plot(ggC_delta_data3)
plot(sort(ggC_delta_data3))
gene_freq_df_1 <- data.frame(cbind(mass_gene_freq_0/length(which(mass_data$Time==0)), mass_gene_freq_36/length(which(mass_data$Time==36)), mass_gene_freq_72/length(which(mass_data$Time==72))))
gene_freq_df_1 <- data.frame(cbind(mass_gene_freq_1/length(which(mass_data$Time==0)), mass_gene_freq_2/length(which(mass_data$Time==36)), mass_gene_freq_3/length(which(mass_data$Time==72))))
colnames(gene_freq_df) <- 1:3
gene_freq_df <- data.frame(x = c(rep(1,length(mass_gene_freq_1)), rep(2,length(mass_gene_freq_2)),rep(3,length(mass_gene_freq_3))),
y = c(mass_gene_freq_1, mass_gene_freq_2, mass_gene_freq_3),
z = rep(names(mass_gene_freq_1),3))
gene_freq_df_test <- rbind(gene_freq_df[1:10,], gene_freq_df[(length(mass_gene_freq_1)+1):(length(mass_gene_freq_1)+10),],gene_freq_df[(2*length(mass_gene_freq_1)+1):(2*length(mass_gene_freq_1)+10),])
ggplot(data = gene_freq_df_test, aes(x=x, y=y)) + geom_line(aes(colour=z))
par(mfrow=c(1,1))
plot(0,0,xlim = c(1,3),ylim = c(0,1),type = "n")
cl <- rainbow(5)
for (i in 1:length(mass_gene_freq_0)){
points(1:3,gene_freq_df_1[i,],col = "black",type = 'b')
}
for (i in 1:length(mass_gene_freq_1)){
points(1:3,gene_freq_df_1[i,],col = "black",type = 'b')
}
#009E73
"#009E73"
plot(sort(ggC_delta_data))
plot(sort(ggC_delta_data3))
lines((1:1500)^3)
lines((0:1500)^3)
lines(((0:1500)/1500)^3)
sort(ggC_delta_data3)
max(sort(ggC_delta_data3))
lines(((0:1500)/15000)^3)
lines(((0:1500)/10000)^3)
lines(((0:1500)/8000)^3)
lines(((0:1700)/8000)^3)
lines(((0:1700)/7000)^3)
lines(((0:1700)/5000)^3)
plot(sort(ggC_delta_data3)[1:1000])
plot(sort(ggC_delta_data3[1:1000]))
lines(((0:1000)/5000)^3)
lines(((0:1000)/1000)^3)
plot(sort(ggC_delta_data3)[1:1000])
plot(sort(ggC_delta_data3)[1:1500])

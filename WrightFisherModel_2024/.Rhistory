geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters")
PopPUNK_clusters$Cluster[which(PopPUNK_clusters$SeqYear=="2007")]
# create stacked barplot to investigate within cluster changes:
WFmodel_ppxSero <- WF_PPxSero$new(pars = fitPPxSero_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_ppxSero$run(1)[-(1),1]
sum(WFmodel_ppxSero$run(1)[(PP_mass_clusters+2:(2*PP_mass_clusters)),1])
PP_cl <-rep((1:PP_mass_clusters),length(serotypes_mass))
Sero <-  sort(rep((1:length(serotypes_mass)), PP_mass_clusters))
time1 <- WFmodel_ppxSero$run(1)[-(1:(PP_mass_clusters+1)),1]
time2 <- WFmodel_ppxSero$run(36)[-(1:(PP_mass_clusters+1)),1]
time3 <- WFmodel_ppxSero$run(72)[-(1:(PP_mass_clusters+1)),1]
barplot_PPxSero_data <- data.frame(PP_cl,Sero,time1, time2, time3)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time2, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2004") + ylab("Frequency") + xlab("Clusters")
sum(WFmodel_ppxSero$run(1)[-(1:(PP_mass_clusters+1)),1])
# create stacked barplot to investigate within cluster changes:
WFmodel_ppxSero <- WF_PPxSero$new(pars = fitPPxSero_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
PP_cl <-rep((1:PP_mass_clusters),length(serotypes_mass))
Sero <-  sort(rep((1:length(serotypes_mass)), PP_mass_clusters))
time1 <- WFmodel_ppxSero$run(1)[-(1:(PP_mass_clusters+1)),1]/sum(WFmodel_ppxSero$run(1)[-(1:(PP_mass_clusters+1)),1])
time2 <- WFmodel_ppxSero$run(36)[-(1:(PP_mass_clusters+1)),1]/sum(WFmodel_ppxSero$run(36)[-(1:(PP_mass_clusters+1)),1])
time3 <- WFmodel_ppxSero$run(72)[-(1:(PP_mass_clusters+1)),1]/sum(WFmodel_ppxSero$run(72)[-(1:(PP_mass_clusters+1)),1])
barplot_PPxSero_data <- data.frame(PP_cl,Sero,time1, time2, time3)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time2, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2004") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time3, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters")
PP_data_2007 <- rep(0, (length(serotypes_mass) * PP_mass_clusters))
for (i in which(PopPUNK_clusters$SeqYear=="2007")) {
PP_data_2007[((PopPUNK_clusters$Cluster[i] -1) * length(serotypes_mass)) + SerotypeToIndex_dict[PopPUNK_clusters$Serotype[i]]] <-
PP_data_2007[((PopPUNK_clusters$Cluster[i] -1) * length(serotypes_mass)) + SerotypeToIndex_dict[PopPUNK_clusters$Serotype[i]]] + 1
}
barplot_PPxSero_data$PPdata_2007 <- PP_data_2007
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters")
PP_data_2007 <- rep(0, (length(serotypes_mass) * PP_mass_clusters))
for (i in which(PopPUNK_clusters$SeqYear=="2007")) {
PP_data_2007[((SerotypeToIndex_dict[PopPUNK_clusters$Serotype[i]] -1) * PP_mass_clusters) + PopPUNK_clusters$Cluster[i]] <-
PP_data_2007[((SerotypeToIndex_dict[PopPUNK_clusters$Serotype[i]] -1) * PP_mass_clusters) + PopPUNK_clusters$Cluster[i]] + 1
}
barplot_PPxSero_data$PPdata_2007 <- PP_data_2007
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters")
time1
barplot_PPxSero_data$Sero
View(barplot_PPxSero_data)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE) +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity", aes(fill = Sero)) + scale_fill_viridis(option = "D", discrete = FALSE)
ggplot(barplot_PPxSero_data, aes(y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity", aes(fill = Sero)) + scale_fill_viridis(option = "D", discrete = TRUE)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE)
ggplot(barplot_PPxSero_data, aes(fill=Sero, y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = FALSE) +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE)
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE)
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE) +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
IndexToSerotype_dict <- sort(unique(PopPUNK_clusters$Serotype))
names(IndexToSerotype_dict) <- 1:length(unique(PopPUNK_clusters$Serotype))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE) +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.8),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time2, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE) +
ggtitle("2004") + ylab("Frequency") + xlab("Clusters")
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.8))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.4,.8))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.4))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time2, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2004") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time3, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
grid.arrange(sec.axis = dup_axis(name = "Serotypes", labels = SeroLabel))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
grid.arrange(sec.axis = dup_axis(name = "Serotypes", labels = IndexToSerotype_dict[as.factor(Sero)]))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
grid.arrange(sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
barplot1 <- ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
grid.arrange(barplot1, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
grid.arrange(barplot1, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
barplot1 <- ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
grid.arrange(barplot1, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
barplot1
grid.arrange(barplot1, scale_x_continuous(breaks = 1:length(data1), labels = 1:length(data1), sec.axis = dup_axis(name = "Serotypes"), labels = PP_serotype_comp), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
grid.arrange(barplot1, scale_x_continuous(breaks = 1:62, labels = 1:62, sec.axis = dup_axis(name = "Serotypes"), labels = PP_serotype_comp), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
grid.arrange(barplot1, scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes"), labels = PP_serotype_comp), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
grid.arrange(barplot1, scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes")), labels = PP_serotype_comp), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
grid.arrange(barplot1, scale_x_continuous(breaks = 1:62, sec.axis = dup_axis((name = "Serotypes"), labels = PP_serotype_comp)), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
grid.arrange(barplot1, scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
grid.arrange(barplot1 + scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)), ncol = 1, nrow=1, top = textGrob(plot_title,gp=gpar(fontsize=20,font=3)))
barplot1 + scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time2, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2004") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time3, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))+
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters")  +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time1, x=PP_cl)) + coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2001") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time2, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2004") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=time3, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))+
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))+
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
library(ggplot2)
library("viridis")
# create stacked barplot to investigate within cluster changes:
WFmodel_ppxSero <- WF_PPxSero$new(pars = fitPPxSero_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WF_PPxSero <- odin.dust::odin_dust("NFDS_Model_PPxSero.R")
# create stacked barplot to investigate within cluster changes:
WFmodel_ppxSero <- WF_PPxSero$new(pars = fitPPxSero_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
PP_cl <-rep((1:PP_mass_clusters),length(serotypes_mass))
Sero <-  sort(rep((1:length(serotypes_mass)), PP_mass_clusters))
time1 <- WFmodel_ppxSero$run(1)[-(1:(PP_mass_clusters+1)),1]/sum(WFmodel_ppxSero$run(1)[-(1:(PP_mass_clusters+1)),1])
time2 <- WFmodel_ppxSero$run(36)[-(1:(PP_mass_clusters+1)),1]/sum(WFmodel_ppxSero$run(36)[-(1:(PP_mass_clusters+1)),1])
time3 <- WFmodel_ppxSero$run(72)[-(1:(PP_mass_clusters+1)),1]/sum(WFmodel_ppxSero$run(72)[-(1:(PP_mass_clusters+1)),1])
barplot_PPxSero_data <- data.frame(PP_cl,Sero,time1, time2, time3)
ggplot(barplot_PPxSero_data, aes(fill=as.factor(Sero), y=time1, x=PP_cl)) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))
PP_data_2007
sum(PP_data_2007)
PP_data_2007 <- PP_data_2007/ sum(PP_data_2007)
barplot_PPxSero_data$PPdata_2007 <- PP_data_2007
ggplot(barplot_PPxSero_data, aes(fill=IndexToSerotype_dict[as.factor(Sero)], y=PPdata_2007, x=PP_cl)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007 DATA") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20))+
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp))
barplot_PPxSero_data2 <- data.frame(rep(PP_cl,2), rep(Sero,2),c(time1, PP_data_2007))
View(barplot_PPxSero_data2)
barplot_PPxSero_data2 <- data.frame(rep(PP_cl,2), rep(Sero,2),c(time3, PP_data_2007))
barplot_PPxSero_data2$category <- c(rep("model",length(PP_cl)),rep("data",length(PP_cl)))
colnames(barplot_PPxSero_data2) <- c("Cluster","Serotype","Value","category")
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=category)) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=as.factor(category))) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)) +
facet_grid( ~ Cluster)
barplot_PPxSero_data2$category <- c(rep(0,length(PP_cl)),rep(1,length(PP_cl)))
colnames(barplot_PPxSero_data2) <- c("Cluster","Serotype","Value","category")
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=as.factor(category))) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +  coord_flip()+
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62, sec.axis = dup_axis(name = "Serotypes", labels = PP_serotype_comp)) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(labels = (c("M","D"))) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:62) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:(2*62)) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:(2*62), labels = rep(c("M","D"),62)) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:2, labels = (c("M","D"))) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_continuous(breaks = 1:2) +
facet_grid( ~ Cluster)
barplot_PPxSero_data2$category <- c(rep("M",length(PP_cl)),rep("D",length(PP_cl)))
colnames(barplot_PPxSero_data2) <- c("Cluster","Serotype","Value","category")
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_discrete(breaks = 1:2) +
facet_grid( ~ Cluster)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
scale_x_discrete(breaks = 1:2, labels = c("M","D")) +
facet_grid( ~ Cluster)
barplot_PPxSero_data2$category <- c(rep(0,length(PP_cl)),rep(1,length(PP_cl)))
colnames(barplot_PPxSero_data2) <- c("Cluster","Serotype","Value","category")
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
facet_grid( ~ Cluster) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_x_continuous("Model / Data", labels = c("M","D"), breaks = ID)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
facet_grid( ~ Cluster) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_x_continuous("Model / Data", labels = c("M","D"), breaks = category)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
facet_grid( ~ Cluster) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_x_continuous("Model / Data", labels = c("M","D"), breaks = category)
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
facet_grid( ~ Cluster) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_x_continuous("Model / Data", labels = c("M","D"), breaks = barplot_PPxSero_data2$category)
barplot_PPxSero_data2$category
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
facet_grid( ~ Cluster) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_x_continuous("Model / Data", labels = c("M","D"), breaks = c(0,1))
ggplot(barplot_PPxSero_data2, aes(fill=IndexToSerotype_dict[as.factor(Serotype)], y=Value, x=(category))) +
geom_bar(position="stack", stat="identity") + scale_fill_viridis(option = "D", discrete = TRUE, name = "Serotype") +
ggtitle("2007") + ylab("Frequency") + xlab("Clusters") + theme(legend.position = c(.8,.6),legend.text = element_text(size = 20),legend.title = element_text(size = 20)) +
facet_grid( ~ Cluster) + scale_x_continuous("Model / Data", labels = c("M","D"), breaks = c(0,1))
path_to_data <- "~/Documents/PhD_Project/Data/"
Nepal_meta_data <- read.csv(paste(path_to_data, "StrepPneumo_Nepal/monocle-metadata-from-sample-download.csv",sep = ""))
head(Nepal_meta_data)
Nepal_PP <- read.csv(paste(path_to_data, "StrepPneumo_Nepal/PopPUNK/refined_fitmodel_k3/refined_modelfitk3_clusters.csv",sep = ""))
Nepal_PP <- read.csv(paste(path_to_data, "StrepPneumo_Nepal/PopPUNK/refined_fitmodel_k3/refined_fitmodel_k3_clusters.csv",sep = ""))
head(Nepal_PP)
no_Nepal_PP <- length(Nepal_PP)
no_Nepal_PP
no_Nepal_PP <- length(unique(Nepal_PP$Cluster))
no_Nepal_PP
View(Nepal_PP)
Nepal_ggCaller <- read.csv(paste(path_to_data, "StrepPneumo_Nepal/ggCaller_output/gene_presence_absence.csv", sep = ""), header=FALSE)
View(Nepal_ggCaller)
# converting the gene presence absence matrix into a boolean df (0 = gene not present, 1 = gene present)
convert_to_bool <- function(x){
if (x=="") 0 else 1
}
Nepal_ggCaller_bool <- Nepal_ggCaller[,c(-2,-3)]
Nepal_ggCaller_bool[-1,-1] <- apply(Nepal_ggCaller_bool[-1,-1],c(1,2), convert_to_bool)
View(Nepal_ggCaller_bool)
saveRDS(Nepal_ggCaller_bool, "Nepal_ggCaller_bool.rds")
View(Nepal_meta_data)
Nepal_time_points <- unique(Nepal_meta_data$Year)
Nepal_time_points
paste("x","_i",sep = "") <- 10
View(Nepal_ggCaller)
strsplit("16288_3#10.contigs_velvet",".contigs_velvet")
strsplit("16288_3#10.contigs_velvet",".contigs_velvet")[[1]]
strsplit(c("16288_3#10.contigs_velvet","16288_3#10.contigs_velvet"),".contigs_velvet")[[1]]
strsplit(c("16288_3#10.contigs_velvet","16288_3#10.contigs_velvet"),".contigs_velvet")
unlist(strsplit(c("16288_3#10.contigs_velvet","16288_3#10.contigs_velvet"),".contigs_velvet"))
Nepal_ggCaller_bool[1,-1] <- unlist(strsplit(Nepal_ggCaller_bool[1,-1],".contigs_velvet"))
head(Nepal_ggCaller_bool[1,-1])
sapply(Nepal_ggCaller_bool[1,-1], strsplit)
sapply(Nepal_ggCaller_bool[1,-1], strsplit, split = ".contigs_velvet")
lapply(Nepal_ggCaller_bool[1,-1], strsplit, split = ".contigs_velvet")
Nepal_ggCaller_bool[1,-1] <- sapply(Nepal_ggCaller_bool[1,-1], strsplit, split = ".contigs_velvet")
saveRDS(Nepal_ggCaller_bool, "Nepal_ggCaller_bool.rds")
c(Nepal_ggCaller,Nepal_ggCaller_bool)
df_list <- list(Nepal_ggCaller,Nepal_ggCaller_bool)
df_list[[2]][1,]
list(0,0)
list(NA,NA)
empty_list <- vector(mode = "list", length = 10)
empty_list
Nepal_ggCaller_byYear <- vector(mode = "list", length = length(Nepal_time_points))
Nepal_time_points <- sort(unique(Nepal_meta_data$Year))
Nepal_time_points
Nepal_meta_data$Year=="2001"
Nepal_time_points
Nepal_meta_data$Year=="2005"
Nepal_ggCaller_year <- data.frame(matrix(0, nrow = nrow(Nepal_ggCaller_bool), ncol = length(Nepal_meta_data[Nepal_meta_data$Year=="Nepal_time_points[i]"2005",]$Lane_id)+1))
Nepal_ggCaller_year <- data.frame(matrix(0, nrow = nrow(Nepal_ggCaller_bool), ncol = length(Nepal_meta_data[Nepal_meta_data$Year=="2005",]$Lane_id)+1))
Nepal_SeqYear_dict <- Nepal_meta_data$Year
names(Nepal_SeqYear_dict) <- Nepal_meta_data$Lane_id
length(which(Nepal_meta_data$Year==Nepal_time_points[i]))
length(which(Nepal_meta_data$Year=="2005"))
length(which(Nepal_meta_data$Year=="2006"))
length(which(Nepal_meta_data$Year=="2007"))
length(which(Nepal_meta_data$Year=="2008"))
Nepal_meta_data$Vaccine_period
length(which(Nepal_meta_data$Vaccine_period=="PREPCV"))
unique(Nepal_meta_data$Vaccine_period)
length(which(Nepal_meta_data$Year=="2008"))
Nepal_time_points
length(which(Nepal_meta_data$Year=="2009"))
length(which(Nepal_meta_data$Year=="2007"))
length(which(Nepal_meta_data$Year=="2007")) + length(which(Nepal_meta_data$Year=="2005")) + length(which(Nepal_meta_data$Year=="2006")) + length(which(Nepal_meta_data$Year=="2008")) + length(which(Nepal_meta_data$Year=="2009"))
length(which(Nepal_meta_data$Year=="2011"))
length(which(Nepal_meta_data$Year=="2012"))
length(which(Nepal_meta_data$Year=="2013"))
length(which(Nepal_meta_data$Year=="2014"))
length(which(Nepal_meta_data$Year=="2015"))
length(which(Nepal_meta_data$Year=="2016"))
length(which(Nepal_meta_data$Year=="2017"))
length(which(Nepal_meta_data$Year=="2018"))
seq_no_per_year <- rep(0, length(Nepal_time_points))
for (i in 1:length(Nepal_time_points)) {
seq_no_per_year[i] <- length(which(Nepal_meta_data$Year==Nepal_time_points[i]))
}
plot(seq_no_per_year)
barplot(seq_no_per_year)
names(seq_no_per_year) <- Nepal_time_points
barplot(seq_no_per_year, xlab = "Sequence Years")
barplot(seq_no_per_year, xlab = "Sequence Years")
barplot(seq_no_per_year, xlab = "Sequence Years", ylim = c(0, max(seq_no_per_year)))
max(seq_no_per_year)
barplot(seq_no_per_year, xlab = "Sequence Years", ylim = c(0, 250))
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 250))
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 250), ylab = "Sequence Counts")
Nepal_time_points
# PCV10 was introduced in 2015
# number of sequences fluctuates a lot from year to year. take just 2009, 2012, 2014, 2017, 2018?
# or summaries the years somehow?
Nepal_time_points_selected <- Nepal_time_points[c(5,7,9,12,13)]
Nepal_time_points_selected
Nepal_ggCaller_byYear <- vector(mode = "list", length = length(Nepal_time_points_selected))
for (i in 1:length(Nepal_time_points_selected)) {
Nepal_ggCaller_year <- data.frame(matrix(0, nrow = nrow(Nepal_ggCaller_bool), ncol = length(which(Nepal_meta_data$Year==Nepal_time_points_selected[i]))+1)) # initialize data frame
Nepal_ggCaller_year[1,-1] <- Nepal_ggCaller_bool[1,c(FALSE,Nepal_SeqYear_dict[unlist(Nepal_ggCaller_bool[1,-1])]==Nepal_time_points_selected[i])] # fill in first row (seq names)
Nepal_ggCaller_year[-1,1] <- Nepal_ggCaller_bool[-1,1] # fill in first column (gene cluster names)
Nepal_ggCaller_year[-1,-1] <- Nepal_ggCaller_bool[-1,c(FALSE,Nepal_SeqYear_dict[unlist(Nepal_ggCaller_bool[1,-1])]==Nepal_time_points_selected[i])] # fill in presence absence information
}
Nepal_ggCaller_byYear <- vector(mode = "list", length = length(Nepal_time_points_selected))
for (i in 1:length(Nepal_time_points_selected)) {
Nepal_ggCaller_year <- data.frame(matrix(0, nrow = nrow(Nepal_ggCaller_bool), ncol = length(which(Nepal_meta_data$Year==Nepal_time_points_selected[i]))+1)) # initialize data frame
Nepal_ggCaller_year[1,-1] <- Nepal_ggCaller_bool[1,c(FALSE,Nepal_SeqYear_dict[unlist(Nepal_ggCaller_bool[1,-1])]==Nepal_time_points_selected[i])] # fill in first row (seq names)
Nepal_ggCaller_year[-1,1] <- Nepal_ggCaller_bool[-1,1] # fill in first column (gene cluster names)
Nepal_ggCaller_year[-1,-1] <- Nepal_ggCaller_bool[-1,c(FALSE,Nepal_SeqYear_dict[unlist(Nepal_ggCaller_bool[1,-1])]==Nepal_time_points_selected[i])] # fill in presence absence information
Nepal_ggCaller_byYear[[i]] <- Nepal_ggCaller_year
}
Nepal_ggCaller_byYear
nrow(Nepal_ggCaller_byYear[[1]])
sum_as_int <- function(x){
sum(as.integer(x))
}
Nepal_gene_freq_2001 <- rep(0, nrow(Nepal_ggCaller_byYear[[1]])-1)
Nepal_gene_freq_2001 <- apply(Nepal_ggCaller_byYear[[1]][-1,-1],1, sum_as_int)
Nepal_gene_freq_2001 <- Nepal_gene_freq_2001 / (length(Nepal_ggCaller_byYear[[1]][1,-1]))
head(Nepal_gene_freq_2001)
tail(Nepal_gene_freq_2001)
View(Nepal_ggCaller_byYear[[1]])
sum(Nepal_ggCaller_byYear[[1]][5776,])
sum(Nepal_ggCaller_byYear[[1]][5776,1:ncol(Nepal_ggCaller_byYear[[1]])])
Nepal_gene_filter <- as.integer(Nepal_gene_freq_2001<=0.95 & Nepal_gene_freq_2001>=0.05)
head(Nepal_gene_filter)
sum(Nepal_gene_filter)
nrow(Nepal_ggCaller_byYear[[1]])-1
Nepal_ggCaller_byYear_intermed <- vector(mode = "list", length = length(Nepal_time_points_selected))
for (i in 1:length(Nepal_time_points_selected)) {
Nepal_ggCaller_year <- data.frame(matrix(0, nrow = sum(Nepal_gene_filter)+1,ncol = length(which(Nepal_meta_data$Year==Nepal_time_points_selected[i]))+1))
Nepal_ggCaller_year <-  Nepal_ggCaller_byYear[[i]][c(1,which(Nepal_gene_filter==1)+1),]
Nepal_ggCaller_byYear_intermed[[i]] <- Nepal_ggCaller_year
}
View(Nepal_ggCaller_byYear_intermed[[1]])
Nepal_seq_clusters_dict <- Nepal_PP$Cluster
names(Nepal_seq_clusters_dict) <- Nepal_PP$Taxon
Nepal_ggCaller_intermed <- data.frame(matrix(0, nrow = sum(Nepal_gene_filter)+1,ncol = ncol(Nepal_ggCaller_bool)))
Nepal_ggCaller_intermed <-  Nepal_ggCaller_bool[c(1,which(Nepal_gene_filter==1)+1),]
View(Nepal_ggCaller_intermed)
Nepal_ggCaller_intermed[2,]
Nepal_ggCaller_intermed_consensus <- data.frame(matrix(0, nrow = sum(Nepal_gene_filter)+1, ncol = no_Nepal_PP+1))
Nepal_ggCaller_intermed_consensus[1,-1] <- paste("SeqCl_",unique(Nepal_PP$Cluster),sep = "")
cons_genomes <- function(x){
as.double(ceiling(median(as.integer(x))))
}
Nepal_seqToInd_dict <- 1:length(Nepal_PP$Taxon)
names(Nepal_seqToInd_dict) <- Nepal_PP$Taxon
head(Nepal_seqToInd_dict)
Nepal_ggCaller_intermed_consensus[1,-1]
unlist(Nepal_ggCaller_intermed_consensus[1,-1])
Nepal_seq_clusters_dict[unlist(Nepal_ggCaller_intermed_consensus[1,-1])]==212
head(Nepal_seq_clusters_dict)
head(unlist(Nepal_ggCaller_intermed_consensus[1,-1]))
Nepal_seq_clusters_dict[unlist(Nepal_ggCaller_intermed[1,-1])]==212
Nepal_seq_clusters_dict[unlist(Nepal_ggCaller_intermed[1,-1])]==150
cons_genomes <- function(x){
as.double(ceiling(median(as.integer(x))))
}
Nepal_ggCaller_intermed_consensus <- data.frame(matrix(0, nrow = sum(Nepal_gene_filter)+1, ncol = no_Nepal_PP+1))
Nepal_ggCaller_intermed_consensus[1,-1] <- paste("SeqCl_",unique(Nepal_PP$Cluster),sep = "")
for (i in unique(Nepal_PP$Cluster)) {
Nepal_ggCaller_intermed_consensus[-1,i+2] <- apply(as.matrix(Nepal_ggCaller_intermed[-1,c(FALSE,Nepal_seq_clusters_dict[unlist(Nepal_ggCaller_intermed[1,-1])]==i)]), 1, cons_genomes)
}
as.integer(Nepal_seq_clusters_dict[unlist(Nepal_ggCaller_intermed[1,-1])]==1)
unlist(Nepal_ggCaller_intermed[1,-1])
Nepal_seq_clusters_dict[unlist(Nepal_ggCaller_intermed[1,-1])]
length(unlist(Nepal_ggCaller_intermed[1,-1]))
length(Nepal_seq_clusters_dict)

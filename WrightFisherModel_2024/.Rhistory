x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
NFDS_fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
params <- c(all_other_params, m = fit_params[1], v = fit_params[2])
WFmodel <- WF_nG_h_vP$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(null_WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- null_WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
NFDS_fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
params <- c(all_other_params, sigma_f = fit_params[1], sigma_w = fit_params[2], prop_f = fit_params[3], m = fit_params[4], v = fit_params[5])
WFmodel <- WF_nG_h_vP$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(null_WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- null_WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, delta = ggC_delta_ranking, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, vacc_time = 0)
ggCPP_fitting <- NFDS_fitting_closure(ggCPP_params)
start_params <- c(0.15, 0.05, 0.25, 0.03, 0.05)
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
NFDS_fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
params <- c(all_other_params, sigma_f = fit_params[1], sigma_w = fit_params[2], prop_f = fit_params[3], m = fit_params[4], v = fit_params[5])
WFmodel <- WF_nG_h_vP$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(null_WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- null_WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, delta = ggC_delta_ranking, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, vacc_time = 0)
ggCPP_fitting <- NFDS_fitting_closure(ggCPP_params)
start_params <- c(0.15, 0.05, 0.25, 0.03, 0.05)
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
ggCPP_fitting <- NFDS_fitting_closure(ggCPP_params, PP_mass_cluster_freq_2, PP_mass_cluster_freq_3)
start_params <- c(0.15, 0.05, 0.25, 0.03, 0.05)
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
NFDS_fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
params <- c(all_other_params, sigma_f = fit_params[1], sigma_w = fit_params[2], prop_f = fit_params[3], m = fit_params[4], v = fit_params[5])
WFmodel <- WF_nG_h_vP$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
NFDS_fitting_closure <- function(all_other_params, data1, data2){
null_fit_dfoptim <- function(fit_params){
params <- c(all_other_params, sigma_f = fit_params[1], sigma_w = fit_params[2], prop_f = fit_params[3], m = fit_params[4], v = fit_params[5])
WFmodel <- WF_nG_h_vP$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
NFDS_fitting_closure <- function(all_other_params, data1, data2){
fit_dfoptim <- function(fit_params){
params <- c(all_other_params, sigma_f = fit_params[1], sigma_w = fit_params[2], prop_f = fit_params[3], m = fit_params[4], v = fit_params[5])
WFmodel <- WF_nG_h_vP$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],data1) + combined_compare(x[,1,73],data2)
}
}
ggCPP_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, delta = ggC_delta_ranking, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, vacc_time = 0)
ggCPP_fitting <- NFDS_fitting_closure(ggCPP_params, PP_mass_cluster_freq_2, PP_mass_cluster_freq_3)
start_params <- c(0.15, 0.05, 0.25, 0.03, 0.05)
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0), upper=c(1,1), control = c(rf = 3, r = 0.8))
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0,0,0,0,0), upper=c(1,1,1,1,1), control = c(rf = 3, r = 0.8))
null_man_sa
null_man_sa <- optim_sa(fun = ggCPP_fitting, start = start_params, maximization = TRUE, trace = TRUE,lower=c(0.05,0,0,0,0), upper=c(1,0.05,1,1,1), control = c(rf = 3, r = 0.8))
null_man_sa
# read in gene presence absence matrix
gene_presence_absence <- readRDS(file = "gene_presence_absence.rds")
setwd("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/WrightFisherModel_2024")
# read in gene presence absence matrix
gene_presence_absence <- readRDS(file = "gene_presence_absence.rds")
# read in gene presence absence matrix
gene_presence_absence <- readRDS(file = "../gene_presence_absence.rds")
# read in gene presence absence matrix
gene_presence_absence <- readRDS(file = "../Data/gene_presence_absence.rds")
# install.packages("drat") # -- if you don't have drat installed
# drat:::add("ncov-ic")
# install.packages("odin.dust")
library(odin.dust)
#install.packages("mcstate")
library(mcstate)
# Package for derivative-free fitting in R:
library(dfoptim)
Mass_Samples_accCodes <- readRDS(file = "Mass_Samples_accCodes.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "intermed_gene_presence_absence_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "model_start_pop.rds")
delta_ranking <- readRDS(file = "delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "mass_cluster_freq_1.rds")
mass_cluster_freq_2 <- readRDS(file = "mass_cluster_freq_2.rds")
mass_cluster_freq_3 <- readRDS(file = "mass_cluster_freq_3.rds")
mass_VT <- readRDS(file = "mass_VT.rds")
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
# copy of WrightFisherModel/WrightFisher_newData_nGenotypes_haploid_PopsizeVariablePois.R
mass_clusters <- length(unique(Mass_Samples_accCodes$SequenceCluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
params_n_vP <- list(dt = 1/36, species_no = mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(model_start_pop), Pop_eq = as.double(model_start_pop), capacity = sum(model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.2193191513, sigma_w = 0.0007111157, prop_f = 0.3735531590, delta = delta_ranking, m = 0.0052207254, migVec = avg_cluster_freq, vaccTypes = mass_VT, v = 0.1321567425, vacc_time = 0)
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
# try using dfoptim with likelihood
ll_pois <- function(obs, model) {
exp_noise <- 1e6
if (is.na(obs)) {
# Creates vector of zeros in ll with same length, if no data
ll_obs <- numeric(length(model))
} else {
lambda <- model + rexp(n = length(model), rate = exp_noise)
ll_obs <- dpois(x = obs, lambda = lambda, log = TRUE)
}
ll_obs
}
combined_compare <- function(state, observed, pars = NULL) {
result <- 0
#data_size <- sum(mass_cluster_freq_1)
#model_size = 15000
data_size <- sum(observed)
model_size = sum(state)
for (i in 1:length(observed)){
result <- result + ll_pois(observed[i], state[i]/model_size * data_size)
}
result
}
fit_dfoptim <- function(params){
all_params <- list(dt = 1/36, species_no = mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(model_start_pop), Pop_eq = as.double(model_start_pop), capacity = sum(model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = params[1], sigma_w = params[2], prop_f = params[3], delta = delta_ranking, m = params[4], migVec = avg_cluster_freq, vaccTypes = mass_VT, v = params[5], vacc_time = 0)
WFmodel <- WF_nG_h_vP$new(pars = all_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],mass_cluster_freq_2) + combined_compare(x[,1,73],mass_cluster_freq_3)
}
prev_intermed_gene_presence_absence_consensus <- readRDS(file = "prev_mass_consensus_presence_absence.rds")
prev_intermed_gene_presence_absence_consensus_matrix <- sapply(prev_intermed_gene_presence_absence_consensus[,-1],as.double)
prev_delta_ranking <- readRDS(file = "prev_delta_ranking.rds")
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
PP_intermed_gene_presence_absence_consensus <- readRDS(file = "PP_intermed_gene_presence_absence_consensus.rds")
PP_intermed_gene_presence_absence_consensus_matrix <- sapply(PP_intermed_gene_presence_absence_consensus[-1,-1],as.double)
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
#delta_ranking <- readRDS(file = "delta_ranking.rds")
PP_mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
PP_mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
PP_mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
PP_mass_clusters <- length(unique(PopPUNK_clusters$Cluster))
PP_avg_cluster_freq <- rep(1/PP_mass_clusters, PP_mass_clusters)
WF_PP <- odin.dust::odin_dust("NFDS_Model.R")
PP_fit_dfoptim <- function(params){
all_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(PP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = PP_intermed_gene_presence_absence_consensus_matrix, sigma_f = params[1], sigma_w = params[2], prop_f = params[3], delta = delta_ranking, m = params[4], migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = params[5], vacc_time = 0)
WFmodel <- WF_PP$new(pars = all_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],PP_mass_cluster_freq_2) + combined_compare(x[,1,73],PP_mass_cluster_freq_3)
}
Mass_Samples_accCodes <- readRDS(file = "Mass_Samples_accCodes.rds")
ggC_intermed_gene_presence_absence_consensus <- readRDS(file = "ggC_intermed_gene_presence_absence_consensus.rds")
ggC_intermed_gene_presence_absence_consensus_matrix <- sapply(ggC_intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "model_start_pop.rds")
ggC_delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "mass_cluster_freq_1.rds")
mass_cluster_freq_2 <- readRDS(file = "mass_cluster_freq_2.rds")
mass_cluster_freq_3 <- readRDS(file = "mass_cluster_freq_3.rds")
mass_VT <- readRDS(file = "mass_VT.rds")
WF_ggC <- odin.dust::odin_dust("NFDS_Model.R")
# copy of WrightFisherModel/WrightFisher_newData_nGenotypes_haploid_PopsizeVariablePois.R
mass_clusters <- length(unique(Mass_Samples_accCodes$SequenceCluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
params_ggC <- list(dt = 1/36, species_no = mass_clusters,  gene_no = nrow(ggC_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(model_start_pop), Pop_eq = as.double(model_start_pop), capacity = sum(model_start_pop), Genotypes = ggC_intermed_gene_presence_absence_consensus_matrix, sigma_f = 0.2193191513, sigma_w = 0.0007111157, prop_f = 0.3735531590, delta = ggC_delta_ranking, m = 0.0052207254, migVec = avg_cluster_freq, vaccTypes = mass_VT, v = 0.1321567425, vacc_time = 0)
ggC_WFmodel <- WF_ggC$new(pars = params_ggC,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
ggC_fit_dfoptim <- function(params){
all_params <- list(dt = 1/36, species_no = mass_clusters,  gene_no = nrow(ggC_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(model_start_pop), Pop_eq = as.double(model_start_pop), capacity = sum(model_start_pop), Genotypes = ggC_intermed_gene_presence_absence_consensus_matrix, sigma_f = params[1], sigma_w = params[2], prop_f = params[3], delta = ggC_delta_ranking, m = params[4], migVec = avg_cluster_freq, vaccTypes = mass_VT, v = params[5], vacc_time = 0)
WFmodel <- WF_ggC$new(pars = all_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],mass_cluster_freq_2) + combined_compare(x[,1,73],mass_cluster_freq_3)
}
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
ggCPP_intermed_gene_presence_absence_consensus <- readRDS(file = "ggCPP_intermed_gene_presence_absence_consensus.rds")
ggCPP_intermed_gene_presence_absence_consensus_matrix <- sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
ggC_delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
PP_mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
PP_mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
PP_mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
PP_mass_clusters <- length(unique(PopPUNK_clusters$Cluster))
PP_avg_cluster_freq <- rep(1/PP_mass_clusters, PP_mass_clusters)
ggCPP_fit_dfoptim <- function(params){
all_params <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = params[1], sigma_w = params[2], prop_f = params[3], delta = ggC_delta_ranking, m = params[4], migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = params[5], vacc_time = 0)
WFmodel <- WF_ggC$new(pars = all_params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_particles <- 10L
n_times <- 73
x <- array(NA, dim = c(WFmodel$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
combined_compare(x[,1,37],PP_mass_cluster_freq_2) + combined_compare(x[,1,73],PP_mass_cluster_freq_3)
}
PP_mass_clusters
# plot cluster freq coloured by vacc type, non VT and mixed
#create colour-vector based on VT mean info
plot_VT_colours <- rep("black",PP_mass_clusters)
for (i in 1:PP_mass_clusters){
if(PP_mass_VT[i] ==1){
plot_VT_colours[i] <- "#E69F00"
}
else if(PP_mass_VT[i] ==0){
plot_VT_colours[i] <- "#56B4E9"
}
}
# plot cluster freq coloured by vacc type, non VT and mixed
#create colour-vector based on VT mean info
plot_VT_colours <- rep("black",PP_mass_clusters)
for (i in 1:PP_mass_clusters){
if(PP_mass_VT[i] ==1){
plot_VT_colours[i] <- "#E69F00"
}
else if(PP_mass_VT[i] ==0){
plot_VT_colours[i] <- "#56B4E9"
}
}
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"))
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
# plot cluster freq coloured by vacc type, non VT and mixed
#create colour-vector based on VT mean info
plot_VT_colours <- rep("black",PP_mass_clusters)
for (i in 1:PP_mass_clusters){
if(PP_mass_VT[i] ==1){
plot_VT_colours[i] <- "#E69F00"
}
else if(PP_mass_VT[i] ==0){
plot_VT_colours[i] <- "#56B4E9"
}
}
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 21, col = plot_VT_colours)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"))
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"))
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5, ylim = c(0,0.18), xlim = c(0,0.18))
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5, ylim = c(0,0.18), xlim = c(0,0.18))
line(x = c(0,0.18), y= c(0,0.18))
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5, ylim = c(0,0.18), xlim = c(0,0.18))
abline(a=0, b=1)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
abline(a=0, b=1)
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5, ylim = c(0,0.18), xlim = c(0,0.18))
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5, ylim = c(0,0.18), xlim = c(0,0.18))
abline(a=0, b=1)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 1.5, ylim = c(0,0.18), xlim = c(0,0.18))
#abline(a=0, b=1)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 1.5)
axis(1,cex.axis = 1.5)
axis(2, cex.axis = 1.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=1.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 1.5,
line = 4.5)
box()
par(op)
par(mfrow=c(1,1))
op <- par(mar = c(5,7,4,2) + 0.1,mgp=c(3,1,0))
plot(PP_mass_cluster_freq_1 / sum(PP_mass_cluster_freq_1), PP_mass_cluster_freq_3 / sum(PP_mass_cluster_freq_3), axes = FALSE, ann = FALSE, pch = 19, col = plot_VT_colours, cex = 2.5, ylim = c(0,0.18), xlim = c(0,0.18))
#abline(a=0, b=1)
legend("topleft", title = "Clusters", c("VT", "Non-VT"),fill = c("#E69F00", "#56B4E9"), cex = 2.5)
axis(1,cex.axis = 2.5)
axis(2, cex.axis = 2.5)
title(xlab = "Pre-vaccine cluster frequency", cex.lab=2.5)
title(ylab = "Post-vaccine cluster frequency", cex.lab = 2.5,
line = 4.5)
box()
par(op)
### ggCaller
ggCaller_gene_presence_absence_2001 <- readRDS(file = "ggCaller_gene_presence_absence_2001.rds")
### ggCaller
ggCaller_gene_presence_absence_2001 <- readRDS(file = "ggCaller_gene_presence_absence_2001.rds")
ggCaller_gene_presence_absence_2004 <- readRDS(file = "ggCaller_gene_presence_absence_2004.rds")
ggCaller_gene_presence_absence_2007 <- readRDS(file = "ggCaller_gene_presence_absence_2007.rds")
gene_cluster_counts_2001 <- apply(ggCaller_gene_presence_absence_2001[-1,],1,sum)
gene_cluster_counts_2001 <- apply(ggCaller_gene_presence_absence_2001[-1,-1],1,sum)
gene_cluster_counts_2001 <- apply(as.integer(ggCaller_gene_presence_absence_2001[-1,-1]),1,sum)
sum_as_int("1")
gene_cluster_counts_2001 <- apply(ggCaller_gene_presence_absence_2001[-1,-1],1,sum_as_int)
dim(gene_cluster_counts_2001)
length(gene_cluster_counts_2001)
dim(ggCaller_gene_presence_absence_2001)
gene_cluster_counts_2001 <- apply(ggCaller_gene_presence_absence_2001[-1,-1],1,sum_as_int)/(col(ggCaller_gene_presence_absence_2001)-1)
gene_cluster_counts_2001 <- apply(ggCaller_gene_presence_absence_2001[-1,-1],1,sum_as_int)/(ncol(ggCaller_gene_presence_absence_2001)-1)
head(gene_cluster_counts_2001)
gene_cluster_counts_2007 <- apply(ggCaller_gene_presence_absence_2007[-1,-1],1,sum_as_int)/(ncol(ggCaller_gene_presence_absence_2007)-1)
plot((gene_cluster_counts_2001)), gene_cluster_counts_2007, pch = 19, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=1.5, cex.axis = 1.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 19, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=1.5, cex.axis = 1.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=1.5, cex.axis = 1.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5,cex=2.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex=2.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex=2.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5, cex = 1.5)
par(mfrow=c(1,1))
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5, cex = 1.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5, cex = 1.5)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5, cex = 1.5)
par(mar=c(5,6,4,1)+.1)
par(mar=c(5,6,4,1)+.1)
plot((gene_cluster_counts_2001), gene_cluster_counts_2007, pch = 21, xlab = "Pre-vaccine COG frequency", ylab = "Post-vaccine COG frequency",cex.lab=2.5, cex.axis = 2.5, cex = 1.5)

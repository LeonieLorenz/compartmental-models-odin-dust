mass_val2
hit <- 0
miss <- 0
miss_type1 <- 0
mass_val2 <- ""
for (mass_val in Mass_ggCaller$V1[-1]) {
nav_val <- max_map_dict[mass_val]
mass_val2 <- max_map_dict2[nav_val]
#print(mass_val)
#print(mass_val2)
if(!is.na(mass_val2) & mass_val2 == mass_val){
hit <- hit + 1
}
else if(is.na(mass_val2)){
miss_type1 <- miss_type1 + 1
}
else{
miss <- miss +1
}
}
miss_type1
miss
length(max_map_dict[mass_val])
length(max_map_dict)
3650 + 1606
hit <- 0
miss <- 0
miss_type1 <- 0
mass_val2 <- ""
for (mass_val in Mass_intermed_gene_presence_absence$V1[-1]) {
nav_val <- max_map_dict[mass_val]
mass_val2 <- max_map_dict2[nav_val]
#print(mass_val)
#print(mass_val2)
if(!is.na(mass_val2) & mass_val2 == mass_val){
hit <- hit + 1
}
else if(is.na(mass_val2)){
miss_type1 <- miss_type1 + 1
}
else{
miss <- miss +1
}
}
hit
miss
miss_type1
length(Mass_intermed_gene_presence_absence$V1[-1])
587 + 16
WF_model <- odin.dust::odin_dust("NFDS_Model.R")
seq_clusters <- readRDS("Navajo_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "Navajo_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "Navajo_model_start_pop.rds")
delta_ranking <- readRDS(file = "Navajo_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "Navajo_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "Navajo_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "Navajo_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "Navajo_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "Navajo_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "Navajo_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "Navajo_cluster_freqs_7.rds")
mass_cluster_freq_8 <- readRDS(file = "Navajo_cluster_freqs_8.rds")
mass_cluster_freq_9 <- readRDS(file = "Navajo_cluster_freqs_9.rds")
mass_cluster_freq_10 <- readRDS(file = "Navajo_cluster_freqs_10.rds")
mass_cluster_freq_11 <- readRDS(file = "Navajo_cluster_freqs_11.rds")
mass_cluster_freq_12 <- readRDS(file = "Navajo_cluster_freqs_12.rds")
mass_cluster_freq_13 <- readRDS(file = "Navajo_cluster_freqs_13.rds")
mass_cluster_freq_14 <- readRDS(file = "Navajo_cluster_freqs_14.rds")
mass_cluster_freq_15 <- readRDS(file = "Navajo_cluster_freqs_15.rds")
mass_VT <- readRDS(file = "Navajo_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "Navajo_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:14, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7, mass_cluster_freq_8, mass_cluster_freq_9,mass_cluster_freq_10, mass_cluster_freq_11, mass_cluster_freq_12, mass_cluster_freq_13,mass_cluster_freq_14,mass_cluster_freq_15))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 5
# compute serotype composition of PP clusters
Navajo_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
Navajo_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
ggCPP_params <- list(dt = 1/12, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double( model_start_pop), Pop_eq = as.double( model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.2767165, prop_f = 0.2876572, sigma_w =-1000 , delta = delta_ranking, m = -2.6442156, migVec =  avg_cluster_freq, vaccTypes =  mass_VT, v = 0.4553816 , vacc_time = 2)
WFmodel <- WF_model$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP10_Navajo <- rowMeans(WFmodel$run(108)[-1,])
simMeanggCPP13_Navajo <- rowMeans(WFmodel$run(144)[-1,])
simMeanggCPP14_Navajo <- rowMeans(WFmodel$run(156)[-1,])
simMeanggCPP15_Navajo <- rowMeans(WFmodel$run(168)[-1,])
standard_14_Navajo <- simMeanggCPP14_Navajo
# compare this VT divers run with normal run
# because the likelihood is much better but the lollipop looks basically the same.
seq_clusters <- readRDS("Navajo_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "Navajo_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "Navajo_model_start_pop.rds")
delta_ranking <- readRDS(file = "Navajo_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "Navajo_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "Navajo_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "Navajo_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "Navajo_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "Navajo_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "Navajo_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "Navajo_cluster_freqs_7.rds")
mass_cluster_freq_8 <- readRDS(file = "Navajo_cluster_freqs_8.rds")
mass_cluster_freq_9 <- readRDS(file = "Navajo_cluster_freqs_9.rds")
mass_cluster_freq_10 <- readRDS(file = "Navajo_cluster_freqs_10.rds")
mass_cluster_freq_11 <- readRDS(file = "Navajo_cluster_freqs_11.rds")
mass_cluster_freq_12 <- readRDS(file = "Navajo_cluster_freqs_12.rds")
mass_cluster_freq_13 <- readRDS(file = "Navajo_cluster_freqs_13.rds")
mass_cluster_freq_14 <- readRDS(file = "Navajo_cluster_freqs_14.rds")
mass_cluster_freq_15 <- readRDS(file = "Navajo_cluster_freqs_15.rds")
mass_VT <- readRDS(file = "Navajo_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "Navajo_VT_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:14, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7, mass_cluster_freq_8, mass_cluster_freq_9,mass_cluster_freq_10, mass_cluster_freq_11, mass_cluster_freq_12, mass_cluster_freq_13,mass_cluster_freq_14,mass_cluster_freq_15))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 2 # trying vacc time =2 instead of 5 as before
ceil_mass_NVT <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
ceil_mass_NVT[i] <- ceiling(mean(as.integer(seq_clusters[seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT"]=="NVT")))
}
#ceil_mass_NVT[is.nan(ceil_mass_NVT)] <- 0
mean_mass_VT_start <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
mean_mass_VT_start[i] <- (mean(as.integer(seq_clusters[seq_clusters$SeqYear == 1999 & seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT"]=="VT")))
}
mean_mass_VT_start[is.nan(mean_mass_VT_start)] <- 0
NVT_mig <- rep(1/mass_clusters, mass_clusters) * (ceil_mass_NVT)
VT_mig <- rep(1/mass_clusters, mass_clusters) * (1-ceil_mass_NVT)
avg_cluster_freq <- data.frame(as.matrix(cbind(NVT_mig,VT_mig)))
model_start_pop <- matrix(as.double(c(model_start_pop * (1-mean_mass_VT_start),model_start_pop * mean_mass_VT_start)), byrow = FALSE, nrow = mass_clusters, ncol = 2)
ggCPP_params <- list(dt = 1/12, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = pars_from_mcmc_Navajo[1], prop_f = pars_from_mcmc_Navajo[2], sigma_w =-1000 , delta = delta_ranking, m = pars_from_mcmc_Navajo[3], migVec =  as.matrix(avg_cluster_freq), v = pars_from_mcmc_Navajo[4] , vT = c(0,1), vacc_time = 0)
Navajo_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
Navajo_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
WF <- odin.dust::odin_dust("NFDS_Model_VT.R")
WFmodel <- WF$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP10_Navajo <- rowMeans(WFmodel$run(108)[-1,])[1:mass_clusters]
simMeanggCPP13_Navajo <- rowMeans(WFmodel$run(144)[-1,])[1:mass_clusters]
simMeanggCPP14_Navajo <- rowMeans(WFmodel$run(156)[-1,])[1:mass_clusters]
VT_14 <- simMeanggCPP14_Navajo # computed here
# compute serotype composition of PP clusters
Navajo_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
Navajo_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
lollipop_cluster_freqs_VTandNVT_labelSero_relative_ModelComp(year = "tp 14", plot_title = "Navajo - Standard vs. VT-divers Model", data_name = "Data", data1 = mass_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = VT_14/sum(VT_14), model_name_2 ="Standard Model", model2 = standard_14_Navajo/sum(standard_14_Navajo), mass_VT, SeroLabel = Navajo_PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative_ModelComp(year = "tp 14", plot_title = "Navajo - Standard vs. VT-divers Model", data_name = "Data", data1 = mass_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = VT_14/sum(VT_14), model_name_2 ="Standard Model", model2 = standard_14_Navajo/sum(standard_14_Navajo), mass_VT, SeroLabel = Navajo_PP_serotype_comp)
# plotting VT and non-VT separately
mass_VT_cluster_freq_14 <- readRDS(file = "Navajo_VT_cluster_freqs_14.rds")
mass_NVT_cluster_freq_14 <- readRDS(file = "Navajo_NVT_cluster_freqs_14.rds")
simMeanggCPP14_Navajo_NVT <- rowMeans(WFmodel$run(156)[-1,])[(mass_clusters +1):(2*mass_clusters)]
simMeanggCPP14_Navajo_VT <- rowMeans(WFmodel$run(156)[-1,])[(2*mass_clusters +1):(3*mass_clusters)]
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 14 - VTs", plot_title = "Navajo - Standard vs. VT-divers Model", data_name = "VT data", data1 = mass_VT_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = simMeanggCPP14_Navajo_VT/sum(VT_14), VT_vec =  rep(1,mass_clusters), SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "tp 14 - NVTs", plot_title = "Navajo", data_name = "VT data", data1 = mass_NVT_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = simMeanggCPP14_Navajo_NVT/sum(VT_14), VT_vec =  rep(0,mass_clusters), SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "tp 14 - VTs", plot_title = "Navajo", data_name = "VT data", data1 = mass_VT_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = simMeanggCPP14_Navajo_VT/sum(VT_14), VT_vec =  rep(1,mass_clusters), SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 14 - VTs", plot_title = "Navajo", data_name = "VT data", data1 = mass_VT_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = simMeanggCPP14_Navajo_VT/sum(VT_14), VT_vec =  rep(1,mass_clusters), SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 14 - NVTs", plot_title = "Navajo", data_name = "VT data", data1 = mass_NVT_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="VT-divers Model", model1 = simMeanggCPP14_Navajo_NVT/sum(VT_14), VT_vec =  rep(0,mass_clusters), SeroLabel = Navajo_PP_serotype_comp)
# Mass
Mass_PPxSero <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_08_14/Mass_PPxSero/PPxSero_ggCaller_PopPUNK_det_pmcmc_run2.rds")
Mass_PPxSero_mcmc <- coda::as.mcmc(cbind(Mass_PPxSero$probabilities, Mass_PPxSero$pars))
coda::effectiveSize(Mass_PPxSero_mcmc)
summary(coda::as.mcmc(Mass_PPxSero_mcmc))
#plot(Navajo_PPxSero_mcmc)
pars_from_mcmc_Mass<- map_estimate(Mass_PPxSero$pars[, 1:4])$MAP_Estimate
#
read_VT_data_and_lollipop("Mass", pars_from_mcmc_Mass)
# try to find maximum a posteriori estimate (map)
#install.packages("bayestestR")
library(bayestestR)
#plot(Navajo_PPxSero_mcmc)
pars_from_mcmc_Mass<- map_estimate(Mass_PPxSero$pars[, 1:4])$MAP_Estimate
#
read_VT_data_and_lollipop("Mass", pars_from_mcmc_Mass)
#
read_VT_data_and_lollipop("Mass", pars_from_mcmc_Mass)
#
read_VT_data_and_lollipop("Mass", pars_from_mcmc_Mass)
read_VT_data_and_lollipop <- function(loc, pars_from_mcmc){
if(loc == "Mass"){
seq_clusters <- readRDS("PopPUNK_clusters.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "ggCPP_intermed_gene_presence_absence_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
#delta_ranking <- readRDS(file = "ggC_delta_ranking3.rds")
mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
#mass_VT <- readRDS(file = "PP_mass_VT_mean.rds")
mass_VT <- readRDS(file = "PP_mass_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "4param_ggCaller_PopPUNK"
# process data with particle filter:
dt <- 1/36 # we assume that the generation time of Strep. pneumo is 1 month
# we have data from 2001, 2004, 2007, so we want 3 (years) * 12 (months) = 36 updates in-between
ceil_mass_NVT <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
ceil_mass_NVT[i] <- ceiling(mean(as.integer(seq_clusters[seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT"]=="NVT")))
}
#ceil_mass_NVT[is.nan(ceil_mass_NVT)] <- 0
mean_mass_VT_2001 <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
mean_mass_VT_2001[i] <- (mean(as.integer(seq_clusters[seq_clusters$SeqYear == 2001 & seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT"]=="VT")))
}
mean_mass_VT_2001[is.nan(mean_mass_VT_2001)] <- 0
NVT_mig <- rep(1/mass_clusters, mass_clusters) * (ceil_mass_NVT)
VT_mig <- rep(1/mass_clusters, mass_clusters) * (1-ceil_mass_NVT)
avg_cluster_freq <- as.matrix(cbind(NVT_mig,VT_mig))
model_start_pop <- matrix(as.double(c(model_start_pop * (1-mean_mass_VT_2001),model_start_pop * mean_mass_VT_2001)), byrow = FALSE, nrow = mass_clusters, ncol = 2)
output_filename <- "VT_ggCaller_PopPUNK"
peripost_mass_cluster_freq <- data.frame("year" = c(1, 2), rbind(mass_cluster_freq_2, mass_cluster_freq_3))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 0
PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
ggCPP_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = pars_from_mcmc[1], prop_f = pars_from_mcmc[2], sigma_w =-1000 , delta = delta_ranking, m = pars_from_mcmc[3], migVec =  as.matrix(avg_cluster_freq), v = pars_from_mcmc[4] , vT = c(0,1), vacc_time = 0)
WF <- odin.dust::odin_dust("NFDS_Model_VT.R")
WFmodel <- WF$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
VT_divers_0 <- rowMeans(WFmodel$run(0)[-1,])[1:mass_clusters]
VT_divers_36 <- rowMeans(WFmodel$run(36)[-1,])[1:mass_clusters]
VT_divers_72 <- rowMeans(WFmodel$run(48)[-1,])[1:mass_clusters]
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = VT_divers_0/sum(VT_divers_0), VT_vec = mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = VT_divers_36/sum(VT_divers_36), VT_vec = mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = VT_divers_72/sum(VT_divers_72),  VT_vec = mass_VT, SeroLabel = PP_serotype_comp)
}
if(loc == "UK"){
seq_clusters <- readRDS("UK_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "UK_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "UK_model_start_pop.rds")
delta_ranking <- readRDS(file = "UK_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "UK_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "UK_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "UK_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "UK_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "UK_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "UK_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "UK_cluster_freqs_7.rds")
mass_VT <- readRDS(file = "UK_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "UK_VT_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:6, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 0
ceil_mass_NVT <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
ceil_mass_NVT[i] <- ceiling(mean(as.integer(seq_clusters[seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT_PCV7"]=="NVT")))
}
#ceil_mass_NVT[is.nan(ceil_mass_NVT)] <- 0
mean_mass_VT_2001 <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
mean_mass_VT_2001[i] <- (mean(as.integer(seq_clusters[seq_clusters$Time == 2006 & seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT_PCV7"]=="VT")))
}
mean_mass_VT_2001[is.nan(mean_mass_VT_2001)] <- 0
NVT_mig <- rep(1/mass_clusters, mass_clusters) * (ceil_mass_NVT)
VT_mig <- rep(1/mass_clusters, mass_clusters) * (1-ceil_mass_NVT)
avg_cluster_freq <- data.frame(as.matrix(cbind(NVT_mig,VT_mig)))
model_start_pop <- matrix(as.double(c(model_start_pop * (1-mean_mass_VT_2001),model_start_pop * mean_mass_VT_2001)), byrow = FALSE, nrow = mass_clusters, ncol = 2)
UK_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
UK_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
ggCPP_params <- list(dt = 1/12, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = pars_from_mcmc[1], prop_f = pars_from_mcmc[2], sigma_w =-1000 , delta = delta_ranking, m = pars_from_mcmc[3], migVec =  as.matrix(avg_cluster_freq), v = pars_from_mcmc[4] , vT = c(0,1), vacc_time = 0)
WF <- odin.dust::odin_dust("NFDS_Model_VT.R")
WFmodel <- WF$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
#simMeanggCPP1_UK <- rowMeans(WFmodel$run(0)[-1,])[1:mass_clusters]
simMeanggCPP4_UK <- rowMeans(WFmodel$run(36)[-1,])[1:mass_clusters]
simMeanggCPP5_UK <- rowMeans(WFmodel$run(48)[-1,])[1:mass_clusters]
simMeanggCPP6_UK <- rowMeans(WFmodel$run(60)[-1,])[1:mass_clusters]
simMeanggCPP7_UK <- rowMeans(WFmodel$run(72)[-1,])[1:mass_clusters]
lollipop_cluster_freqs_VTandNVT_labelSero(year = "Winter 2012/13", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_7/sum(mass_cluster_freq_7), model_name_1 ="Model", model1 = simMeanggCPP7_UK/sum(simMeanggCPP7_UK), VT_vec = mass_VT, SeroLabel = UK_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "Winter 2011/12", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_6/sum(mass_cluster_freq_6), model_name_1 ="Model", model1 = simMeanggCPP6_UK/sum(simMeanggCPP6_UK), VT_vec = mass_VT, SeroLabel = UK_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "Winter 2009/10", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_4/sum(mass_cluster_freq_4), model_name_1 ="Model", model1 = simMeanggCPP4_UK/sum(simMeanggCPP4_UK), VT_vec = mass_VT, SeroLabel = UK_PP_serotype_comp)
}
if(loc == "Navajo"){
seq_clusters <- readRDS("Navajo_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "Navajo_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "Navajo_model_start_pop.rds")
delta_ranking <- readRDS(file = "Navajo_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "Navajo_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "Navajo_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "Navajo_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "Navajo_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "Navajo_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "Navajo_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "Navajo_cluster_freqs_7.rds")
mass_cluster_freq_8 <- readRDS(file = "Navajo_cluster_freqs_8.rds")
mass_cluster_freq_9 <- readRDS(file = "Navajo_cluster_freqs_9.rds")
mass_cluster_freq_10 <- readRDS(file = "Navajo_cluster_freqs_10.rds")
mass_cluster_freq_11 <- readRDS(file = "Navajo_cluster_freqs_11.rds")
mass_cluster_freq_12 <- readRDS(file = "Navajo_cluster_freqs_12.rds")
mass_cluster_freq_13 <- readRDS(file = "Navajo_cluster_freqs_13.rds")
mass_cluster_freq_14 <- readRDS(file = "Navajo_cluster_freqs_14.rds")
mass_cluster_freq_15 <- readRDS(file = "Navajo_cluster_freqs_15.rds")
mass_VT <- readRDS(file = "Navajo_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "Navajo_VT_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:14, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7, mass_cluster_freq_8, mass_cluster_freq_9,mass_cluster_freq_10, mass_cluster_freq_11, mass_cluster_freq_12, mass_cluster_freq_13,mass_cluster_freq_14,mass_cluster_freq_15))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 2 # trying vacc time =2 instead of 5 as before
ceil_mass_NVT <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
ceil_mass_NVT[i] <- ceiling(mean(as.integer(seq_clusters[seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT"]=="NVT")))
}
#ceil_mass_NVT[is.nan(ceil_mass_NVT)] <- 0
mean_mass_VT_start <- rep(0, mass_clusters)
for (i in 1:mass_clusters){
mean_mass_VT_start[i] <- (mean(as.integer(seq_clusters[seq_clusters$SeqYear == 1999 & seq_clusters$Cluster == unique(seq_clusters$Cluster)[i],"VT"]=="VT")))
}
mean_mass_VT_start[is.nan(mean_mass_VT_start)] <- 0
NVT_mig <- rep(1/mass_clusters, mass_clusters) * (ceil_mass_NVT)
VT_mig <- rep(1/mass_clusters, mass_clusters) * (1-ceil_mass_NVT)
avg_cluster_freq <- data.frame(as.matrix(cbind(NVT_mig,VT_mig)))
model_start_pop <- matrix(as.double(c(model_start_pop * (1-mean_mass_VT_start),model_start_pop * mean_mass_VT_start)), byrow = FALSE, nrow = mass_clusters, ncol = 2)
ggCPP_params <- list(dt = 1/12, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = ( model_start_pop), Pop_eq = Pop_eq <- rowSums(model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = pars_from_mcmc[1], prop_f = pars_from_mcmc[2], sigma_w =-1000 , delta = delta_ranking, m = pars_from_mcmc[3], migVec =  as.matrix(avg_cluster_freq), v = pars_from_mcmc[4] , vT = c(0,1), vacc_time = 0)
Navajo_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
Navajo_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
WF <- odin.dust::odin_dust("NFDS_Model_VT.R")
WFmodel <- WF$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP10_Navajo <- rowMeans(WFmodel$run(108)[-1,])[1:mass_clusters]
simMeanggCPP13_Navajo <- rowMeans(WFmodel$run(144)[-1,])[1:mass_clusters]
simMeanggCPP14_Navajo <- rowMeans(WFmodel$run(156)[-1,])[1:mass_clusters]
simMeanggCPP15_Navajo <- rowMeans(WFmodel$run(168)[-1,])[1:mass_clusters]
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 10", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_10/sum(mass_cluster_freq_10), model_name_1 ="Model", model1 = simMeanggCPP10_Navajo/sum(simMeanggCPP10_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 13", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_13/sum(mass_cluster_freq_13), model_name_1 ="Model", model1 = simMeanggCPP13_Navajo/sum(simMeanggCPP13_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 14", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_14/sum(mass_cluster_freq_14), model_name_1 ="Model", model1 = simMeanggCPP14_Navajo/sum(simMeanggCPP14_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
}
}
#
read_VT_data_and_lollipop("Mass", pars_from_mcmc_Mass)
# VT-divers fit from 08.08.2024 for Mass:
Mass_VT <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_08_08/VT_ggCaller_PopPUNK_det_pmcmc_run2.rds")
Mass_VT_mcmc <- coda::as.mcmc(cbind(Mass_VT$probabilities, Mass_VT$pars))
coda::effectiveSize(Mass_VT_mcmc)
summary(coda::as.mcmc(Mass_VT_mcmc))
# Mass
pars_from_mcmc <- map_estimate(Mass_VT$pars[, 1:4])$MAP_Estimate
read_VT_data_and_lollipop("Mass", pars_from_mcmc)
mass_VT
View(seq_clusters)
seq_clusters <- readRDS("PopPUNK_clusters.rds")
View(seq_clusters)
# 4 param fit
Mass_4param_fit <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_07_26/Mass_correctedLikelihood/4param_ggCaller_PopPUNK_det_pmcmc_run2.rds")
Mass_4param_fit_mcmc <- coda::as.mcmc(cbind(Mass_4param_fit$probabilities, Mass_4param_fit$pars))
coda::effectiveSize(Mass_4param_fit_mcmc)
plot(Mass_4param_fit_mcmc)
#corrected
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.0958228, sigma_w = -1000, prop_f = 0.3107495, delta = ggC_delta_ranking, m = -4.1434129, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1366157, vacc_time = 0)
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), PP_mass_VT, SeroLabel = PP_serotype_comp)
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
PP_intermed_gene_presence_absence_consensus <- readRDS(file = "PP_intermed_gene_presence_absence_consensus.rds")
PP_intermed_gene_presence_absence_consensus_matrix <- sapply(PP_intermed_gene_presence_absence_consensus[-1,-1],as.double)
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
#delta_ranking <- readRDS(file = "delta_ranking.rds")
PP_mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
PP_mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
PP_mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
PP_mass_clusters <- length(unique(PopPUNK_clusters$Cluster))
PP_avg_cluster_freq <- rep(1/PP_mass_clusters, PP_mass_clusters)
#corrected
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.0958228, sigma_w = -1000, prop_f = 0.3107495, delta = ggC_delta_ranking, m = -4.1434129, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1366157, vacc_time = 0)
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2001", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_1/sum(PP_mass_cluster_freq_1), model_name_1 ="Model", model1 = PP_model_start_pop/sum(PP_model_start_pop), VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2004", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_2/sum(PP_mass_cluster_freq_2), model_name_1 ="Model", model1 = simMeanggCPP2/sum(simMeanggCPP2), VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), VT_vec = PP_mass_VT, SeroLabel = PP_serotype_comp)
# 4 param fit
Mass_4param_fit <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_07_26/Mass_correctedLikelihood/4param_ggCaller_PopPUNK_det_pmcmc_run2.rds")
Mass_4param_fit_mcmc <- coda::as.mcmc(cbind(Mass_4param_fit$probabilities, Mass_4param_fit$pars))
summary(coda::as.mcmc(Mass_4param_fit_mcmc))
exp(-2.0569)
exp(-4.4570 )
log(0.45649)
exp(0.45649)
log(0.56043)
exp(-1.5)
exp(-2)
0.56043/-2.0569 * 0.1278497
exp(-2)
exp(-1)
log(0.0115971)
mass_cluster_freq_4
mass_cluster_freq_7 <- readRDS(file = "UK_cluster_freqs_7.rds")
mass_cluster_freq_7
mass_cluster_freq_1
plot(mass_cluster_freq_1)
plot((mass_cluster_freq_1 + mass_cluster_freq_2 + mass_cluster_freq_3 + mass_cluster_freq_4 + mass_cluster_freq_5 + mass_cluster_freq_6 + mass_cluster_freq_7)/sum((mass_cluster_freq_1 + mass_cluster_freq_2 + mass_cluster_freq_3 + mass_cluster_freq_4 + mass_cluster_freq_5 + mass_cluster_freq_6 + mass_cluster_freq_7)))
plot((mass_cluster_freq_1 + mass_cluster_freq_2 + mass_cluster_freq_3 + mass_cluster_freq_4 + mass_cluster_freq_5 + mass_cluster_freq_6 + mass_cluster_freq_7))
mass_cluster_freq_1 <- readRDS(file = "UK_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "UK_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "UK_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "UK_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "UK_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "UK_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "UK_cluster_freqs_7.rds")
plot((mass_cluster_freq_1 + mass_cluster_freq_2 + mass_cluster_freq_3 + mass_cluster_freq_4 + mass_cluster_freq_5 + mass_cluster_freq_6 + mass_cluster_freq_7))
sum_UK_data <- (mass_cluster_freq_1 + mass_cluster_freq_2 + mass_cluster_freq_3 + mass_cluster_freq_4 + mass_cluster_freq_5 + mass_cluster_freq_6 + mass_cluster_freq_7)
sum_UK_data
max(sum_UK_data)
count_cluster_size_UK <- rep(0, (max(sum_UK_data) +1) )
which(sum_UK_data == 1)
count_cluster_size_UK <- rep(0, (max(sum_UK_data) +1) )
for (i in 1:(max(sum_UK_data) +1)) {
count_cluster_size_UK[i] <- length(which(sum_UK_data == i))
}
count_cluster_size_UK
plot(count_cluster_size_UK)
dpois(80,1)
dpois(0:80,1)
lines(dpois(0:80,1))
plot(count_cluster_size_UK/sum(count_cluster_size_UK))
lines(dpois(0:80,1))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,1))
lines(dpois(0:80,1))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.5))
lines(dpois(0:80,1))
lines(dpois(0:80,1), col = "red")
dnbinom(0:80, 100, 0.5, log = FALSE)
plot(dnbinom(0:80, 100, 0.5, log = FALSE))
plot(dnbinom(0:80, 1, 0.5, log = FALSE))
plot(dnbinom(0:80, 2, 0.5, log = FALSE))
plot(dnbinom(0:80, 3, 0.5, log = FALSE))
plot(dnbinom(0:80, 3, mu =1, log = FALSE))
plot(dnbinom(0:80, 1, mu =1, log = FALSE))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.5))
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
lines(dpois(0:80,1), col = "red")
lines(dnbinom(0:80, 1, mu =2, log = FALSE))
lines(dpois(0:80,2), col = "red")
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines(dpois(0:80,1), col = "red")
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
lines(dnbinom(0:80, 10, mu =1, log = FALSE))
plot(dnbinom(0:80, 10, mu =1, log = FALSE))
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
plot(dnbinom(0:80, 10, mu =1, log = FALSE), ylim = c(0,1))
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
lines(dnbinom(0:80, 20, mu =1, log = FALSE))
lines(dnbinom(0:80, 2, mu =1, log = FALSE))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines(dnbinom(0:80, 10, mu =1, log = FALSE))
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
lines(dpois(0:80,10), col = "red")
lines(dpois(0:80,9), col = "red")
lines(dpois(0:80,8), col = "red")
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines(dpois(0:80,8), col = "red")
(dpois(0:80,8) + dpois(0:80,1))
sum((dpois(0:80,8) + dpois(0:80,1)))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines((dpois(0:80,8) + dpois(0:80,1))/(dpois(0:80,8) + dpois(0:80,1)), col = "red")
plot((dpois(0:80,8) + dpois(0:80,1))/(dpois(0:80,8) + dpois(0:80,1)), col = "red")
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines((dpois(0:80,8) + dpois(0:80,1))/sum(dpois(0:80,8) + dpois(0:80,1)), col = "red")
lines(dnbinom(0:80, 1, mu =1, log = FALSE))
lines(dnbinom(0:80, 10, mu =1, log = FALSE))
plot(count_cluster_size_UK/sum(count_cluster_size_UK), ylim = c(0,0.6))
lines((dpois(0:80,8) + dpois(0:80,1))/sum(dpois(0:80,8) + dpois(0:80,1)), col = "red")

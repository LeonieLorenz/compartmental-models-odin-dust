length(gene_Navajo_Mass_dict)
### check whether Mass to Navajo mapping is the same as Navajo to Mass mapping
mismatch_example_navajo <- ""
mismatch_example_mass <- ""
### check whether Mass to Navajo mapping is the same as Navajo to Mass mapping
mismatch_example_navajo <- ""
mismatch_example_mass <- ""
mismatch_count <- 0
for (i in 1:length(gene_Navajo_Mass_dict)) {
najavo <- names(gene_Navajo_Mass_dict)[i]
mass <- gene_Navajo_Mass_dict[i]
if(gene_Mass_Navajo_dict[mass] != najavo){
mismatch_count <- mismatch_count +1
mismatch_example_navajo <- najavo
mismatch_example_mass <- mass
}
}
mismatch_example_navajo
mismatch_example_mass
gene_Navajo_Mass_dict[mismatch_example_navajo]
gene_Mass_Navajo_dict[mismatch_example_mass]
View(mmseq_results_NavajoMass)
gene_Navajo_Mass_dict["ERS069953_02103~~~ERS043878_02470"]
gene_Mass_Navajo_dict["ERS069953_02103~~~ERS043878_02470"]
### check whether Mass to Navajo mapping is the same as Navajo to Mass mapping
mismatch_example_navajo <- ""
mismatch_example_mass <- ""
mismatch_count <- 0
for (i in 1:length(gene_Navajo_Mass_dict)) {
navajo <- names(gene_Navajo_Mass_dict)[i]
mass <- gene_Navajo_Mass_dict[i]
if(gene_Mass_Navajo_dict[mass] != navajo){
mismatch_count <- mismatch_count +1
mismatch_example_navajo <- navajo
mismatch_example_mass <- mass
}
}
mismatch_example_navajo
mismatch_example_mass
mmseq_results_MassNavajo_sorted <- mmseq_results_MassNavajo[order(mmseq_results_MassNavajo$V3),]
View(mmseq_results_MassNavajo_sorted)
mmseq_results_MassNavajo_sorted <- mmseq_results_MassNavajo[-order(mmseq_results_MassNavajo$V3),]
mmseq_results_MassNavajo_sorted <- mmseq_results_MassNavajo[order(mmseq_results_MassNavajo$V3, decreasing = TRUE),]
gene_Mass_Navajo_dict_greedy <- c()
val_Mass_Navajo_dict_greedy <- c()
curr_gene <- ""
unique(mmseq_results_MassNavajo_sorted$V1)
length(unique(mmseq_results_MassNavajo_sorted$V1))
gene_Mass_Navajo_dict_greedy <- c()
names(gene_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
gene_Mass_Navajo_dict_greedy <- rep("", length(unique(mmseq_results_MassNavajo_sorted$V1)))
names(gene_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
val_Mass_Navajo_dict_greedy <- rep(0, length(unique(mmseq_results_MassNavajo_sorted$V1)))
names(val_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
curr_gene <- ""
removed_genes <- c()
gene_Mass_Navajo_dict_greedy <- rep("", length(unique(mmseq_results_MassNavajo_sorted$V1)))
names(gene_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
val_Mass_Navajo_dict_greedy <- rep(0, length(unique(mmseq_results_MassNavajo_sorted$V1)))
names(val_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
removed_genes <- c()
curr_gene <- ""
#curr_val <- 0
for (i in 1:nrow(mmseq_results_MassNavajo_sorted)) {
if(val_Mass_Navajo_dict_greedy[curr_gene] < mmseq_results_MassNavajo_sorted$V3[i]){
if(! is.element(mmseq_results_MassNavajo_sorted$V2[i], removed_genes)){
val_Mass_Navajo_dict_greedy[curr_gene] <- mmseq_results_MassNavajo_sorted$V3[i]
gene_Mass_Navajo_dict_greedy[curr_gene] <- mmseq_results_MassNavajo_sorted$V2[i]
removed_genes <- c(removed_genes, mmseq_results_MassNavajo_sorted$V2[i])
}
}
}
gene_Mass_Navajo_dict_greedy <- rep("", length(unique(mmseq_results_MassNavajo_sorted$V1)))
names(gene_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
val_Mass_Navajo_dict_greedy <- rep(0, length(unique(mmseq_results_MassNavajo_sorted$V1)))
names(val_Mass_Navajo_dict_greedy) <- unique(mmseq_results_MassNavajo_sorted$V1)
removed_genes <- c()
curr_gene <- ""
#curr_val <- 0
for (i in 1:nrow(mmseq_results_MassNavajo_sorted)) {
curr_gene <- mmseq_results_MassNavajo_sorted$V1[i]
if(val_Mass_Navajo_dict_greedy[curr_gene] < mmseq_results_MassNavajo_sorted$V3[i]){
if(! is.element(mmseq_results_MassNavajo_sorted$V2[i], removed_genes)){
val_Mass_Navajo_dict_greedy[curr_gene] <- mmseq_results_MassNavajo_sorted$V3[i]
gene_Mass_Navajo_dict_greedy[curr_gene] <- mmseq_results_MassNavajo_sorted$V2[i]
removed_genes <- c(removed_genes, mmseq_results_MassNavajo_sorted$V2[i])
}
}
}
head(gene_Mass_Navajo_dict_greedy)
gene_Mass_Navajo_dict_greedy[1:10]
# do greedy version Navajo Mass
mmseq_results_NavajoMass_sorted <- mmseq_results_NavajoMass[order(mmseq_results_NavajoMass$V3, decreasing = TRUE),]
gene_Navajo_Mass_dict_greedy <- rep("", length(unique(mmseq_results_NavajoMass_sorted$V1)))
names(gene_Navajo_Mass_dict_greedy) <- unique(mmseq_results_NavajoMass_sorted$V1)
val_Navajo_Mass_dict_greedy <- rep(0, length(unique(mmseq_results_NavajoMass_sorted$V1)))
names(val_Navajo_Mass_dict_greedy) <- unique(mmseq_results_NavajoMass_sorted$V1)
removed_genes <- c()
curr_gene <- ""
#curr_val <- 0
for (i in 1:nrow(mmseq_results_NavajoMass_sorted)) {
curr_gene <- mmseq_results_NavajoMass_sorted$V1[i]
if(gene_Navajo_Mass_dict_greedy[curr_gene] < mmseq_results_NavajoMass_sorted$V3[i]){
if(! is.element(mmseq_results_NavajoMass_sorted$V2[i], removed_genes)){
val_Mass_Navajo_dict_greedy[curr_gene] <- mmseq_results_NavajoMass_sorted$V3[i]
gene_Navajo_Mass_dict_greedy[curr_gene] <- mmseq_results_NavajoMass_sorted$V2[i]
removed_genes <- c(removed_genes, mmseq_results_NavajoMass_sorted$V2[i])
}
}
}
gene_Navajo_Mass_dict_greedy[1:10]
### check whether greedy Mass to Navajo mapping is more similar
mismatch_example_navajo <- ""
mismatch_example_mass <- ""
mismatch_count <- 0
for (i in 1:length(gene_Navajo_Mass_dict_greedy)) {
navajo <- names(gene_Navajo_Mass_dict_greedy)[i]
mass <- gene_Navajo_Mass_dict_greedy[i]
if(gene_Mass_Navajo_dict_greedy[mass] != navajo){
mismatch_count <- mismatch_count +1
mismatch_example_navajo <- navajo
mismatch_example_mass <- mass
}
}
### check whether greedy Mass to Navajo mapping is more similar
mismatch_example_navajo <- ""
mismatch_example_mass <- ""
mismatch_count <- 0
for (i in 1:length(gene_Navajo_Mass_dict_greedy)) {
navajo <- names(gene_Navajo_Mass_dict_greedy)[i]
mass <- gene_Navajo_Mass_dict_greedy[i]
if(gene_Mass_Navajo_dict_greedy[mass] != navajo | ! is.element(mass, names(gene_Mass_Navajo_dict_greedy))){
mismatch_count <- mismatch_count + 1
mismatch_example_navajo <- navajo
mismatch_example_mass <- mass
}
}
mismatch_count
# 4 param fit
Mass_4param_fit <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_07_26/Mass_correctedLikelihood/4param_ggCaller_PopPUNK_det_pmcmc_run2.rds")
head(Mass_4param_fit$pars)
## ggplot version
library(ggplot2)
ggpairs(Mass_4param_fit$pars)
install.packages("GGally")
library(GGally)
ggpairs(Mass_4param_fit$pars)
ggpairs(Mass_4param_fit$pars, title = "Mass")
# 4 param fit with vacc2 (pcv7 and pcv13 seperately) with 6A in PCV7
Navajo_4param_fit <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_07_24/Navajo_newPCV7_2vacc/Navajo_ggCaller_PopPUNK2vacc_det_pmcmc_run2.rds")
ggpairs(Navajo_4param_fit$pars, title = "Navajo")
ggpairs(Navajo_4param_fit$pars, title = "Navajo", upper = list(continuous = wrap("cor", size = 9)))
ggpairs(Navajo_4param_fit$pars, title = "Navajo", upper = list(continuous = wrap("cor", size = 5)))
ggpairs(Navajo_4param_fit$pars, title = "Navajo", upper = list(continuous = wrap("cor", size = 7)))
ggpairs(Mass_4param_fit$pars, title = "Mass", upper = list(continuous = wrap("cor", size = 7)))
# 4 param fit with two vaccines with 6A in PCV7
UK_4param_fit <- readRDS("/Users/llorenz/Documents/PhD_Project/Code/1st_project/WF_plots_postTAC/2024_07_24/UK_newPCV7_2vacc/UK_ggCaller_PopPUNK2vacc_det_pmcmc_run2.rds")
ggpairs(UK_4param_fit$pars, title = "Southampton", upper = list(continuous = wrap("cor", size = 7)))
# install.packages("odin")
library(odin)
# install.packages("odin.js")
library(odin.js)
install.packages("odin.js")
library(odin.js)
# install.packages("devtools")
library(devtools)
library(stringr)
load_all() # loads functions from SBMLtoOdin package
rmultinom(1, 15000, c(0.1, 0.2, 0.2, 0.4, 0.1))
rpois(15000, 1500)
rpois(1, 1500)
rmultinom(1, 15000, c(0.1, 0.2, 0.2, 0.4, 0.1))
rpois(5, 15000 * c(0.1, 0.2, 0.2, 0.4, 0.1))
sum(rmultinom(1, 15000, c(0.1, 0.2, 0.2, 0.4, 0.1))
[,1])
sum(rpois(5, 15000 * c(0.1, 0.2, 0.2, 0.4, 0.1)))
rpois(10, 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1))
sim_data <- rpois(10, 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1))
dmultinom(x = sim_data, prob = c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1))
dpois(x = sim_data, lambda = 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1))
sum(dpois(x = sim_data, lambda = 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1)))
prod(dpois(x = sim_data, lambda = 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1)))
sim_data <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1))
dmultinom(x = sim_data, prob = c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1))
prod(dpois(x = sim_data, lambda = 15000 * c(0.05, 0.05, 0.05, 0.2, 0.05, 0.1, 0.1, 0.2, 0.1, 0.1)))
sim_data2 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.15, 0.2, 0.2))
set.seed(73)
sim_data <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2))
sim_data2 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.15, 0.2, 0.2))
# sim_data (probs the same between data and likelihood)
dmultinom(x = sim_data, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2))
# [1] 2.987616e-19
prod(dpois(x = sim_data, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)))
# sim_data2 (probs not the same between data and likelihood)
dmultinom(x = sim_data2, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2))
# 1.418246e-20
prod(dpois(x = sim_data2, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2)))
set.seed(73)
sim_data <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
sim_data2 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.15, 0.3))
# sim_data (probs the same between data and likelihood)
dmultinom(x = sim_data, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
# sim_data (probs the same between data and likelihood)
dmultinom(x = sim_data, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 1.418246e-20
prod(dpois(x = sim_data, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
# sim_data2 (probs not the same between data and likelihood)
dmultinom(x = sim_data2, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
# sim_data2 (probs not the same between data and likelihood)
dmultinom(x = sim_data2, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 2.43223e-191
prod(dpois(x = sim_data2, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))))
# 2.43223e-191
prod(dpois(x = sim_data2, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
sim_data3 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.35))
# sim_data2 changed size of mid-size clusters
dmultinom(x = sim_data3, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 4.136072e-189
prod(dpois(x = sim_data3, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
sim_data4 <- rpois(10, lambda = 15000 * c(0.025, 0.05, 0.05, 0.075, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
sim_data5 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.75, 0.1, 0.1, 0.1, 0.125, 0.3))
# sim_data4 changed size of small clusters
dmultinom(x = sim_data4, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 3.997718e-132
prod(dpois(x = sim_data4, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
# sim_data5 changed size of mid-size clusters
dmultinom(x = sim_data5, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 2.981278e-108
prod(dpois(x = sim_data5, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
sim_data5 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.75, 0.1, 0.1, 0.1, 0.125, 0.3))
# sim_data5 changed size of mid-size clusters
dmultinom(x = sim_data5, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 2.981278e-108
prod(dpois(x = sim_data5, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
sum(c(0.05, 0.05, 0.05, 0.05, 0.75, 0.1, 0.1, 0.1, 0.125, 0.3))
sum(c(0.025, 0.05, 0.05, 0.075, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
sim_data5 <- rpois(10, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.075, 0.1, 0.1, 0.1, 0.125, 0.3))
# sim_data5 changed size of mid-size clusters
dmultinom(x = sim_data5, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
# 2.981278e-108
prod(dpois(x = sim_data5, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
install.packages("philentropy")
library(philentropy)
JSD(x = sim_data)
JSD(x = rbind(sim_data, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data2, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data2, sim_data))
JSD(x = rbind(sim_data, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data2, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data3, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data4, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data5, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
# 3.884976e-68
prod(dpois(x = sim_data5, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)), log = TRUE)
# 3.884976e-68
prod(dpois(x = sim_data5, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)), log = FALSE)
sum(sim_data)
sim_data6 rmultinom(n = 10, size = 15000, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
sim_data6 <- rmultinom(n = 10, size = 15000, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
sim_data6
sim_data6 <- rmultinom(n = 1, size = 15000, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
sum(sim_data6)
sim_data6
dmultinom(x = sim_data6, prob = c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3))
prod(dpois(x = sim_data6, lambda = 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
JSD(x = rbind(sim_data6, 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
sim_data6
JSD(x = rbind(t(sim_data6), 15000 * c(0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3)))
WF_model <- odin.dust::odin_dust("NFDS_Model.R")
seq_clusters <- readRDS("Navajo_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "Navajo_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "Navajo_model_start_pop.rds")
delta_ranking <- readRDS(file = "Navajo_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "Navajo_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "Navajo_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "Navajo_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "Navajo_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "Navajo_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "Navajo_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "Navajo_cluster_freqs_7.rds")
mass_cluster_freq_8 <- readRDS(file = "Navajo_cluster_freqs_8.rds")
mass_cluster_freq_9 <- readRDS(file = "Navajo_cluster_freqs_9.rds")
mass_cluster_freq_10 <- readRDS(file = "Navajo_cluster_freqs_10.rds")
mass_cluster_freq_11 <- readRDS(file = "Navajo_cluster_freqs_11.rds")
mass_cluster_freq_12 <- readRDS(file = "Navajo_cluster_freqs_12.rds")
mass_cluster_freq_13 <- readRDS(file = "Navajo_cluster_freqs_13.rds")
mass_cluster_freq_14 <- readRDS(file = "Navajo_cluster_freqs_14.rds")
mass_cluster_freq_15 <- readRDS(file = "Navajo_cluster_freqs_15.rds")
mass_VT <- readRDS(file = "Navajo_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "Navajo_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:14, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7, mass_cluster_freq_8, mass_cluster_freq_9,mass_cluster_freq_10, mass_cluster_freq_11, mass_cluster_freq_12, mass_cluster_freq_13,mass_cluster_freq_14,mass_cluster_freq_15))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 5
# compute serotype composition of PP clusters
Navajo_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
Navajo_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
source("CreateLollipopPlot.R")
source("CreateLollipopPlot.R")
ggCPP_params <- list(dt = 1/36, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double( model_start_pop), Pop_eq = as.double( model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.2767165, prop_f = 0.2876572, sigma_w =-1000 , delta = delta_ranking, m = -2.6442156, migVec =  avg_cluster_freq, vaccTypes =  mass_VT, v = 0.4553816 , vacc_time = 2)
WFmodel <- WF_model$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP10_Navajo <- rowMeans(WFmodel$run(108)[-1,])
simMeanggCPP13_Navajo <- rowMeans(WFmodel$run(144)[-1,])
simMeanggCPP14_Navajo <- rowMeans(WFmodel$run(156)[-1,])
simMeanggCPP15_Navajo <- rowMeans(WFmodel$run(168)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 10", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_10/sum(mass_cluster_freq_10), model_name_1 ="Model", model1 = simMeanggCPP10_Navajo/sum(simMeanggCPP10_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero(year = "tp 10", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_10/sum(mass_cluster_freq_10), model_name_1 ="Model", model1 = simMeanggCPP10_Navajo/sum(simMeanggCPP10_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "tp 13", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_13/sum(mass_cluster_freq_13), model_name_1 ="Model", model1 = simMeanggCPP13_Navajo/sum(simMeanggCPP13_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
source("CreateLollipopPlot.R")
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "tp 13", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_13/sum(mass_cluster_freq_13), model_name_1 ="Model", model1 = simMeanggCPP13_Navajo/sum(simMeanggCPP13_Navajo), VT_vec = mass_VT, SeroLabel = Navajo_PP_serotype_comp)
seq_clusters <- readRDS("UK_PP.rds")
intermed_gene_presence_absence_consensus <- readRDS(file = "UK_ggCaller_intermed_consensus.rds")
intermed_gene_presence_absence_consensus_matrix <- sapply(intermed_gene_presence_absence_consensus[-1,-1],as.double)
model_start_pop <- readRDS(file = "UK_model_start_pop.rds")
delta_ranking <- readRDS(file = "UK_delta_ranking.rds")
mass_cluster_freq_1 <- readRDS(file = "UK_cluster_freqs_1.rds")
mass_cluster_freq_2 <- readRDS(file = "UK_cluster_freqs_2.rds")
mass_cluster_freq_3 <- readRDS(file = "UK_cluster_freqs_3.rds")
mass_cluster_freq_4 <- readRDS(file = "UK_cluster_freqs_4.rds")
mass_cluster_freq_5 <- readRDS(file = "UK_cluster_freqs_5.rds")
mass_cluster_freq_6 <- readRDS(file = "UK_cluster_freqs_6.rds")
mass_cluster_freq_7 <- readRDS(file = "UK_cluster_freqs_7.rds")
mass_VT <- readRDS(file = "UK_VT.rds")
mass_clusters <- length(unique(seq_clusters$Cluster))
avg_cluster_freq <- rep(1/mass_clusters, mass_clusters)
output_filename <- "UK_ggCaller_PopPUNK"
dt <- 1/12
peripost_mass_cluster_freq <- data.frame("year" = 1:6, rbind(mass_cluster_freq_2,mass_cluster_freq_3,mass_cluster_freq_4,mass_cluster_freq_5,mass_cluster_freq_6, mass_cluster_freq_7))
names(peripost_mass_cluster_freq) <- c("year", as.character(1:mass_clusters))
vacc_time <- 0
# compute serotype composition of PP clusters
UK_PP_serotype_comp <- rep(0,mass_clusters)
for (i in 1:mass_clusters) {
UK_PP_serotype_comp[i] <- paste(unique(seq_clusters$Serotype[which(seq_clusters$Cluster==unique(seq_clusters$Cluster)[i])]), collapse = ", ")
}
# deterministic fit from July 23: -1.4405979  0.1000423 -3.9348562  0.1414027
# new deterministic fit from July 24 with 6A in PCV7: -2.2864083  0.1005419 -4.0242875  0.1131342
mass_VT <- readRDS(file = "UK_VT.rds")
ggCPP_params <- list(dt = 1/12, species_no =mass_clusters,  gene_no = nrow(intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double( model_start_pop), Pop_eq = as.double( model_start_pop), capacity = sum( model_start_pop), Genotypes = intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.2864083, prop_f = 0.1005419, sigma_w =-1000 , delta = delta_ranking, m = -4.0242875, migVec =  avg_cluster_freq, vaccTypes =  mass_VT, v = 0.1131342 , vacc_time = 0)
WF_model <- odin.dust::odin_dust("NFDS_Model.R")
WFmodel <- WF_model$new(pars = ggCPP_params,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP1_UK <- rowMeans(WFmodel$run(0)[-1,])
simMeanggCPP4_UK <- rowMeans(WFmodel$run(36)[-1,])
simMeanggCPP5_UK <- rowMeans(WFmodel$run(48)[-1,])
simMeanggCPP6_UK <- rowMeans(WFmodel$run(60)[-1,])
simMeanggCPP7_UK <- rowMeans(WFmodel$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "Winter 2012/13", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_7/sum(mass_cluster_freq_7), model_name_1 ="Model", model1 = simMeanggCPP7_UK/sum(simMeanggCPP7_UK), VT_vec = mass_VT, SeroLabel = UK_PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "Winter 2012/13", plot_title = "PopPUNK and ggCaller", data1 = mass_cluster_freq_7/sum(mass_cluster_freq_7), model_name_1 ="Model", model1 = simMeanggCPP7_UK/sum(simMeanggCPP7_UK), VT_vec = mass_VT, SeroLabel = UK_PP_serotype_comp)
source("CreateLollipopPlot.R")
PopPUNK_clusters <- readRDS("PopPUNK_clusters.rds")
ggCPP_intermed_gene_presence_absence_consensus <- readRDS(file = "ggCPP_intermed_gene_presence_absence_consensus.rds")
ggCPP_intermed_gene_presence_absence_consensus_matrix <- sapply(ggCPP_intermed_gene_presence_absence_consensus[-1,-1],as.double)
PP_model_start_pop <- readRDS(file = "PP_model_start_pop.rds")
ggC_delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
PP_mass_cluster_freq_1 <- readRDS(file = "PP_mass_cluster_freq_1.rds")
PP_mass_cluster_freq_2 <- readRDS(file = "PP_mass_cluster_freq_2.rds")
PP_mass_cluster_freq_3 <- readRDS(file = "PP_mass_cluster_freq_3.rds")
PP_mass_VT <- readRDS(file = "PP_mass_VT.rds")
PP_mass_clusters <- length(unique(PopPUNK_clusters$Cluster))
PP_avg_cluster_freq <- rep(1/PP_mass_clusters, PP_mass_clusters)
### ggCaller PopPUNK
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -0.4404874, sigma_w = -1000, prop_f = 0.1125722, delta = ggC_delta_ranking, m = -3.9657678, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1111540, vacc_time = 0)
#weighted
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -1.1594852, sigma_w = -1000, prop_f = 0.2353541, delta = ggC_delta_ranking, m = -4.4689789, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.2214515, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
WF_nG_h_vP <- odin.dust::odin_dust("NFDS_Model.R")
#weighted
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -1.1594852, sigma_w = -1000, prop_f = 0.2353541, delta = ggC_delta_ranking, m = -4.4689789, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.2214515, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
PP_mass_cluster_freq_3[2]
PP_mass_cluster_freq_3[2]/sum(PP_mass_cluster_freq_3)
0.1678571 + 0.1678571 *0.1
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
# mult
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.1445454, sigma_w = -1000, prop_f = 0.3145671, delta = ggC_delta_ranking, m = -4.4065733, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1369317, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.0958228, sigma_w = -1000, prop_f = 0.3107495, delta = ggC_delta_ranking, m = -4.1434129, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1366157, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero_shaded(year = "2007", plot_title = "PopPUNK and ggCaller", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
(simMeanggCPP3/sum(simMeanggCPP3) - PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))/(PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3))
PP_mass_cluster_freq_3
log(10)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
log(0)
log10(0)
log(0.01)
log(0.01)
log(0.1)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
log(0.01)
log(0.001)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_log(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_log(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
source("CreateLollipopPlot.R")
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller log scale", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative difference", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
#weighted
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -1.1594852, sigma_w = -1000, prop_f = 0.2353541, delta = ggC_delta_ranking, m = -4.4689789, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.2214515, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative difference", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)
# mult
params_ggCPP <- list(dt = 1/36, species_no = PP_mass_clusters,  gene_no = nrow(ggCPP_intermed_gene_presence_absence_consensus)-1, Pop_ini = as.double(PP_model_start_pop), Pop_eq = as.double(PP_model_start_pop), capacity = sum(PP_model_start_pop), Genotypes = ggCPP_intermed_gene_presence_absence_consensus_matrix, sigma_f = -2.1445454, sigma_w = -1000, prop_f = 0.3145671, delta = ggC_delta_ranking, m = -4.4065733, migVec = PP_avg_cluster_freq, vaccTypes = PP_mass_VT, v = 0.1369317, vacc_time = 0)
WFmodel_ggCPP <- WF_nG_h_vP$new(pars = params_ggCPP,
time = 0,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
simMeanggCPP2 <- rowMeans(WFmodel_ggCPP$run(36)[-1,])
simMeanggCPP3 <- rowMeans(WFmodel_ggCPP$run(72)[-1,])
lollipop_cluster_freqs_VTandNVT_labelSero_relative(year = "2007", plot_title = "PopPUNK and ggCaller relative difference", data1 = PP_mass_cluster_freq_3/sum(PP_mass_cluster_freq_3), model_name_1 ="Model", model1 = simMeanggCPP3/sum(simMeanggCPP3), PP_mass_VT, SeroLabel = PP_serotype_comp)

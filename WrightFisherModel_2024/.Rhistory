# colour these plots in by whether genes are predicted to be under NFDS or not
Mass_delta_ranking <- readRDS(file = "ggC_delta_ranking.rds")
UK_delta_ranking <- readRDS(file = "UK_delta_ranking.rds")
# UK genes under NFDS 4-param model (Dec 2024): 0.1432
# Mass genes under NFDS 4-param model (Dec 2024): 0.2797
# gene under NFDS if delta[i] <= prop_f * gene_no
Mass_delta_ranking_names <- Mass_delta_ranking
names(Mass_delta_ranking_names) <- Mass_ggC_intermed_gene_names
Mass_intermed_gene_underNFDS <- rep(0, length(Mass_delta_ranking_names))
names(Mass_intermed_gene_underNFDS) <- names(Mass_delta_ranking_names)
# new GPSC fit suggests Mass 0.2784
Mass_intermed_gene_underNFDS[which((Mass_delta_ranking_names <= 0.2784 * length(Mass_delta_ranking_names)))] <- 1
#if(Mass_delta_ranking <= 0.2797 * length(Mass_delta_ranking)) 1 else 0
UK_delta_ranking_names <- UK_delta_ranking
names(UK_delta_ranking_names) <- UK_ggC_intermed_gene_names
UK_intermed_gene_underNFDS <- rep(0, length(UK_delta_ranking_names))
names(UK_intermed_gene_underNFDS) <- names(UK_delta_ranking_names)
# and UK GPSC fit: 0.2095
UK_intermed_gene_underNFDS[which((UK_delta_ranking_names <= 0.2095 * length(UK_delta_ranking_names)))] <- 1
# expand this vector to all genes, NFDS or not
# Mass
Mass_underNFDS <- rep(0, length(Mass_ggC_all_gene_freqs_dict))
names(Mass_underNFDS) <- readRDS("Mass_ggC_all_gene_names.rds")
Mass_underNFDS[names(which(Mass_intermed_gene_underNFDS==1))] <- 1
# UK
UK_underNFDS <- rep(0, length(UK_ggC_all_gene_freqs_dict))
names(UK_underNFDS) <- readRDS("UK_ggC_all_gene_names.rds")
UK_underNFDS[names(which(UK_intermed_gene_underNFDS==1))] <- 1
# create color vector
col_clb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
colours_UKMassUnfiltered_90 <- rep("grey", length(match_UKMassUnfiltered_90))
names(colours_UKMassUnfiltered_90) <- names(match_UKMassUnfiltered_90)
colours_UKMassUnfiltered_90[names(which(UK_underNFDS[names(match_UKMassUnfiltered_90)]==1))] <- col_clb[2]
colours_UKMassUnfiltered_90[match_MassUKUnfiltered_90[names(which(Mass_underNFDS[match_UKMassUnfiltered_90]==1))]] <- col_clb[3]
colours_UKMassUnfiltered_90[intersect(names(which(UK_underNFDS[names(match_UKMassUnfiltered_90)]==1)),match_MassUKUnfiltered_90[names(which(Mass_underNFDS[match_UKMassUnfiltered_90]==1))])] <- col_clb[8]
colours_UKMassUnfiltered_95 <- rep("grey", length(match_UKMassUnfiltered_95))
names(colours_UKMassUnfiltered_95) <- names(match_UKMassUnfiltered_95)
colours_UKMassUnfiltered_95[names(which(UK_underNFDS[names(match_UKMassUnfiltered_95)]==1))] <- col_clb[2]
colours_UKMassUnfiltered_95[match_MassUKUnfiltered_95[names(which(Mass_underNFDS[match_UKMassUnfiltered_95]==1))]] <- col_clb[3]
colours_UKMassUnfiltered_95[intersect(names(which(UK_underNFDS[names(match_UKMassUnfiltered_95)]==1)),match_MassUKUnfiltered_95[names(which(Mass_underNFDS[match_UKMassUnfiltered_95]==1))])] <- col_clb[8]
colours_UKMassUnfiltered_99 <- rep("grey", length(match_UKMassUnfiltered_99))
names(colours_UKMassUnfiltered_99) <- names(match_UKMassUnfiltered_99)
colours_UKMassUnfiltered_99[names(which(UK_underNFDS[names(match_UKMassUnfiltered_99)]==1))] <- col_clb[2]
colours_UKMassUnfiltered_99[match_MassUKUnfiltered_99[names(which(Mass_underNFDS[match_UKMassUnfiltered_99]==1))]] <- col_clb[3]
colours_UKMassUnfiltered_99[intersect(names(which(UK_underNFDS[names(match_UKMassUnfiltered_99)]==1)),match_MassUKUnfiltered_99[names(which(Mass_underNFDS[match_UKMassUnfiltered_99]==1))])] <- col_clb[8]
par(pty="s")
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_90)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_90[names(match_UKMassUnfiltered_90)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 90% sequence identity", col = colours_UKMassUnfiltered_90, pch = 19)
abline(0,1)
plot(UK_ggC_all_gene_freqs_dict[names(match_UKMassUnfiltered_95)], Mass_ggC_all_gene_freqs_dict[match_UKMassUnfiltered_95[names(match_UKMassUnfiltered_95)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 95% sequence identity", col = colours_UKMassUnfiltered_95, pch = 19)
abline(0,1)
length(which(colours_UKMassUnfiltered_95 == col_clb[2]))
length(which(colours_UKMassUnfiltered_95 == col_clb[3]))
length(which(colours_UKMassUnfiltered_95 == col_clb[8]))
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 1200), ylab = "Sequence Counts")
seq_no_per_year <- rep(0, length(Nepal_time_points))
names(seq_no_per_year) <- Nepal_time_points
for (i in 1:length(Nepal_time_points)) {
seq_no_per_year[i] <- length(which(Nepal_meta_data_gps_joined$Year==Nepal_time_points[i]))
}
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 1200), ylab = "Sequence Counts")
View(Mass_Samples_accCodes)
View(UK_metadata)
which(unique(UK_metadata$Month))
(unique(UK_metadata$Month))
UK_winters
UK_SeqYear_dict
head(UK_metadata$Winter)
split_winter(UK_metadata$Winter[1])
View(Navajo_meta_data)
library(readxl)
Navajo_meta_data <- read_excel(paste(path_to_data, "StrepPneumo_Navajo/metadata.xlsx", sep = ""))
View(Navajo_meta_data)
unique(Navajo_meta_data$BEASTdate)
vapply(unique(Navajo_meta_data$BEASTdate), strsplit, ".")
vapply(unique(Navajo_meta_data$BEASTdate), strsplit, split = ".", fixed = TRUE)
sapply(unique(Navajo_meta_data$BEASTdate), strsplit, split = ".", fixed = TRUE)
strsplit(unique(Navajo_meta_data$BEASTdate)[1], split = ".", fixed = TRUE)
strsplit(unique(Navajo_meta_data$BEASTdate)[1], split = "\\.", fixed = TRUE)
strsplit(unique(Navajo_meta_data$BEASTdate)[1], split = "1999", fixed = TRUE)
unique(Navajo_meta_data$BEASTdate)[1]
strsplit(as.character(unique(Navajo_meta_data$BEASTdate)[1]), split = ".", fixed = TRUE)
sapply(as.character(unique(Navajo_meta_data$BEASTdate)), strsplit, split = ".", fixed = TRUE)
sapply(as.character(unique(Navajo_meta_data$BEASTdate)), strsplit, split = ".", fixed = TRUE, simplify = TRUE)
c(sapply(as.character(unique(Navajo_meta_data$BEASTdate)), strsplit, split = ".", fixed = TRUE, simplify = TRUE))
as.vector(sapply(as.character(unique(Navajo_meta_data$BEASTdate)), strsplit, split = ".", fixed = TRUE, simplify = TRUE))
Navajo_winters <- Navajo_meta_data$Year
split_beastYear <- function(beastYear){
month_vec <- rep("0", length(beastYear))
for (i in 1:length(beastYear)) {
month_vec[i] <- strsplit(as.character(beastYear[i]), split = ".", fixed = TRUE)[[1]][2]
}
}
split_beastYear(Navajo_meta_data$BEASTdate)
split_beastYear <- function(beastYear){
month_vec <- rep("0", length(beastYear))
for (i in 1:length(beastYear)) {
month_vec[i] <- strsplit(as.character(beastYear[i]), split = ".", fixed = TRUE)[[1]][2]
}
month_vec
}
split_beastYear(Navajo_meta_data$BEASTdate)
unique(Navajo_meta_data$BEASTdate)
tail(Navajo_meta_data$BEASTdate)
strsplit(as.character(beastYear[length(Navajo_meta_data$BEASTdate)-1]), split = ".", fixed = TRUE)[[1]][2]
strsplit(as.character(Navajo_meta_data$BEASTdate[length(Navajo_meta_data$BEASTdate)-1]), split = ".", fixed = TRUE)[[1]][2]
strsplit(as.character(Navajo_meta_data$BEASTdate[length(Navajo_meta_data$BEASTdate)]), split = ".", fixed = TRUE)[[1]][2]
Navajo_meta_data$BEASTdate[length(Navajo_meta_data$BEASTdate)-1]
as.character(Navajo_meta_data$BEASTdate)[length(Navajo_meta_data$BEASTdate)-1]
Navajo_meta_data$BEASTdate[length(Navajo_meta_data$BEASTdate)-1]
split_beastYear <- function(beastYear){
month_vec <- rep("0", length(beastYear))
for (i in 1:length(beastYear)) {
month_vec[i] <- strsplit(as.character(beastYear[i]), split = ".", fixed = TRUE)[[1]][2]
month_vec[i] <- if(is.na(month_vec[i])){"0"}
}
month_vec
}
split_beastYear(Navajo_meta_data$BEASTdate)
split_beastYear <- function(beastYear){
month_vec <- rep("0", length(beastYear))
for (i in 1:length(beastYear)) {
month_vec[i] <- strsplit(as.character(beastYear[i]), split = ".", fixed = TRUE)[[1]][2]
month_vec[i] <- if(is.na(month_vec[i])){"0"} else{month_vec[i]}
}
month_vec
}
split_beastYear(Navajo_meta_data$BEASTdate)
max(split_beastYear(Navajo_meta_data$BEASTdate))
Navajo_time_seq <- Navajo_time_points[1]:Navajo_time_points[length(Navajo_time_points)]
seq_no_per_year <- rep(0, length(Navajo_time_seq))
names(seq_no_per_year) <- Navajo_time_seq
for (i in 1:length(Navajo_time_seq)) {
seq_no_per_year[i] <- length(which(Navajo_meta_data$Year==Navajo_time_seq[i]))
}
barplot(seq_no_per_year, xlab = "Sequencing Years", ylab = "Sequence Counts", col = rainbow(15))
unique(Navajo_meta_data$Epoch2)
head(Navajo_meta_data$Epoch2)
head(Navajo_meta_data$BEASTdate)
length(which(Navajo_meta_data$Epoch2 == unique(Navajo_meta_data$Epoch2)[2]))
length(which(Navajo_meta_data$Year == unique(Navajo_meta_data$Year)[2]))
length(which(Navajo_meta_data$Year == unique(Navajo_meta_data$Year)[3]))
unique(Navajo_meta_data$Year)
sort(unique(Navajo_meta_data$Year))
length(which(Navajo_meta_data$Year == sort(unique(Navajo_meta_data$Year))[3]))
length(which(Navajo_meta_data$Year == sort(unique(Navajo_meta_data$Year))[2]))
length(which(Navajo_meta_data$Epoch2 == sort(unique(Navajo_meta_data$Epoch2))[2]))
length(which(Navajo_meta_data$Epoch2 == sort(unique(Navajo_meta_data$Epoch2))[1]))
length(which(Navajo_meta_data$Year == sort(unique(Navajo_meta_data$Year))[1]))
length(which(Navajo_meta_data$Year == sort(unique(Navajo_meta_data$Year))[4]))
2000 * 2000
# 14.01.2025
# map ggCaller results to COGs
mmseq_results_FindMassInMassCOGs_unfiltered <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindAllMassInMassCOGs/bestResultMassInMassCOGs.m8", header=FALSE)
mmseq_results_FindMassCOGsInMass_unfiltered <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/MMseqs2_results/FindAllMassCOGsInMass/bestResultMassCOGsInMass.m8", header=FALSE)
MassInMassCOGs_unfiltered_dict <- mmseq_results_FindMassInMassCOGs_unfiltered$V2
names(MassInMassCOGs_unfiltered_dict) <- mmseq_results_FindMassInMassCOGs_unfiltered$V1
FindMassCOGsInMass_unfiltered_dict <- mmseq_results_FindMassCOGsInMass_unfiltered$V2
names(FindMassCOGsInMass_unfiltered_dict) <- mmseq_results_FindMassCOGsInMass_unfiltered$V1
MassInMassCOGs_unfiltered_seq_id_vec <- mmseq_results_FindMassInMassCOGs_unfiltered$V3
MassCOGsInMass_unfiltered_seq_id_vec <- mmseq_results_FindMassCOGsInMass_unfiltered$V3
match_MassMassCOGsUnfiltered_90 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.90)
match_MassMassCOGsUnfiltered_95 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.95)
match_MassMassCOGsUnfiltered_99 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.99)
recip_matching <- function(AinB_dict, BinA_dict, seq_id_vec, seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(AinB_dict))){
name <- names(AinB_dict)[i]
val <- AinB_dict[name]
return_val <- BinA_dict[val]
if(name != return_val){
if(seq_id_vec[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(seq_id_vec[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_MassMassCOGsUnfiltered_90 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.90)
head(MassInMassCOGs_unfiltered_dict)
head(FindMassCOGsInMass_unfiltered_dict)
MassInMassCOGs_unfiltered_dict["ERS070155_01823~~~ERS043917_02470~~~ERS070129_02589~~~ERS043832_02113~~~ERS069999_01891~~~ERS043853_01597~~~ERS043890_01974~~~ERS043903_02453~~~ERS043958_02593~~~ERS044001_02212~~~ERS070035_02465~~~ERS069998_02320~~~ERS070042_01832"]
head(MassInMassCOGs_unfiltered_seq_id_vec)
recip_matching <- function(AinB_dict, BinA_dict, seq_id_vec, seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(AinB_dict))){
name <- names(AinB_dict)[i]
val <- AinB_dict[name]
return_val <- BinA_dict[val]
print(name)
print(return_val)
if(name != return_val){
if(seq_id_vec[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(seq_id_vec[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_MassMassCOGsUnfiltered_90 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.90)
recip_matching <- function(AinB_dict, BinA_dict, seq_id_vec, seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(AinB_dict))){
name <- names(AinB_dict)[i]
val <- AinB_dict[name]
return_val <- BinA_dict[val]
print("name")
print(name)
print("return")
print(return_val)
if(name != return_val){
if(seq_id_vec[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(seq_id_vec[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_MassMassCOGsUnfiltered_90 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.90)
MassInMassCOGs_unfiltered_dict["ERS043903_02433"]
FindMassCOGsInMass_unfiltered_dict["CLS02637"]
head(FindMassCOGsInMass_unfiltered_dict)
length(FindMassCOGsInMass_unfiltered_dict)
length(MassInMassCOGs_unfiltered_dict)
recip_matching <- function(AinB_dict, BinA_dict, seq_id_vec, seq_identity = 0.95){
match_count <- 0
no_match_count <- 0
match_dict <- c()
for (i in 1:length(names(AinB_dict))){
name <- names(AinB_dict)[i]
val <- AinB_dict[name]
return_val <- BinA_dict[val]
if(is.na(return_val) | name != return_val){
if(seq_id_vec[i]>=seq_identity){
no_match_count <- no_match_count + 1
}
}
else{
if(seq_id_vec[i]>=seq_identity){
match_count <- match_count + 1
match_dict[name] <- val
}
}
}
print(paste("recip matches", match_count))
print(paste("non-recip matches", no_match_count))
match_dict
}
match_MassMassCOGsUnfiltered_90 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.90)
match_MassMassCOGsUnfiltered_95 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.95)
match_MassMassCOGsUnfiltered_99 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.99)
match_MassCOGsMassUnfiltered_90 <- recip_matching(FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_dict, MassCOGsInMass_unfiltered_seq_id_vec, 0.90)
match_MassCOGsMassUnfiltered_95 <- recip_matching(FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_dict, MassCOGsInMass_unfiltered_seq_id_vec, 0.95)
match_MassCOGsMassUnfiltered_99 <- recip_matching(FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_dict, MassCOGsInMass_unfiltered_seq_id_vec, 0.99)
# make a plot that shows how frequent genes are with recip matches and those that do not have a recip match
Mass_ggC_all_gene_freqs_dict <- readRDS("Mass_ggC_all_gene_freqs.rds")
names(Mass_ggC_all_gene_freqs_dict) <- readRDS("Mass_ggC_all_gene_names.rds")
gene_freq_2001
cog_all_gene_freqs <- gene_freq_2001
saveRDS(cog_all_gene_freqs, file = "Mass_cog_all_gene_freqs.rds")
cog_all_gene_names <- gene_presence_absence_2001[-1,1]
saveRDS(cog_all_gene_names, file = "Mass_cog_all_gene_names.rds")
Mass_cog_all_gene_freqs_dict <- readRDS("Mass_cog_all_gene_freqs.rds")
names(Mass_cog_all_gene_freqs_dict) <- readRDS("Mass_cog_all_gene_names.rds")
par(pty="s")
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_90)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_90[names(match_MassMassCOGsUnfiltered_90)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 90% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_95[names(match_MassMassCOGsUnfiltered_95)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 95% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_90)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 99% sequence identity")
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 99% sequence identity")
abline(0,1)
par(pty="s")
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_90)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_90[names(match_MassMassCOGsUnfiltered_90)]], xlab = "UK gene frequencies", ylab = "Mass gene frequencies",main="All Gene Frequencies, 90% sequence identity")
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_90)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_90[names(match_MassMassCOGsUnfiltered_90)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 90% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_95[names(match_MassMassCOGsUnfiltered_95)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
abline(0,1)
head(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)])
head(Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_95[names(match_MassMassCOGsUnfiltered_95)]])
# make a plot that shows how frequent genes are with recip matches and those that do not have a recip match
Mass_ggC_all_gene_freqs_dict <- readRDS("Mass_ggC_all_gene_freqs.rds")
names(Mass_ggC_all_gene_freqs_dict) <- readRDS("Mass_ggC_all_gene_names.rds")
Mass_cog_all_gene_freqs_dict <- readRDS("Mass_cog_all_gene_freqs.rds")
names(Mass_cog_all_gene_freqs_dict) <- readRDS("Mass_cog_all_gene_names.rds")
Mass_cog_all_gene_freqs_dict
# read in gene presence absence matrix
gene_presence_absence <- readRDS(file = "gene_presence_absence.rds")
# create time-point specific gene presence absence matrices
Mass_year_dict <- c(rep(2001,length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`)),
rep(2004,length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`)),
rep(2007,length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)))
names(Mass_year_dict) <- c(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`, Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`, Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)
# empty gene presence absence matrix
gene_presence_absence_2001 <- data.frame(matrix(0, nrow = length(cls_files)+1, ncol = length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`)+1))
gene_presence_absence_2001[1,-1] <- (Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2001,]$`Isolate Name`)
gene_presence_absence_2001[-1,1] <- gene_presence_absence[-1,1]
gene_presence_absence_2001[-1,-1] <- gene_presence_absence[-1,c(FALSE,Mass_year_dict[unlist(gene_presence_absence[1,-1])]==2001)]
gene_presence_absence_2004 <- data.frame(matrix(0, nrow = length(cls_files)+1, ncol = length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`)+1))
gene_presence_absence_2004[1,-1] <- (Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2004,]$`Isolate Name`)
gene_presence_absence_2004[-1,1] <- gene_presence_absence[-1,1]
gene_presence_absence_2004[-1,-1] <- gene_presence_absence[-1,c(FALSE,Mass_year_dict[unlist(gene_presence_absence[1,-1])]==2004)]
gene_presence_absence_2007 <- data.frame(matrix(0, nrow = length(cls_files)+1, ncol = length(Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)+1))
gene_presence_absence_2007[1,-1] <- (Mass_Samples_accCodes[Mass_Samples_accCodes$`Year of Isolation`==2007,]$`Isolate Name`)
gene_presence_absence_2007[-1,1] <- gene_presence_absence[-1,1]
gene_presence_absence_2007[-1,-1] <- gene_presence_absence[-1,c(FALSE,Mass_year_dict[unlist(gene_presence_absence[1,-1])]==2007)]
# Find intermediate frequency genes in 2001 data set
# compute gene frequencies
sum_as_int <- function(x){
sum(as.integer(x))
}
gene_freq_2001 <- rep(0, nrow(gene_presence_absence_2001)-1)
gene_freq_2001 <- apply(gene_presence_absence_2001[-1,-1],1, sum_as_int)
gene_freq_2001 <- gene_freq_2001 / (length(gene_presence_absence_2001[1,-1]))
cog_filter <- as.integer(gene_freq_2001<=0.95 & gene_freq_2001>=0.05)
cog_all_gene_freqs <- gene_freq_2001
saveRDS(cog_all_gene_freqs, file = "Mass_cog_all_gene_freqs.rds")
cog_all_gene_names <- gene_presence_absence_2001[-1,1]
saveRDS(cog_all_gene_names, file = "Mass_cog_all_gene_names.rds")
# make a plot that shows how frequent genes are with recip matches and those that do not have a recip match
Mass_ggC_all_gene_freqs_dict <- readRDS("Mass_ggC_all_gene_freqs.rds")
names(Mass_ggC_all_gene_freqs_dict) <- readRDS("Mass_ggC_all_gene_names.rds")
Mass_cog_all_gene_freqs_dict <- readRDS("Mass_cog_all_gene_freqs.rds")
names(Mass_cog_all_gene_freqs_dict) <- readRDS("Mass_cog_all_gene_names.rds")
match_MassMassCOGsUnfiltered_90 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.90)
match_MassMassCOGsUnfiltered_95 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.95)
match_MassMassCOGsUnfiltered_99 <- recip_matching(MassInMassCOGs_unfiltered_dict, FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_seq_id_vec, 0.99)
match_MassCOGsMassUnfiltered_90 <- recip_matching(FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_dict, MassCOGsInMass_unfiltered_seq_id_vec, 0.90)
match_MassCOGsMassUnfiltered_95 <- recip_matching(FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_dict, MassCOGsInMass_unfiltered_seq_id_vec, 0.95)
match_MassCOGsMassUnfiltered_99 <- recip_matching(FindMassCOGsInMass_unfiltered_dict, MassInMassCOGs_unfiltered_dict, MassCOGsInMass_unfiltered_seq_id_vec, 0.99)
par(pty="s")
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_90)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_90[names(match_MassMassCOGsUnfiltered_90)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 90% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_95[names(match_MassMassCOGsUnfiltered_95)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
abline(0,1)
Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)]
head(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)])
head(Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_95[names(match_MassMassCOGsUnfiltered_95)]])
dim(gene_presence_absence)
dim(gene_presence_absence_2001)
length(gene_freq_2001)
length(ggC_gene_freq_2001)
head(gene_freq_2001)
tail(Mass_cog_all_gene_freqs_dict)
tail(Mass_ggC_all_gene_freqs_dict)
tail(sort(Mass_cog_all_gene_freqs_dict))
tail(sort(Mass_cog_all_gene_freqs_dict, decreasing = TRUE))
(sort(Mass_cog_all_gene_freqs_dict))[100]
(sort(Mass_cog_all_gene_freqs_dict))[1000]
Mass_cog_all_gene_freqs_dict['CLS00527']
head(Mass_ggC_all_gene_freqs_dict)
head(match_MassMassCOGsUnfiltered_90)
match_MassCOGsMassUnfiltered_90['CLS00527']
head(match_MassCOGsMassUnfiltered_90)
match_MassCOGsMassUnfiltered_90['CLS00096']
Mass_cog_all_gene_freqs_dict['CLS00096']
Mass_ggC_all_gene_freqs_dict["ERS043987_01355~~~ERS044048_01403~~~ERS069919_01411~~~ERS043862_01102~~~ERS069965_01291~~~ERS069949_01144~~~ERS043981_01088"]
sum(Mass_ggC_all_gene_freqs_dict)
sum(Mass_cog_all_gene_freqs_dict)
head(names(match_MassMassCOGsUnfiltered_90))
head(match_MassMassCOGsUnfiltered_90[names(match_MassMassCOGsUnfiltered_90)])
Mass_cog_all_gene_freqs_dict["CLS00681"]
Mass_ggC_all_gene_freqs_dict["ERS043903_01087"]
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
abline(0,1)
which(Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]] < 0.05)
head(match_MassCOGsMassUnfiltered_99)
match_MassCOGsMassUnfiltered_99[which(Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]] < 0.05)]
Mass_ggC_all_gene_freqs_dict[match_MassCOGsMassUnfiltered_99[which(Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]] < 0.05)]]
Mass_ggC_all_gene_freqs_dict["ERS043857_00117"]
match_MassMassCOGsUnfiltered_99["match_MassMassCOGsUnfiltered_99"]
match_MassMassCOGsUnfiltered_99["ERS043857_00117"]
Mass_ggC_all_gene_freqs_dict["CLS03197"]
Mass_cog_all_gene_freqs_dict["CLS03197"]
Mass_ggC_all_gene_freqs_dict["ERS044105_00813~~~ERS043890_00794~~~ERS070117_00685"]
match_MassMassCOGsUnfiltered_99["ERS044105_00813~~~ERS043890_00794~~~ERS070117_00685"]
Mass_cog_all_gene_freqs_dict["CLS00429"]
View(gene_presence_absence_2001)
which(cog_all_gene_names == "CLS03197")
sum(gene_presence_absence_2001[(which(cog_all_gene_names == "CLS03197"))+1,])
sum(gene_presence_absence_2001[1874,])
sum(gene_presence_absence_2001[1874,-1])
gene_presence_absence_2001[1874,-1]
sum(as.integerg(gene_presence_absence_2001[1874,-1]))
sum(as.integer(gene_presence_absence_2001[1874,-1]))
sum(as.integer(gene_presence_absence_2001[1874,-1]))/length(gene_presence_absence_2001[1874,-1])
Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)]
sort(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)])
as.vector(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)])
as.vector(Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])
Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)][153]
Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]][153]
View(ggCaller_gene_presence_absence_2001)
View(ggCaller_gene_presence_absence)
ggCaller_bool_gene_presence_absence <- readRDS("ggCaller_presence_absence_matrix.rds")
View(ggCaller_bool_gene_presence_absence)
# reading in the gene presence absence matrix produced by ggCaller
#ggCaller_gene_presence_absence <- read.csv(paste(path_to_data, "Massachusetts_ggcaller/run2/ggCaller_output/gene_presence_absence.csv", sep = ""), header=FALSE)
ggCaller_gene_presence_absence <- read.csv(paste(path_to_data, "Massachusetts_ggcaller/run_withFuncAnn/ggCaller_output/gene_presence_absence.csv", sep = ""), header=FALSE)
View(ggCaller_gene_presence_absence)
Mass_ggC_all_gene_freqs_dict["group_367"]
match_MassMassCOGsUnfiltered_99["group_367"]
match_MassMassCOGsUnfiltered_90["group_367"]
match_MassCOGsMassUnfiltered_90["group_367"]
head(match_MassMassCOGsUnfiltered_90)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_90)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_90[names(match_MassMassCOGsUnfiltered_90)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 90% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_95)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_95[names(match_MassMassCOGsUnfiltered_95)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 95% sequence identity")
abline(0,1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
abline(0,1)
View(gene_presence_absence)
seq_no_per_year <- rep(0, length(Nepal_time_points))
names(seq_no_per_year) <- Nepal_time_points
for (i in 1:length(Nepal_time_points)) {
seq_no_per_year[i] <- length(which(Nepal_meta_data_gps_joined$Year==Nepal_time_points[i]))
}
barplot(seq_no_per_year, xlab = "Sequencing Years", ylim = c(0, 1200), ylab = "Sequence Counts")
seq_no_per_year
Navajo_time_seq <- Navajo_time_points[1]:Navajo_time_points[length(Navajo_time_points)]
seq_no_per_year <- rep(0, length(Navajo_time_seq))
names(seq_no_per_year) <- Navajo_time_seq
for (i in 1:length(Navajo_time_seq)) {
seq_no_per_year[i] <- length(which(Navajo_meta_data$Year==Navajo_time_seq[i]))
}
barplot(seq_no_per_year, xlab = "Sequencing Years", ylab = "Sequence Counts", col = rainbow(15))
length(unique(Nepal_Serotype_dict))
unique(Nepal_Serotype_dict)
length(unique(Nepal_meta_dataPP$Serotype))
View(Navajo_meta_data)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)] - Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
MassCOGs_seqlengths <- read.delim("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/Mass_COGs/sequence_lengths.csv", header=FALSE)
head(MassCOGs_seqlengths)
MassCOGs_seqlengths <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/Mass_COGs/sequence_lengths.csv", header=FALSE)
head(MassCOGs_seqlengths)
MassCOGs_seqlengths <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/Mass_COGs/sequence_lengths.csv", header=TRUE)
head(MassCOGs_seqlengths)
MassCOGs_seqlengths_dict <- MassCOGs_seqlengths$Length
names(MassCOGs_seqlengths_dict) <- MassCOGs_seqlengths$GeneCluster
head(names(match_MassMassCOGsUnfiltered_99))
plot(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)] - Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
MassggC_seqlengths <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/Massachusets/sequence_lengths_AllMass.csv", header=TRUE)
MassggC_seqlengths <- read.csv("/Users/llorenz/Documents/PhD_Project/Data/Mapping_ggCaller/Massachusetts/sequence_lengths_AllMass.csv", header=TRUE)
MassggC_seqlengths_dict <- MassggC_seqlengths$Length
names(MassggC_seqlengths_dict) <- MassggC_seqlengths$GeneCluster
head(MassggC_seqlengths_dict)
plot(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)], MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene length", ylab = "Mass COG gene length",main="All Gene Frequencies, 99% sequence identity")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene length", ylab = "Mass COG gene length",main="All Gene Frequencies, 99% sequence identity")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)] - Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene length", ylab = "Mass COG gene length",main="All Gene Frequencies, 99% sequence identity")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)] - Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene length - Mass COG gene length", ylab = "Mass ggCaller gene freq - Mass COG gene freq",main="All Gene Frequencies, 99% sequence identity")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])
points(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], col = "red")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])
points(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], col = "red", pch = 19)
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])
points(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], col = "#E69F0070", pch = 19)
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)], col = "#56B4E970")
points(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], col = "#E69F0070")
plot(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)], col = "#56B4E980", pch = 19)
points(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], col = "#E69F0080", pch = 19)
plot(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]), col = "#56B4E980", pch = 19)
points(sort(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]]), col = "#E69F0080", pch = 19)
head(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]))
names(head(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])))
plot(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]), col = "#56B4E980", pch = 19)
points(sort(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(head(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])))]), col = "#E69F0080", pch = 19)
points(sort(MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(head(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]))]), col = "#E69F0080", pch = 19)
plot(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]), col = "#56B4E980", pch = 19)
points((MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]))]), col = "#E69F0080", pch = 19)
plot(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]), col = "#56B4E980", pch = 19)
points((MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(sort(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)]))]]), col = "#E69F0080", pch = 19)
plot(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])
head(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)])
which(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] > 0.1)
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
points(Mass_ggC_all_gene_freqs_dict[names(which(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] > 0.1))], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(which(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] > 0.1))]], col = "red")
plot(Mass_ggC_all_gene_freqs_dict[names(match_MassMassCOGsUnfiltered_99)], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]], xlab = "Mass ggCaller gene frequencies", ylab = "Mass COG gene frequencies",main="All Gene Frequencies, 99% sequence identity")
points(Mass_ggC_all_gene_freqs_dict[names(which(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] > 0.2))], Mass_cog_all_gene_freqs_dict[match_MassMassCOGsUnfiltered_99[names(which(abs(MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] - MassCOGs_seqlengths_dict[match_MassMassCOGsUnfiltered_99[names(match_MassMassCOGsUnfiltered_99)]])/MassggC_seqlengths_dict[names(match_MassMassCOGsUnfiltered_99)] > 0.2))]], col = "red")

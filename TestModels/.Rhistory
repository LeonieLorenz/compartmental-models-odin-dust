}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(0,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0,0,0,0,0.1))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 2L)
WFmodel_nG_h$state()
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
#WFmodel_nG_h$update_state(pars = params_n, time = 0,seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(0,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0,0,0,0,0.1))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 2L)
WFmodel_nG_h$state()
WFmodel_nG_h$run(1)
WFmodel_nG_h$run(2)
WFmodel_nG_h$run(3)
WFmodel_nG_h$run(40)
WFmodel_nG_h$run(41)
WFmodel_nG_h$run(42)
WFmodel_nG_h$run(43)
WFmodel_nG_h$run(44)
WFmodel_nG_h$run(45)
WFmodel_nG_h$run(50)
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
#WFmodel_nG_h$update_state(pars = params_n, time = 0,seed = 1L)
WFmodel_nG_h$state()
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.1,0,0,0,0.1))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 2L)
WFmodel_nG_h$state()
WFmodel_nG_h$run(1)
WFmodel_nG_h$run(2)
WFmodel_nG_h$run(3)
WFmodel_nG_h$run(40)
WFmodel_nG_h$run(41)
WFmodel_nG_h$run(42)
WFmodel_nG_h$run(43)
WFmodel_nG_h$run(44)
WFmodel_nG_h$run(45)
WFmodel_nG_h$run(50)
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 2L)
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
WFmodel_nG_h$run(10)
WFmodel_nG_h$run(20)
WFmodel_nG_h$run(30)
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.01,0,0,0,0.01))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.01,0,0,0,0.02))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.02))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
WFmodel_nG_h$run(10)
WFmodel_nG_h$run(20)
WFmodel_nG_h$run(30)
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
params_n <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.03))
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
WFmodel_nG_h$run(10)
WFmodel_nG_h$run(20)
WFmodel_nG_h$run(30)
dt <- 1
n_particles <- 10L
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
dt <- 1
n_particles <- 10L
#WFmodel_nG_h$update_state(pars = params_n, time = 0)
WFmodel_nG_h <- WF_nG_h$new(pars = params_n,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
matplot(time, t(x[1, , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, t(x[species,, ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols,  legend = 1:length(x[,1,1]), bty = "n")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R")
setwd("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/TestModels")
WF_nG_h <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid.R", workdir="build")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
lang_output <- function(x, lang) {
cat(c(sprintf("```%s", lang), x, "```"), sep = "\n")
}
cc_output <- function(x) lang_output(x, "cc")
r_output <- function(x) lang_output(x, "r")
plain_output <- function(x) lang_output(x, "plain")
r_output(readLines(file.path("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")))
library(odin.dust)
WF_nG_h_vB <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")
WF_nG_h_vB <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")
WF_nG_h_vB <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")
WF_nG_h_vB <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")
WF_nG_h_vB <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")
WF_nG_h_vB <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariableBinom.R")
params_n_vB <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(100,4), Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.03))
WFmodel_nG_h_vB_vB <- WF_nG_h_vB$new(pars = params_n_vB,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h_vB_vB$state()
WFmodel_nG_h_vB$run(10)
WFmodel_nG_h_vB <- WF_nG_h_vB$new(pars = params_n_vB,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h_vB$state()
WFmodel_nG_h_vB$run(10)
WFmodel_nG_h_vB$run(20)
WFmodel_nG_h_vB$run(30)
dt <- 1
n_particles <- 10L
WFmodel_nG_h_vB <- WF_nG_h_vB$new(pars = params_n_vB,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h_vB$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h_vB$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h_vB$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
lang_output <- function(x, lang) {
cat(c(sprintf("```%s", lang), x, "```"), sep = "\n")
}
cc_output <- function(x) lang_output(x, "cc")
r_output <- function(x) lang_output(x, "r")
plain_output <- function(x) lang_output(x, "plain")
r_output(readLines(file.path("WrightFisher_nGenotypes_haploid_PopsizeVariablePois.R")))
WF_nG_h_vP_vP <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariablePois.R")
params_n_vP <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.03))
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WF_nG_h_vP <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariablePois.R")
params_n_vP <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(.25,4), pop_size = 400, Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.03))
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h_vP$state()
WFmodel_nG_h_vP$run(10)
WF_nG_h_vP <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariablePois.R")
params_n_vP <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(100,4), Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.03))
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WF_nG_h_vP <- odin.dust::odin_dust("WrightFisher_nGenotypes_haploid_PopsizeVariablePois.R")
params_n_vP <- list(dt = 1, species_no = 4,  gene_no = 5, Pop_ini = rep(100,4), Genotypes = cbind(c(1,0,0,0,0),c(0,0,1,0,0),c(1,0,0,0,1),c(0,0,0,0,1)), GeneFitness = c(0.02, 0, 0, 0, 0.03))
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h_vP$state()
WFmodel_nG_h_vP$run(10)
WFmodel_nG_h_vP$run(20)
WFmodel_nG_h_vP$run(30)
dt <- 1
n_particles <- 10L
WFmodel_nG_h_vP <- WF_nG_h_vP$new(pars = params_n_vP,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_nG_h_vP$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_nG_h_vP$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_nG_h_vP$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("right", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")

### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,200), r_C = c(.2,.2), K = c(200,200), alpha_pos = matrix(data = c(0,0,0,0),nrow = 2, ncol = 2, byrow = TRUE), alpha_neg = matrix(data = c(1,1,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("bottomleft", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
LVC_modelN$run(3)
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,2000), r_C = c(.2,.2), K = c(200,200), alpha_pos = matrix(data = c(0,0,0,0),nrow = 2, ncol = 2, byrow = TRUE), alpha_neg = matrix(data = c(1,1,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
LVC_modelN$run(3)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("bottomleft", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,2000), r_C = c(.2,.2), K = c(200,200), alpha_pos = matrix(data = c(0,0,0,0),nrow = 2, ncol = 2, byrow = TRUE), alpha_neg = matrix(data = c(1,100,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
LVC_modelN$run(3)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
library(odin.dust)
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,2000), r_C = c(.2,.2), K = c(200,200), alpha_pos = matrix(data = c(0,0,0,0),nrow = 2, ncol = 2, byrow = TRUE), alpha_neg = matrix(data = c(1,100,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
LVC_modelN$run(3)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("bottomleft", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,2000000), r_C = c(.2,.2), K = c(200,200), alpha_pos = matrix(data = c(0,0,0,0),nrow = 2, ncol = 2, byrow = TRUE), alpha_neg = matrix(data = c(1,1,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("bottomleft", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
mat1 <- matrix(data = c(1,-1,.5,-1), nrow=2, ncol=2)
mat2 <- matrix(data=zeros(4), nrow = 2, ncol = 2)
zero
zeros
mat2 <- matrix(data=rep(0,4), nrow = 2, ncol = 2)
mat2 <- mat1>0
mat2
mat1 >0
mat1 if (mat1>0)
if(mat1>0){mat2 <- mat1}
mat2 <- max(mat1,0)
mat2
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
lang_output <- function(x, lang) {
cat(c(sprintf("```%s", lang), x, "```"), sep = "\n")
}
cc_output <- function(x) lang_output(x, "cc")
r_output <- function(x) lang_output(x, "r")
plain_output <- function(x) lang_output(x, "plain")
r_output(readLines(file.path("LotkaVolterraCompN.R")))
library(odin.dust)
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
max(1,2)
abs(max(1,2))
abs(max(1,-2))
abs(min(1,-2))
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
setwd("~/Documents/PhD_Project/Code/1st_project/odin-dust-examples/TestModels")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
max(0)
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,2000000), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,.2,-.5,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,2000), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,.2,-.5,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
LVC_modelN$run(1)
LVC_modelN$run(2)
LVC_modelN$run(3)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,.2,-.5,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.2,.5,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
LVC_modelN$state()
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
LotVolCompN <- odin.dust::odin_dust("LotkaVolterraCompN.R")
#params <- list(dt = 1, species_no = 3, C_ini = c(200,200,200), r_C = c(0.2,0.2,0.1), K = c(200,200,200), alpha = matrix(data = c(1,0,.1,.5,1,-.2,.1,.4,1),nrow = 3, ncol = 3, byrow = TRUE))
#params <- list(dt = 1, species_no = 4, C_ini = c(200,200,200,200), r_C = c(0.2,0.2,0.1,0.2), K = c(200,200,200,200), alpha = matrix(data = c(1,0,.1,.5,.2,1,.4,-.2,.1,.4,1,.3,.1,-.4,-.2,1),nrow = 4, ncol = 4, byrow = TRUE))
#params <- list(dt = 1, species_no = 9, C_ini = rep(200,9), r_C = rep(.2,9), K = rep(200,9), alpha = diag(9)) #test with nine compartments
### parameter values that cause issues with version 1
params <- list(dt = 1, species_no = 2, C_ini = c(50,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.2,.5,1),nrow = 2, ncol = 2, byrow = TRUE))
#### parameter values that cause issues with version 2
#params <- list(dt = 1, species_no = 2, C_ini = c(500,200), r_C = c(.2,.2), K = c(200,200), alpha = matrix(data = c(1,-.5,.2,1),nrow = 2, ncol = 2, byrow = TRUE))
LVC_modelN <- LotVolCompN$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
dt <- 1
n_particles <- 10L
p_new <- params
LVC_modelN$update_state(pars = p_new, time = 0)
LVC_modelN$state()
n_times <- 500
x <- array(NA, dim = c(LVC_modelN$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- LVC_modelN$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("bottomleft", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
lang_output <- function(x, lang) {
cat(c(sprintf("```%s", lang), x, "```"), sep = "\n")
}
cc_output <- function(x) lang_output(x, "cc")
r_output <- function(x) lang_output(x, "r")
plain_output <- function(x) lang_output(x, "plain")
r_output(readLines(file.path("WrightFisher_1Allele_haploid.R")))
library(odin.dust)
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
params <- list(dt = 1, B_ini = .5, pop_size = 100, gen = 100)
WFmodel_1A_h <- WF_1A_h$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_1A_h$state()
rbinom(1,100,.5)
rbinom(1,100,.5)
rbinom(1,100,.5)
rbinom(1,100,.5)
rbinom(1,100,.5)
WF_1A_h <- odin.dust::odin_dust("WrightFisher_1Allele_haploid.R")
params <- list(dt = 1, B_ini = .5, pop_size = 100, gen = 100)
WFmodel_1A_h <- WF_1A_h$new(pars = params,
time = 1,
n_particles = 10L,
n_threads = 4L,
seed = 1L)
WFmodel_1A_h$state()
LVC_modelN$run(10)
WFmodel_1A_h$run(10)
WFmodel_1A_h$run(20)
WFmodel_1A_h$run(30)
dt <- 1
n_particles <- 10L
p_new <- params
WFmodel_1A_h$update_state(pars = p_new, time = 0)
WFmodel_1A_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_1A_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_1A_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
# probably should find a more dynamic way for models with >8 species?
matplot(time, (x[1,1 , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
for (species in 2:length(x[,1,1])) {
matlines(time, (x[species,1 , ]), col = cols[species:length(x[,1,1])], lty = 1)
}
legend("bottomleft", lwd = 1, col = cols[1:length(x[,1,1])], legend = 1:length(x[,1,1]), bty = "n")
dt <- 1
n_particles <- 10L
p_new <-params
WFmodel_1A_h$update_state(pars = p_new, time = 0)
WFmodel_1A_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_1A_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_1A_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
matplot(time, t(x[1, , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
matlines(time, t(x[2, , ]), col = cols[2], lty = 1)
legend("left", lwd = 1, col = cols, legend = names(cols), bty = "n")
dt <- 1
n_particles <- 10L
p_new <-params
WFmodel_1A_h$update_state(pars = p_new, time = 0)
WFmodel_1A_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_1A_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_1A_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
matplot(time, t(x[1, , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
matlines(time, t(x[2, , ]), col = cols[2], lty = 1)
legend("left", lwd = 1, col = cols,  legend = 1:length(x[,1,1]), bty = "n")
dt <- 1
n_particles <- 10L
p_new <-params
WFmodel_1A_h$update_state(pars = p_new, time = 0)
#WFmodel_1A_h$state()
n_times <- 500
x <- array(NA, dim = c(WFmodel_1A_h$info()$len, n_particles, n_times))
for (t in seq_len(n_times)) {
x[ , , t] <- WFmodel_1A_h$run(t)
}
time <- x[1, 1, ]
x <- x[-1, , ]
par(mar = c(4.1, 5.1, 0.5, 0.5), las = 1)
if (length(x[,1,1]) <= 8){
cols <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") #8 colorblind friendly colors
} else {
cols <- rainbow(length(x[,1,1]))
}
matplot(time, t(x[1, , ]), type = "l",
xlab = "Time", ylab = "Number of individuals",
col = cols[1], lty = 1, ylim = range(x))
matlines(time, t(x[2, , ]), col = cols[2], lty = 1)
legend("left", lwd = 1, col = cols,  legend = 1:length(x[,1,1]), bty = "n")
